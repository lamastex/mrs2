digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{PhyloTree\n|- root\l- CharacterSpace\l|+ PhyloTree()\l+ PhyloTree()\l+ PhyloTree()\l+ ~PhyloTree()\l+ PrintTree()\l+ getRoot()\l+ getNumberNodes()\l+ getNumberBranches()\l+ fillProbRealJC69()\l+ fillProbIntervalJC69()\l+ fillProbHessJC69()\l+ fillProbRealCFN()\l- DecodeTree()\l- TreeFileErrorExit()\l- findTime()\l- findLabel()\l- findSeqNo()\l- PhyloTree()\l- operator=()\l- nodePOTreal()\l- nodePOTinterval()\l- nodePOTHess()\l- PrintBranch()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" root" ,arrowhead="odiamond"];
  Node2 [label="{PhyloNode\n|- ibranch\l- seq_no\l- time\l- label\l- seq_name\l- parent\l- childNodes\l|+ PhyloNode()\l+ ~PhyloNode()\l+ getParent()\l+ getChildren()\l+ getBranch()\l+ getTime()\l+ getLabel()\l+ getSeqNo()\l+ getSeqName()\l+ setBranch()\land 8 more...- PhyloNode()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPhyloNode.shtml",tooltip="A class for nodes of a phylogenetic tree."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" childNodes" ,arrowhead="odiamond"];
  Node3 [label="{std::vector\< PhyloNode * \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node3 [color="grey25",fontsize="10",style="solid",label=" elements" ,arrowhead="odiamond"];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< PhyloNode * \>" ];
  Node4 [label="{std::vector\< T \>\n|+ elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" elements" ,arrowhead="odiamond"];
  Node5 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" seq_name" ,arrowhead="odiamond"];
  Node6 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{std::basic_string\< char \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node2 -> Node2 [color="grey25",fontsize="10",style="solid",label=" parent" ,arrowhead="odiamond"];
}
