digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{subpavings::SPnode\n|# theBox\l# dimension\l# label\l# parent\l# leftChild\l# rightChild\l# nodeName\l|+ SPnode()\l+ SPnode()\l+ SPnode()\l+ SPnode()\l+ SPnode()\l+ SPnode()\l+ ~SPnode()\l+ operator=()\l+ recursiveRename()\l+ isSplittableNode()\land 49 more...+ getParent()\l+ getLeftChild()\l+ getRightChild()\l+ leavesOutputTabs()\l+ leavesOutputTabs()\l+ nodesAllOutput()\l+ nodesAllOutput()\l+ vecLeafBoxOuterJacket()\l+ spLeafBoxOuterJacket()\l+ volOuterJacket()\l+ vecLeafBoxIntersection()\l+ spLeafBoxIntersection()\l+ volIntersection()\l+ vecLeafBoxDifference()\l+ vecBoxNodeDifference()\l+ spLeafBoxDifference()\l+ volDifference()\l+ makeTreeFromLeaves()\l+ makeTreeFromVoxels()\l+ vtkPaving()\l# splitLeft()\l# _reshapeToUnion()\l- constructor_error_handler()\l* getParent()\l* getLeftChild()\l* getRightChild()\l* leavesOutputTabs()\l* leavesOutputTabs()\l* nodesAllOutput()\l* nodesAllOutput()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{subpavings::MappedSPnode\< cxsc::real \>\n||+ ~MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ operator=()\l+ getParent()\land 8 more...* range\l* slice()\l* acceptSPExpandVisitor()\l* acceptSPValueVisitor()\l* operator+=()\l* operator+=()\l* operator+()\l* operator+()\l* operator-=()\l* operator-=()\land 29 more...}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1MappedSPnode.shtml"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{subpavings::RealMappedSPnode\n||+ ~RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\l+ RealMappedSPnode()\land 32 more...- _start_marginalise()\l- _marginalise()\l- _normalise()\l- _getL1distance()\l- nodeL1Distance()\l- _getLogLikelihood()\l- oneLineOutput()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1RealMappedSPnode.shtml",tooltip="A derived class based on MappedSPnode &lt; cxsc::real &gt;."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{subpavings::CollatorSPnode\n|- summary\l|+ CollatorSPnode()\l+ CollatorSPnode()\l+ CollatorSPnode()\l+ CollatorSPnode()\l+ operator=()\l+ makeAverageCollation()\l+ getSummary()\l+ getNumberSummarised()\l+ getLeafNodeAbsAreaAccumulations()\l+ getLeafNodeSummaryAccumulations()\land 32 more...+ getParent()\l+ getLeftChild()\l+ getRightChild()\l+ addPavings()\l+ subtractPavings()\l+ _marginalise()\l+ marginalise()\l- CollatorSPnode()\l- nodeNegate()\l- leafAverageOutputTabs()\l- getLeafNodeAbsAreaAccumulations()\l- getLeafNodeAbsAreaAccumulationTotal()\l- getLeafNodeSummaryAccumulations()\l- dotDiffPaving()\l- dotDifferenceSummary()\l* getParent()\l* getLeftChild()\l* getRightChild()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1CollatorSPnode.shtml",tooltip="A derived class based on SPnode for creating summaries."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node5 [label="{subpavings::CollatorSPVnode\n|- summary\l- Vemp\l|+ CollatorSPVnode()\l+ CollatorSPVnode()\l+ CollatorSPVnode()\l+ CollatorSPVnode()\l+ CollatorSPVnode()\l+ operator=()\l+ makeAverageCollation()\l+ getSummary()\l+ getVemp()\l+ getNumberSummarised()\land 23 more...+ getParent()\l+ getLeftChild()\l+ getRightChild()\l+ addPavings()\l+ subtractPavings()\l- CollatorSPVnode()\l- leafAverageOutputTabs()\l- leafAccumulationOutputTabs()\l- leafDifferenceOutputTabs()\l- nodeAccumulation()\l- nodeDifference()\l- getLeaves()\l- getAllNodes()\l- nodeAbsAccumulation()\l- nodeAccumulationMultVol()\l- nodeAbsAccumulationMultVol()\l* getParent()\l* getLeftChild()\l* getRightChild()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1CollatorSPVnode.shtml",tooltip="A derived class based on SPnode for creating summaries."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{subpavings::MappedSPnode\< T \>\n||+ ~MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ MappedSPnode()\l+ operator=()\l+ getParent()\land 8 more...* range\l* slice()\l* acceptSPExpandVisitor()\l* acceptSPValueVisitor()\l* operator+=()\l* operator+()\l* operator+=()\l* operator+()\l* operator-=()\l* operator-()\land 29 more...}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1MappedSPnode.shtml",tooltip="A templated derived class based on SPnode."];
  Node6 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< cxsc::real \>" ];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node7 [label="{subpavings::SPSnode\n|# spaceIndication\l# splitDim\l# splitValue\l# countsOnly\l# counter\l# dpSums\l# dpSumProducts\l# dataItrs\l|+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ SPSnode()\l+ operator=()\l+ getCounter()\land 68 more...+ getParent()\l+ getLeftChild()\l+ getRightChild()\l+ getVarCovar()\l+ getVarCovar()\l+ getUniformVarCovar()\l+ getUniformVarCovar()\l+ strippedConstructor()\l+ unionTreeStructure()\l# _reshapeToUnion()\l# _reshapeToUnion()\l- recalculateStats()\l- recalculateSums()\l- recalculateSumProducts()\l- nodeExpansionOnly()\l- splitData()\l- nodeDataPrint()\l- nodeMeanPrint()\l- nodeVarCovarPrint()\l- leafOutputTabsWithEMPs()\l- leafOutputTabsWithHistHeight()\l- leafOutputTabsWithHistHeightAndEMPs()\l- setSplits()\l- gatherData()\l- unionNoData()\l* counter\l* dpSums\l* dpSumProducts\l* dataItrs\l* getParent()\l* getLeftChild()\l* getRightChild()\l* getVarCovar()\l* getVarCovar()\l* getUniformVarCovar()\l* getUniformVarCovar()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1SPSnode.shtml",tooltip="A derived class based on SPnode for processing sample data."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node8 [label="{subpavings::SPSVnode\n|# spaceIndication\l# justSplit\l# Vcounter\l# dpVSums\l# dpVSumProducts\l# VdataItrs\l|+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ SPSVnode()\l+ operator=()\l+ getVcounter()\land 40 more...+ getParent()\l+ getLeftChild()\l+ getRightChild()\l+ getVarCovar()\l+ getVarCovar()\l+ strippedConstructor()\l+ unionTreeStructure()\l- recalculateStats()\l- recalculateSums()\l- recalculateSumProducts()\l- nodeExpansionOnly()\l- splitData()\l- nodeDataPrint()\l- nodeMeanPrint()\l- nodeVarCovarPrint()\l- leafOutputTabsWithEMPs()\l- leafOutputTabsWithHistHeight()\l- leafOutputTabsWithHistHeightAndEMPs()\l- setSplits()\l- gatherData()\l- unionNoData()\l* Vcounter\l* dpVSums\l* dpVSumProducts\l* VdataItrs\l* getParent()\l* getLeftChild()\l* getRightChild()\l* getVarCovar()\l* getVarCovar()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsubpavings_1_1SPSVnode.shtml",tooltip="A derived class based on SPSnode for processing sample data split to training and validation sets..."];
}
