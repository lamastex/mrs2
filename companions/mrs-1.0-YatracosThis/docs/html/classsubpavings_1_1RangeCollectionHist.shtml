<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: subpavings::RangeCollectionHist Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1RangeCollectionHist.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">subpavings::RangeCollectionHist Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="subpavings::RangeCollectionHist" -->
<p><code>#include &lt;<a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for subpavings::RangeCollectionHist:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1RangeCollectionHist__coll__graph.png" border="0" usemap="#subpavings_1_1RangeCollectionHist_coll__map" alt="Collaboration graph"/></div>
<map name="subpavings_1_1RangeCollectionHist_coll__map" id="subpavings_1_1RangeCollectionHist_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classsubpavings_1_1RangeCollectionHist-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6a5e1b431a3cf779ca098ca63e2cff3b">RangeCollectionHistValueType</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Definition for the type for the values accessible from a rangeCollection.  <a href="#a6a5e1b431a3cf779ca098ca63e2cff3b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6a5e1b431a3cf779ca098ca63e2cff3b">RangeCollectionHistValueType</a> &gt;<br class="typebreak"/>
::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">RangeCollectionHistItr</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Definition for the type for iterating through the values in a rangeCollection.  <a href="#a65d6a1cb899b673b28913a7dfb572476"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1798364905b4d4db8aa0ffa922dbc169">RangeCollectionHist</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">No-argument constructor.  <a href="#a1798364905b4d4db8aa0ffa922dbc169"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aa65c6d75a4a00028029ce18407df9c21">RangeCollectionHist</a> (const <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> &amp;range)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor initialised with a container of values for the rangeCollection.  <a href="#aa65c6d75a4a00028029ce18407df9c21"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a5da6271ef9e881f17213072a05859636">RangeCollectionHist</a> (const cxsc::real &amp;r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor initialised with a single value for the rangeCollection.  <a href="#a5da6271ef9e881f17213072a05859636"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#af282eb9e98612d1da0eae417088d2018">RangeCollectionHist</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;other)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#af282eb9e98612d1da0eae417088d2018"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ad06f912d9345fb484445d352e2bb7348">operator=</a> (<a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> rhs)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#ad06f912d9345fb484445d352e2bb7348"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">RangeCollectionHistItr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#adbd68fcd7515aeb084af67cbe946e162">begin</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return an iterator to the start of the collection.  <a href="#adbd68fcd7515aeb084af67cbe946e162"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">RangeCollectionHistItr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab19aefc62a7559964b43e24f352063e3">end</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return an iterator to the end of the collection.  <a href="#ab19aefc62a7559964b43e24f352063e3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1d771d4ec07fd09a078615c599dbd81c">getSize</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of this.  <a href="#a1d771d4ec07fd09a078615c599dbd81c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a49d8516732a4d2d4e7a5863a502c0fda">isEmpty</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get whether the rangeCollection is empty.  <a href="#a49d8516732a4d2d4e7a5863a502c0fda"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#abf9c11987119de78dce7b2ebf0c9b17a">getRangeCollectionValues</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a copy of the elements of this as a collection of reals.  <a href="#abf9c11987119de78dce7b2ebf0c9b17a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aaee124fc1435e538fc2bb8c799032c2c">getTotal</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total of all the elements in this.  <a href="#aaee124fc1435e538fc2bb8c799032c2c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a551fea530035f92f3a9824d107f7079f">getAbsTotal</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total of the absolute values of all the elements in this.  <a href="#a551fea530035f92f3a9824d107f7079f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#adb2636c4eb438e5ebbb7cd8be9088af8">getAverageValue</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the average of all the elements in this.  <a href="#adb2636c4eb438e5ebbb7cd8be9088af8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a3829de1bc59ceff1c9ed143cb05168c2">makeAverageRangeCollection</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Make a rangeCollection containing just the average of this.  <a href="#a3829de1bc59ceff1c9ed143cb05168c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#af042b4b68c09ac3b54bcb1abdd51f78c">getAbsDiffsToAverageRangeCollection</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Make a rangeCollection containing the absolute differences of each element to their average.  <a href="#af042b4b68c09ac3b54bcb1abdd51f78c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a7a23ebb0badaa26845d97bfdb3a26dc2">reduce</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce the rangeCollection to the sum of the present values.  <a href="#a7a23ebb0badaa26845d97bfdb3a26dc2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a64e08d8b81255e1fb66fa7f9042f41dd">parallelAdd</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;rhs)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Add another the rangeCollection to this so that each element += parallel element in <em>rhs</em>.  <a href="#a64e08d8b81255e1fb66fa7f9042f41dd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#adb1fdd14f7484a22e77a7ceb65b4c8a1">operator+=</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;rhs)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append the contents of another rangeCollection to this.  <a href="#adb1fdd14f7484a22e77a7ceb65b4c8a1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a933eb6a39c07b990b5e734f2354e0300">operator+</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;rhs) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the results of appending the contents of another rangeCollection to this.  <a href="#a933eb6a39c07b990b5e734f2354e0300"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#afc613e3d9ea05a796ad256b911b91145">operator*=</a> (const cxsc::real &amp;mult)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply every element in this by <em>mult</em>.  <a href="#afc613e3d9ea05a796ad256b911b91145"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ac6d582db5cdec2575db1a91c70fa7aaa">operator*</a> (const cxsc::real &amp;mult) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the results of multipling every element in this by <em>mult</em>.  <a href="#ac6d582db5cdec2575db1a91c70fa7aaa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1fef83c6e3cd8095ceaced044990612c">operator/=</a> (const cxsc::real &amp;div)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Divide every element in this by <em>div</em>.  <a href="#a1fef83c6e3cd8095ceaced044990612c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a93a520db202a1032ec1e1b02014c10a8">operator/</a> (const cxsc::real &amp;div) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the results of dividing every element in this by <em>div</em>.  <a href="#a93a520db202a1032ec1e1b02014c10a8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ae8047b013a97315564303752a329ff45">checkRangeCollectionAllPositive</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get whether the values in this are all positive.  <a href="#ae8047b013a97315564303752a329ff45"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a265fa98459a9c678e980d111922bfddd">swap</a> (<a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;other)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Swap the contents of this and other.  <a href="#a265fa98459a9c678e980d111922bfddd"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Output this to an out stream with values</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>separated by tabs.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">os</td><td>is the stream to sent the output to. </td></tr>
    <tr><td class="paramname">prec</td><td>is the precision to use in the output. </td></tr>
  </table>
  </dd>
</dl>
</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ac34a42f1ad337dc961cda4386bcefd99">outputTabs</a> (std::ostream &amp;os, int prec) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ac005c11b0948f40d1a334f9d462d10c6">outputTabs</a> (std::ostream &amp;os) const </td></tr>
<tr><td colspan="2"><div class="groupHeader">Output the average of this to an out stream.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">os</td><td>is the stream to sent the output to. </td></tr>
    <tr><td class="paramname">prec</td><td>is the precision to use in the output. </td></tr>
  </table>
  </dd>
</dl>
</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1c9864fdfb7362224f3842631d8ce9b7">outputAverage</a> (std::ostream &amp;os, int prec) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a807af4e295c8fb507e29819e05e1ac9e">outputAverage</a> (std::ostream &amp;os) const </td></tr>
<tr><td colspan="2"><h2><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a48c339f8bcabae3f0ecd9a0b08211e54">RangeCollectionHistPrivateValueType</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a48c339f8bcabae3f0ecd9a0b08211e54">RangeCollectionHistPrivateValueType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab3b0321ac69a063bda1c70cdb9bf00ec">RangeCollectionHistPrivateType</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <br class="typebreak"/>
RangeCollectionHistPrivateType::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6e8c17437030654fc20d5d341897e806">RangeCollectionHistPrivateTypeItr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <br class="typebreak"/>
RangeCollectionHistPrivateType::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#acb2f5e2dbcc99b2efcb6bb62f010574e">RangeCollectionHistPrivateTypeConstItr</a></td></tr>
<tr><td colspan="2"><h2><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aca4bb8b2394285f14ec9af829f55d5c9">scalarMult</a> (const cxsc::real &amp;mult)</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab3b0321ac69a063bda1c70cdb9bf00ec">RangeCollectionHistPrivateType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aba0b943c3580d4ded0a82270589c3df3">container</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00050">50</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>
</div><hr/><h2>Member Typedef Documentation</h2>
<a class="anchor" id="a65d6a1cb899b673b28913a7dfb572476"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistItr" ref="a65d6a1cb899b673b28913a7dfb572476" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6a5e1b431a3cf779ca098ca63e2cff3b">RangeCollectionHistValueType</a> &gt;::const_iterator <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">subpavings::RangeCollectionHist::RangeCollectionHistItr</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition for the type for iterating through the values in a rangeCollection. </p>

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00061">61</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab3b0321ac69a063bda1c70cdb9bf00ec"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistPrivateType" ref="ab3b0321ac69a063bda1c70cdb9bf00ec" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a48c339f8bcabae3f0ecd9a0b08211e54">RangeCollectionHistPrivateValueType</a>&gt; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab3b0321ac69a063bda1c70cdb9bf00ec">subpavings::RangeCollectionHist::RangeCollectionHistPrivateType</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00205">205</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="acb2f5e2dbcc99b2efcb6bb62f010574e"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistPrivateTypeConstItr" ref="acb2f5e2dbcc99b2efcb6bb62f010574e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef RangeCollectionHistPrivateType::const_iterator <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#acb2f5e2dbcc99b2efcb6bb62f010574e">subpavings::RangeCollectionHist::RangeCollectionHistPrivateTypeConstItr</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00209">209</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6e8c17437030654fc20d5d341897e806"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistPrivateTypeItr" ref="a6e8c17437030654fc20d5d341897e806" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef RangeCollectionHistPrivateType::iterator <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6e8c17437030654fc20d5d341897e806">subpavings::RangeCollectionHist::RangeCollectionHistPrivateTypeItr</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00207">207</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a48c339f8bcabae3f0ecd9a0b08211e54"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistPrivateValueType" ref="a48c339f8bcabae3f0ecd9a0b08211e54" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef cxsc::real <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a48c339f8bcabae3f0ecd9a0b08211e54">subpavings::RangeCollectionHist::RangeCollectionHistPrivateValueType</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00203">203</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6a5e1b431a3cf779ca098ca63e2cff3b"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHistValueType" ref="a6a5e1b431a3cf779ca098ca63e2cff3b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef cxsc::real <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a6a5e1b431a3cf779ca098ca63e2cff3b">subpavings::RangeCollectionHist::RangeCollectionHistValueType</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition for the type for the values accessible from a rangeCollection. </p>

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00056">56</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1798364905b4d4db8aa0ffa922dbc169"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHist" ref="a1798364905b4d4db8aa0ffa922dbc169" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1798364905b4d4db8aa0ffa922dbc169">subpavings::RangeCollectionHist::RangeCollectionHist</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>No-argument constructor. </p>

</div>
</div>
<a class="anchor" id="aa65c6d75a4a00028029ce18407df9c21"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHist" ref="aa65c6d75a4a00028029ce18407df9c21" args="(const RealVec &amp;range)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1798364905b4d4db8aa0ffa922dbc169">subpavings::RangeCollectionHist::RangeCollectionHist</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> &amp;&#160;</td>
          <td class="paramname"><em>range</em></td><td>)</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor initialised with a container of values for the rangeCollection. </p>

</div>
</div>
<a class="anchor" id="a5da6271ef9e881f17213072a05859636"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHist" ref="a5da6271ef9e881f17213072a05859636" args="(const cxsc::real &amp;r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1798364905b4d4db8aa0ffa922dbc169">subpavings::RangeCollectionHist::RangeCollectionHist</a> </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor initialised with a single value for the rangeCollection. </p>

</div>
</div>
<a class="anchor" id="af282eb9e98612d1da0eae417088d2018"></a><!-- doxytag: member="subpavings::RangeCollectionHist::RangeCollectionHist" ref="af282eb9e98612d1da0eae417088d2018" args="(const RangeCollectionHist &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1798364905b4d4db8aa0ffa922dbc169">subpavings::RangeCollectionHist::RangeCollectionHist</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy constructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="adbd68fcd7515aeb084af67cbe946e162"></a><!-- doxytag: member="subpavings::RangeCollectionHist::begin" ref="adbd68fcd7515aeb084af67cbe946e162" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">RangeCollectionHistItr</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#adbd68fcd7515aeb084af67cbe946e162">subpavings::RangeCollectionHist::begin</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Return an iterator to the start of the collection. </p>
<p>The idiom for iterating through all the valuse in a rangeCollection rc is:</p>
<p>for (RangeCollectionHistItr it = rc.begin(); it &lt; rc.end(), ++it) { ... } </p>

</div>
</div>
<a class="anchor" id="ae8047b013a97315564303752a329ff45"></a><!-- doxytag: member="subpavings::RangeCollectionHist::checkRangeCollectionAllPositive" ref="ae8047b013a97315564303752a329ff45" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ae8047b013a97315564303752a329ff45">subpavings::RangeCollectionHist::checkRangeCollectionAllPositive</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get whether the values in this are all positive. </p>

</div>
</div>
<a class="anchor" id="ab19aefc62a7559964b43e24f352063e3"></a><!-- doxytag: member="subpavings::RangeCollectionHist::end" ref="ab19aefc62a7559964b43e24f352063e3" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a65d6a1cb899b673b28913a7dfb572476">RangeCollectionHistItr</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab19aefc62a7559964b43e24f352063e3">subpavings::RangeCollectionHist::end</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Return an iterator to the end of the collection. </p>

</div>
</div>
<a class="anchor" id="af042b4b68c09ac3b54bcb1abdd51f78c"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getAbsDiffsToAverageRangeCollection" ref="af042b4b68c09ac3b54bcb1abdd51f78c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#af042b4b68c09ac3b54bcb1abdd51f78c">subpavings::RangeCollectionHist::getAbsDiffsToAverageRangeCollection</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Make a rangeCollection containing the absolute differences of each element to their average. </p>
<p>Throws an <a class="el" href="classsubpavings_1_1UnfulfillableRequest__Error.shtml">UnfulfillableRequest_Error</a> if this is empty. </p>

</div>
</div>
<a class="anchor" id="a551fea530035f92f3a9824d107f7079f"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getAbsTotal" ref="a551fea530035f92f3a9824d107f7079f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a551fea530035f92f3a9824d107f7079f">subpavings::RangeCollectionHist::getAbsTotal</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the total of the absolute values of all the elements in this. </p>

</div>
</div>
<a class="anchor" id="adb2636c4eb438e5ebbb7cd8be9088af8"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getAverageValue" ref="adb2636c4eb438e5ebbb7cd8be9088af8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#adb2636c4eb438e5ebbb7cd8be9088af8">subpavings::RangeCollectionHist::getAverageValue</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the average of all the elements in this. </p>
<p>Throws an <a class="el" href="classsubpavings_1_1UnfulfillableRequest__Error.shtml">UnfulfillableRequest_Error</a> if this is empty. </p>

</div>
</div>
<a class="anchor" id="abf9c11987119de78dce7b2ebf0c9b17a"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getRangeCollectionValues" ref="abf9c11987119de78dce7b2ebf0c9b17a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#abf9c11987119de78dce7b2ebf0c9b17a">subpavings::RangeCollectionHist::getRangeCollectionValues</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a copy of the elements of this as a collection of reals. </p>

</div>
</div>
<a class="anchor" id="a1d771d4ec07fd09a078615c599dbd81c"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getSize" ref="a1d771d4ec07fd09a078615c599dbd81c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1d771d4ec07fd09a078615c599dbd81c">subpavings::RangeCollectionHist::getSize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the size of this. </p>
<p>Size is number of elements in this. </p>

</div>
</div>
<a class="anchor" id="aaee124fc1435e538fc2bb8c799032c2c"></a><!-- doxytag: member="subpavings::RangeCollectionHist::getTotal" ref="aaee124fc1435e538fc2bb8c799032c2c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aaee124fc1435e538fc2bb8c799032c2c">subpavings::RangeCollectionHist::getTotal</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the total of all the elements in this. </p>

</div>
</div>
<a class="anchor" id="a49d8516732a4d2d4e7a5863a502c0fda"></a><!-- doxytag: member="subpavings::RangeCollectionHist::isEmpty" ref="a49d8516732a4d2d4e7a5863a502c0fda" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a49d8516732a4d2d4e7a5863a502c0fda">subpavings::RangeCollectionHist::isEmpty</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get whether the rangeCollection is empty. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if this has no elements, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a3829de1bc59ceff1c9ed143cb05168c2"></a><!-- doxytag: member="subpavings::RangeCollectionHist::makeAverageRangeCollection" ref="a3829de1bc59ceff1c9ed143cb05168c2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a3829de1bc59ceff1c9ed143cb05168c2">subpavings::RangeCollectionHist::makeAverageRangeCollection</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Make a rangeCollection containing just the average of this. </p>
<p>Throws an <a class="el" href="classsubpavings_1_1UnfulfillableRequest__Error.shtml">UnfulfillableRequest_Error</a> if this is empty. </p>

</div>
</div>
<a class="anchor" id="ac6d582db5cdec2575db1a91c70fa7aaa"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator*" ref="ac6d582db5cdec2575db1a91c70fa7aaa" args="(const cxsc::real &amp;mult) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> subpavings::RangeCollectionHist::operator* </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>mult</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the results of multipling every element in this by <em>mult</em>. </p>

</div>
</div>
<a class="anchor" id="afc613e3d9ea05a796ad256b911b91145"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator*=" ref="afc613e3d9ea05a796ad256b911b91145" args="(const cxsc::real &amp;mult)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&amp; subpavings::RangeCollectionHist::operator*= </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>mult</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Multiply every element in this by <em>mult</em>. </p>

</div>
</div>
<a class="anchor" id="a933eb6a39c07b990b5e734f2354e0300"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator+" ref="a933eb6a39c07b990b5e734f2354e0300" args="(const RangeCollectionHist &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> subpavings::RangeCollectionHist::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the results of appending the contents of another rangeCollection to this. </p>

</div>
</div>
<a class="anchor" id="adb1fdd14f7484a22e77a7ceb65b4c8a1"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator+=" ref="adb1fdd14f7484a22e77a7ceb65b4c8a1" args="(const RangeCollectionHist &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&amp; subpavings::RangeCollectionHist::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Append the contents of another rangeCollection to this. </p>

</div>
</div>
<a class="anchor" id="a93a520db202a1032ec1e1b02014c10a8"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator/" ref="a93a520db202a1032ec1e1b02014c10a8" args="(const cxsc::real &amp;div) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> subpavings::RangeCollectionHist::operator/ </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>div</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the results of dividing every element in this by <em>div</em>. </p>
<p>Throws a std::invalid_argument exception if <em>div</em> == 0.0. </p>

</div>
</div>
<a class="anchor" id="a1fef83c6e3cd8095ceaced044990612c"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator/=" ref="a1fef83c6e3cd8095ceaced044990612c" args="(const cxsc::real &amp;div)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&amp; subpavings::RangeCollectionHist::operator/= </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>div</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Divide every element in this by <em>div</em>. </p>
<p>Throws a std::invalid_argument exception if <em>div</em> == 0.0. </p>

</div>
</div>
<a class="anchor" id="ad06f912d9345fb484445d352e2bb7348"></a><!-- doxytag: member="subpavings::RangeCollectionHist::operator=" ref="ad06f912d9345fb484445d352e2bb7348" args="(RangeCollectionHist rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&amp; subpavings::RangeCollectionHist::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy assignment operator. </p>

</div>
</div>
<a class="anchor" id="a1c9864fdfb7362224f3842631d8ce9b7"></a><!-- doxytag: member="subpavings::RangeCollectionHist::outputAverage" ref="a1c9864fdfb7362224f3842631d8ce9b7" args="(std::ostream &amp;os, int prec) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1c9864fdfb7362224f3842631d8ce9b7">subpavings::RangeCollectionHist::outputAverage</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>prec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a807af4e295c8fb507e29819e05e1ac9e"></a><!-- doxytag: member="subpavings::RangeCollectionHist::outputAverage" ref="a807af4e295c8fb507e29819e05e1ac9e" args="(std::ostream &amp;os) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a1c9864fdfb7362224f3842631d8ce9b7">subpavings::RangeCollectionHist::outputAverage</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac34a42f1ad337dc961cda4386bcefd99"></a><!-- doxytag: member="subpavings::RangeCollectionHist::outputTabs" ref="ac34a42f1ad337dc961cda4386bcefd99" args="(std::ostream &amp;os, int prec) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ac34a42f1ad337dc961cda4386bcefd99">subpavings::RangeCollectionHist::outputTabs</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>prec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac005c11b0948f40d1a334f9d462d10c6"></a><!-- doxytag: member="subpavings::RangeCollectionHist::outputTabs" ref="ac005c11b0948f40d1a334f9d462d10c6" args="(std::ostream &amp;os) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ac34a42f1ad337dc961cda4386bcefd99">subpavings::RangeCollectionHist::outputTabs</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a64e08d8b81255e1fb66fa7f9042f41dd"></a><!-- doxytag: member="subpavings::RangeCollectionHist::parallelAdd" ref="a64e08d8b81255e1fb66fa7f9042f41dd" args="(const RangeCollectionHist &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a64e08d8b81255e1fb66fa7f9042f41dd">subpavings::RangeCollectionHist::parallelAdd</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add another the rangeCollection to this so that each element += parallel element in <em>rhs</em>. </p>
<p>Throws a std::logic_error exception if this and <em>rhs</em> are different sizes. </p>

</div>
</div>
<a class="anchor" id="a7a23ebb0badaa26845d97bfdb3a26dc2"></a><!-- doxytag: member="subpavings::RangeCollectionHist::reduce" ref="a7a23ebb0badaa26845d97bfdb3a26dc2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a7a23ebb0badaa26845d97bfdb3a26dc2">subpavings::RangeCollectionHist::reduce</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reduce the rangeCollection to the sum of the present values. </p>

</div>
</div>
<a class="anchor" id="aca4bb8b2394285f14ec9af829f55d5c9"></a><!-- doxytag: member="subpavings::RangeCollectionHist::scalarMult" ref="aca4bb8b2394285f14ec9af829f55d5c9" args="(const cxsc::real &amp;mult)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aca4bb8b2394285f14ec9af829f55d5c9">subpavings::RangeCollectionHist::scalarMult</a> </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>mult</em></td><td>)</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a265fa98459a9c678e980d111922bfddd"></a><!-- doxytag: member="subpavings::RangeCollectionHist::swap" ref="a265fa98459a9c678e980d111922bfddd" args="(RangeCollectionHist &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#a265fa98459a9c678e980d111922bfddd">subpavings::RangeCollectionHist::swap</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Swap the contents of this and other. </p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="aba0b943c3580d4ded0a82270589c3df3"></a><!-- doxytag: member="subpavings::RangeCollectionHist::container" ref="aba0b943c3580d4ded0a82270589c3df3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#ab3b0321ac69a063bda1c70cdb9bf00ec">RangeCollectionHistPrivateType</a> <a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml#aba0b943c3580d4ded0a82270589c3df3">subpavings::RangeCollectionHist::container</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection__hist_8hpp_source.shtml#l00211">211</a> of file <a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="rangecollection__hist_8hpp_source.shtml">rangecollection_hist.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespacesubpavings.shtml">subpavings</a>      </li>
      <li class="navelem"><a class="el" href="classsubpavings_1_1RangeCollectionHist.shtml">RangeCollectionHist</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:40 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
