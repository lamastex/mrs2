<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: itaylor Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classitaylor.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">itaylor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="itaylor" -->
<p><code>#include &lt;<a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>&gt;</code></p>

<p><a href="classitaylor-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a265623bc1a74c5677c0b356317691808">itaylor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a12241a58e4d5de9efd24293e9c646ff1">itaylor</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a49508643f0a5beba907408f81e4a870e">itaylor</a> (const interval &amp;<a class="el" href="classitaylor.shtml#a26ce2edd74c4225bd48d226bbd844d00">constant</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#ac3f49c2df21c83051943e33f4f40550d">itaylor</a> (const double &amp;<a class="el" href="classitaylor.shtml#a26ce2edd74c4225bd48d226bbd844d00">constant</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a4113323f2bf9f195b8a4a627a15f0509">~itaylor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a5edad8cbc893a1ae05cc535675d99ce3">operator=</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a103e7ee5e21bccf03ad500086927443c">operator[]</a> (int index) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a589de5c87d9993888423598c42be5f07">getOrder</a> (void) const </td></tr>
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a2c8074fdc97258d6581ce18a6d76d8d8">variable</a> (const interval &amp;x, int degree)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a26ce2edd74c4225bd48d226bbd844d00">constant</a> (const interval &amp;x, int degree)</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a83c1b0a5a14fb5f0e0323adcc9b60a40">order</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a45521302408d376be9603aea42eb45f0">coeff</a></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a812c741913a5c9a39d09244753c10f80">operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a5650df7895792673fedd1d3bbb993ca4">operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#abff047f20e6e0c3b9619e87c5cd78d1e">operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a819e619172b445480f82ae8fd3160fc0">operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a57cb7c8e28bc6f9150c46a25942a90ba">operator*</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a1ba4cc5b5b0ddcf66d9f43f0be7f920d">operator/</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a39b9b1399538b2b8ed7055eb042a0481">exp</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#aeeba35ade2a2342936eb6a1e493b5d53">log</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#aa120810b0216f92d8b7bb709fe4c8df2">sin</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a863fa25a09ba4d108b624023f714fabc">cos</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a1e89188d7c9f76e761e3a80574493169">tan</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#add6a2dee94153503acc03c051014f863">pow</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a8865a7478d3d024024ac9c237ff05b4d">pow</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const interval &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#adfae79e43a063e2db1e109d1126e3319">pow</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, const int &amp;n)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a926643d40976e4eeb33f69598b35b8cf">derivative</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#ac4891b459b32f3442e9b5200c2bd5e0b">integral</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#ac4815c39ce987d7ab15e04240650d720">derivative</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, int k)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#ab46914e40a1c404067ac6d2ca48d46a2">integral</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, int k)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#ad34de0d71513c5745f9edea5dbb7bbdf">resize</a> (<a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, int degree)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a2524c8f0db7471b13d0cd5e1aa785b40">clear</a> (<a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a1e6e019f776d845fb77bcdb183f98596">round</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, int degree)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a7e12f72c00d845d084279a3a66f3f341">round</a> (<a class="el" href="classitaylor.shtml">itaylor</a> &amp;a, int degree)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a4132ecfd27a2b1283feb9f4f30e28c2b">orderOf</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classitaylor.shtml#a0ad0ae441a5e94248ca15e0d92e9c73a">operator&lt;&lt;</a> (ostream &amp;oS, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;a)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="itaylor_8h_source.shtml#l00028">28</a> of file <a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a265623bc1a74c5677c0b356317691808"></a><!-- doxytag: member="itaylor::itaylor" ref="a265623bc1a74c5677c0b356317691808" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml#a265623bc1a74c5677c0b356317691808">itaylor::itaylor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a12241a58e4d5de9efd24293e9c646ff1"></a><!-- doxytag: member="itaylor::itaylor" ref="a12241a58e4d5de9efd24293e9c646ff1" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml#a265623bc1a74c5677c0b356317691808">itaylor::itaylor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a49508643f0a5beba907408f81e4a870e"></a><!-- doxytag: member="itaylor::itaylor" ref="a49508643f0a5beba907408f81e4a870e" args="(const interval &amp;constant)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml#a265623bc1a74c5677c0b356317691808">itaylor::itaylor</a> </td>
          <td>(</td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>constant</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac3f49c2df21c83051943e33f4f40550d"></a><!-- doxytag: member="itaylor::itaylor" ref="ac3f49c2df21c83051943e33f4f40550d" args="(const double &amp;constant)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml#a265623bc1a74c5677c0b356317691808">itaylor::itaylor</a> </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>constant</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4113323f2bf9f195b8a4a627a15f0509"></a><!-- doxytag: member="itaylor::~itaylor" ref="a4113323f2bf9f195b8a4a627a15f0509" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classitaylor.shtml#a4113323f2bf9f195b8a4a627a15f0509">itaylor::~itaylor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="itaylor_8h_source.shtml#l00038">38</a> of file <a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>.</p>
<div class="fragment"><pre class="fragment">{ <span class="keyword">delete</span> <a class="code" href="classitaylor.shtml#a45521302408d376be9603aea42eb45f0">coeff</a>; }
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a26ce2edd74c4225bd48d226bbd844d00"></a><!-- doxytag: member="itaylor::constant" ref="a26ce2edd74c4225bd48d226bbd844d00" args="(const interval &amp;x, int degree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a26ce2edd74c4225bd48d226bbd844d00">itaylor::constant</a> </td>
          <td>(</td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a589de5c87d9993888423598c42be5f07"></a><!-- doxytag: member="itaylor::getOrder" ref="a589de5c87d9993888423598c42be5f07" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classitaylor.shtml#a589de5c87d9993888423598c42be5f07">itaylor::getOrder</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="itaylor_8h_source.shtml#l00041">41</a> of file <a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>.</p>
<div class="fragment"><pre class="fragment">{ <span class="keywordflow">return</span> <a class="code" href="classitaylor.shtml#a83c1b0a5a14fb5f0e0323adcc9b60a40">order</a>; }
</pre></div>
</div>
</div>
<a class="anchor" id="a5edad8cbc893a1ae05cc535675d99ce3"></a><!-- doxytag: member="itaylor::operator=" ref="a5edad8cbc893a1ae05cc535675d99ce3" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a>&amp; itaylor::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a103e7ee5e21bccf03ad500086927443c"></a><!-- doxytag: member="itaylor::operator[]" ref="a103e7ee5e21bccf03ad500086927443c" args="(int index) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval&amp; itaylor::operator[] </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2c8074fdc97258d6581ce18a6d76d8d8"></a><!-- doxytag: member="itaylor::variable" ref="a2c8074fdc97258d6581ce18a6d76d8d8" args="(const interval &amp;x, int degree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a2c8074fdc97258d6581ce18a6d76d8d8">itaylor::variable</a> </td>
          <td>(</td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="errorfunc_8cpp_source.shtml#l01551">integrand()</a>, <a class="el" href="errorfunc_8cpp_source.shtml#l01620">LaplaceIntegrand()</a>, <a class="el" href="errorfunc_8cpp_source.shtml#l01736">LaplaceRiemannTerm()</a>, <a class="el" href="errorfunc_8cpp_source.shtml#l01821">LognormalIntegrand()</a>, <a class="el" href="errorfunc_8cpp_source.shtml#l01920">LognormalRiemannTerm()</a>, and <a class="el" href="errorfunc_8cpp_source.shtml#l01462">riemannTerm()</a>.</p>

</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="a2524c8f0db7471b13d0cd5e1aa785b40"></a><!-- doxytag: member="itaylor::clear" ref="a2524c8f0db7471b13d0cd5e1aa785b40" args="(itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classitaylor.shtml#a2524c8f0db7471b13d0cd5e1aa785b40">clear</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a863fa25a09ba4d108b624023f714fabc"></a><!-- doxytag: member="itaylor::cos" ref="a863fa25a09ba4d108b624023f714fabc" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a863fa25a09ba4d108b624023f714fabc">cos</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a926643d40976e4eeb33f69598b35b8cf"></a><!-- doxytag: member="itaylor::derivative" ref="a926643d40976e4eeb33f69598b35b8cf" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a926643d40976e4eeb33f69598b35b8cf">derivative</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac4815c39ce987d7ab15e04240650d720"></a><!-- doxytag: member="itaylor::derivative" ref="ac4815c39ce987d7ab15e04240650d720" args="(const itaylor &amp;a, int k)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a926643d40976e4eeb33f69598b35b8cf">derivative</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a39b9b1399538b2b8ed7055eb042a0481"></a><!-- doxytag: member="itaylor::exp" ref="a39b9b1399538b2b8ed7055eb042a0481" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a39b9b1399538b2b8ed7055eb042a0481">exp</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac4891b459b32f3442e9b5200c2bd5e0b"></a><!-- doxytag: member="itaylor::integral" ref="ac4891b459b32f3442e9b5200c2bd5e0b" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#ac4891b459b32f3442e9b5200c2bd5e0b">integral</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ab46914e40a1c404067ac6d2ca48d46a2"></a><!-- doxytag: member="itaylor::integral" ref="ab46914e40a1c404067ac6d2ca48d46a2" args="(const itaylor &amp;a, int k)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#ac4891b459b32f3442e9b5200c2bd5e0b">integral</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aeeba35ade2a2342936eb6a1e493b5d53"></a><!-- doxytag: member="itaylor::log" ref="aeeba35ade2a2342936eb6a1e493b5d53" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#aeeba35ade2a2342936eb6a1e493b5d53">log</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a57cb7c8e28bc6f9150c46a25942a90ba"></a><!-- doxytag: member="itaylor::operator*" ref="a57cb7c8e28bc6f9150c46a25942a90ba" args="(const itaylor &amp;a, const itaylor &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a812c741913a5c9a39d09244753c10f80"></a><!-- doxytag: member="itaylor::operator+" ref="a812c741913a5c9a39d09244753c10f80" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abff047f20e6e0c3b9619e87c5cd78d1e"></a><!-- doxytag: member="itaylor::operator+" ref="abff047f20e6e0c3b9619e87c5cd78d1e" args="(const itaylor &amp;a, const itaylor &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5650df7895792673fedd1d3bbb993ca4"></a><!-- doxytag: member="itaylor::operator&#45;" ref="a5650df7895792673fedd1d3bbb993ca4" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a819e619172b445480f82ae8fd3160fc0"></a><!-- doxytag: member="itaylor::operator&#45;" ref="a819e619172b445480f82ae8fd3160fc0" args="(const itaylor &amp;a, const itaylor &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1ba4cc5b5b0ddcf66d9f43f0be7f920d"></a><!-- doxytag: member="itaylor::operator/" ref="a1ba4cc5b5b0ddcf66d9f43f0be7f920d" args="(const itaylor &amp;a, const itaylor &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a0ad0ae441a5e94248ca15e0d92e9c73a"></a><!-- doxytag: member="itaylor::operator&lt;&lt;" ref="a0ad0ae441a5e94248ca15e0d92e9c73a" args="(ostream &amp;oS, const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">ostream &amp;&#160;</td>
          <td class="paramname"><em>oS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4132ecfd27a2b1283feb9f4f30e28c2b"></a><!-- doxytag: member="itaylor::orderOf" ref="a4132ecfd27a2b1283feb9f4f30e28c2b" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classitaylor.shtml#a4132ecfd27a2b1283feb9f4f30e28c2b">orderOf</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="add6a2dee94153503acc03c051014f863"></a><!-- doxytag: member="itaylor::pow" ref="add6a2dee94153503acc03c051014f863" args="(const itaylor &amp;a, const itaylor &amp;b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#add6a2dee94153503acc03c051014f863">pow</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a8865a7478d3d024024ac9c237ff05b4d"></a><!-- doxytag: member="itaylor::pow" ref="a8865a7478d3d024024ac9c237ff05b4d" args="(const itaylor &amp;a, const interval &amp;t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#add6a2dee94153503acc03c051014f863">pow</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>t</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="adfae79e43a063e2db1e109d1126e3319"></a><!-- doxytag: member="itaylor::pow" ref="adfae79e43a063e2db1e109d1126e3319" args="(const itaylor &amp;a, const int &amp;n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#add6a2dee94153503acc03c051014f863">pow</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ad34de0d71513c5745f9edea5dbb7bbdf"></a><!-- doxytag: member="itaylor::resize" ref="ad34de0d71513c5745f9edea5dbb7bbdf" args="(itaylor &amp;a, int degree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classitaylor.shtml#ad34de0d71513c5745f9edea5dbb7bbdf">resize</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1e6e019f776d845fb77bcdb183f98596"></a><!-- doxytag: member="itaylor::round" ref="a1e6e019f776d845fb77bcdb183f98596" args="(const itaylor &amp;a, int degree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a1e6e019f776d845fb77bcdb183f98596">round</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a7e12f72c00d845d084279a3a66f3f341"></a><!-- doxytag: member="itaylor::round" ref="a7e12f72c00d845d084279a3a66f3f341" args="(itaylor &amp;a, int degree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classitaylor.shtml#a1e6e019f776d845fb77bcdb183f98596">round</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa120810b0216f92d8b7bb709fe4c8df2"></a><!-- doxytag: member="itaylor::sin" ref="aa120810b0216f92d8b7bb709fe4c8df2" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#aa120810b0216f92d8b7bb709fe4c8df2">sin</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1e89188d7c9f76e761e3a80574493169"></a><!-- doxytag: member="itaylor::tan" ref="a1e89188d7c9f76e761e3a80574493169" args="(const itaylor &amp;a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classitaylor.shtml">itaylor</a> <a class="el" href="classitaylor.shtml#a1e89188d7c9f76e761e3a80574493169">tan</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a45521302408d376be9603aea42eb45f0"></a><!-- doxytag: member="itaylor::coeff" ref="a45521302408d376be9603aea42eb45f0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval* <a class="el" href="classitaylor.shtml#a45521302408d376be9603aea42eb45f0">itaylor::coeff</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="itaylor_8h_source.shtml#l00031">31</a> of file <a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>.</p>

</div>
</div>
<a class="anchor" id="a83c1b0a5a14fb5f0e0323adcc9b60a40"></a><!-- doxytag: member="itaylor::order" ref="a83c1b0a5a14fb5f0e0323adcc9b60a40" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classitaylor.shtml#a83c1b0a5a14fb5f0e0323adcc9b60a40">itaylor::order</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="itaylor_8h_source.shtml#l00030">30</a> of file <a class="el" href="itaylor_8h_source.shtml">itaylor.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="itaylor_8h_source.shtml">itaylor.h</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classitaylor.shtml">itaylor</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:26 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
