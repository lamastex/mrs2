<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: ExVector3D.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ExVector3D_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ExVector3D.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>MappedSPnode example with vectors main.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="mappedspnode_8hpp_source.shtml">mappedspnode.hpp</a>&quot;</code><br/>
<code>#include &lt;fstream&gt;</code><br/>
</div>
<p><a href="ExVector3D_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ExVector3D_8cpp.shtml#a95ed2cc3df4ef6d63e8a7d315a9e9fd2">hullOperator&lt; Vec &gt;</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;x, const <a class="el" href="classVec.shtml">Vec</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ExVector3D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a> (string &amp;filename, const <a class="el" href="classsubpavings_1_1SPnode.shtml">SPnode</a> &amp;node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ExVector3D_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> ()</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>MappedSPnode example with vectors main. </p>
<p>This example is f(x) = exp(-x^2) </p>

<p>Definition in file <a class="el" href="ExVector3D_8cpp_source.shtml">ExVector3D.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a95ed2cc3df4ef6d63e8a7d315a9e9fd2"></a><!-- doxytag: member="ExVector3D.cpp::hullOperator&lt; Vec &gt;" ref="a95ed2cc3df4ef6d63e8a7d315a9e9fd2" args="(const Vec &amp;x, const Vec &amp;y)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> hullOperator&lt; <a class="el" href="classVec.shtml">Vec</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ExVector3D_8cpp_source.shtml#l00023">23</a> of file <a class="el" href="ExVector3D_8cpp_source.shtml">ExVector3D.cpp</a>.</p>
<div class="fragment"><pre class="fragment">    {
       <span class="keywordflow">return</span> x + y; <span class="comment">// addition</span>
    }
</pre></div>
</div>
</div>
<a class="anchor" id="ae66f6b31b5ad750f1fe042a706a4e3d4"></a><!-- doxytag: member="ExVector3D.cpp::main" ref="ae66f6b31b5ad750f1fe042a706a4e3d4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ImageSetDiff_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ExVector3D_8cpp_source.shtml#l00047">47</a> of file <a class="el" href="ExVector3D_8cpp_source.shtml">ExVector3D.cpp</a>.</p>

<p>References <a class="el" href="mappedspnode_8hpp_source.shtml#l00299">subpavings::MappedSPnode&lt; T &gt;::allocateRanges()</a>, <a class="el" href="Ex1D_8cpp_source.shtml#l00021">output()</a>, and <a class="el" href="mappedspnode_8hpp_source.shtml#l00373">subpavings::MappedSPnode&lt; T &gt;::splitToShape()</a>.</p>
<div class="fragment"><pre class="fragment">{

    cout &lt;&lt; <span class="stringliteral">&quot;\nExVector3D\n&quot;</span> &lt;&lt; endl;

    <span class="keywordtype">int</span> dims = 2;
    ivector pavingBox(dims);
    interval pavingInterval(-4,4);
    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> k=1; k &lt;= dims; k++) pavingBox[k] = pavingInterval;


    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> nodeOne(pavingBox); <span class="comment">// make a MappedSPnode object</span>
    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> nodeTwo(pavingBox); <span class="comment">// make a MappedSPnode object</span>

    <span class="comment">// split the nodes to particular shapes</span>
    nodeOne.splitToShape(<span class="stringliteral">&quot;3,3,2,1&quot;</span>); <span class="comment">// split it</span>
    nodeTwo.splitToShape(<span class="stringliteral">&quot;3,4,4,2,2,3,3&quot;</span>); <span class="comment">// split it</span>


    <span class="comment">// allocate ranges for nodeOne</span>
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne1(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne2(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne3(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne4(<a class="code" href="classVec.shtml">Vec</a>(0.3,0.1,0.3));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne5(<a class="code" href="classVec.shtml">Vec</a>(0.2,0.1,-1.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne6(<a class="code" href="classVec.shtml">Vec</a>(0.3,0.6,0.5));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a> rangeOne7(<a class="code" href="classVec.shtml">Vec</a>(0.2,0.2,0.8));


    vector&lt; RangeCollectionClass&lt;Vec&gt; &gt; rangesOne;
    rangesOne.push_back(rangeOne1);
    rangesOne.push_back(rangeOne2);
    rangesOne.push_back(rangeOne3);
    rangesOne.push_back(rangeOne4);
    rangesOne.push_back(rangeOne5);
    rangesOne.push_back(rangeOne6);
    rangesOne.push_back(rangeOne7);



    nodeOne.allocateRanges(rangesOne, 0);


    <span class="comment">// allocate ranges for nodeTwo</span>
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo1(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo2(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo3(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo4(<a class="code" href="classVec.shtml">Vec</a>(0.2,0.5,0.-.8));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo5(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo6(<a class="code" href="classVec.shtml">Vec</a>(0.-1,0.-.5,0.3));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo7(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.6));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo8(<a class="code" href="classVec.shtml">Vec</a>(-1.0,0.5,0.5));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo9(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo10(<a class="code" href="classVec.shtml">Vec</a>(0.5,-.3,0.3));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo11(<a class="code" href="classVec.shtml">Vec</a>(0.0,0.0,0.0));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo12(<a class="code" href="classVec.shtml">Vec</a>(-0.5,0.4,0.3));
    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass&lt;Vec&gt;</a>  rangeTwo13(<a class="code" href="classVec.shtml">Vec</a>(0.3,-.7,0.1));

    vector&lt; RangeCollectionClass&lt;Vec&gt; &gt; rangesTwo;
    rangesTwo.push_back(rangeTwo1);
    rangesTwo.push_back(rangeTwo2);
    rangesTwo.push_back(rangeTwo3);
    rangesTwo.push_back(rangeTwo4);
    rangesTwo.push_back(rangeTwo5);
    rangesTwo.push_back(rangeTwo6);
    rangesTwo.push_back(rangeTwo7);
    rangesTwo.push_back(rangeTwo8);
    rangesTwo.push_back(rangeTwo9);
    rangesTwo.push_back(rangeTwo10);
    rangesTwo.push_back(rangeTwo11);
    rangesTwo.push_back(rangeTwo12);
    rangesTwo.push_back(rangeTwo13);

    nodeTwo.allocateRanges(rangesTwo, 0);


    <span class="keywordtype">string</span> filename = <span class="stringliteral">&quot;ExVec3D_1.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, nodeOne);

    filename = <span class="stringliteral">&quot;ExVec3D_2.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, nodeTwo);

    <span class="comment">// ----------- try lazy addition</span>

    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> lazyaddition =
            <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;::lazyCollationNonMinimalUnion</a> (nodeOne, nodeTwo);
    filename = <span class="stringliteral">&quot;ExVec3D_LazyAddition.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, lazyaddition);


    <span class="comment">// ----------- try addition</span>

    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> addition = nodeOne + nodeTwo;
    filename = <span class="stringliteral">&quot;ExVec3D_Addition.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, addition);

    <span class="comment">// ----------- try subtraction</span>

    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> subtraction = nodeOne - nodeTwo;
    filename = <span class="stringliteral">&quot;ExVec3D_Subtraction.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, subtraction);

    <span class="comment">// ----------- try multiplication</span>

    <a class="code" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode&lt;Vec&gt;</a> multiplication = nodeOne * nodeTwo;
    filename = <span class="stringliteral">&quot;ExVec3D_Multiplication.txt&quot;</span>;
    <a class="code" href="Ex1D_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>(filename, multiplication);

    <span class="keywordflow">return</span> 0;

}
</pre></div>
</div>
</div>
<a class="anchor" id="a91337b8216794ab4371528e4d8f07aa2"></a><!-- doxytag: member="ExVector3D.cpp::output" ref="a91337b8216794ab4371528e4d8f07aa2" args="(string &amp;filename, const SPnode &amp;node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="MappedSPSamplingTest_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a> </td>
          <td>(</td>
          <td class="paramtype">string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1SPnode.shtml">SPnode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ExVector3D_8cpp_source.shtml#l00030">30</a> of file <a class="el" href="ExVector3D_8cpp_source.shtml">ExVector3D.cpp</a>.</p>

<p>References <a class="el" href="spnode_8cpp_source.shtml#l00923">subpavings::SPnode::leavesOutputTabs()</a>.</p>
<div class="fragment"><pre class="fragment">{
        <span class="comment">// To generate a file output</span>
        ofstream os(filename.c_str());         <span class="comment">// Filename, c-string version</span>
        <span class="keywordflow">if</span> (os.is_open()) {

            node.<a class="code" href="classsubpavings_1_1SPnode.shtml#a3663133a2c9f0fce79f3f551c1d163de">leavesOutputTabs</a>(os); <span class="comment">// the output</span>
            std::cout &lt;&lt; <span class="stringliteral">&quot;The output of the example&quot;</span>
                    &lt;&lt; <span class="stringliteral">&quot; has been written to &quot;</span> &lt;&lt; filename &lt;&lt; std::endl &lt;&lt; std::endl;
            os.close();
        }
        <span class="keywordflow">else</span> {
            std::cerr &lt;&lt; <span class="stringliteral">&quot;Error: could not open file named &quot;</span>
                &lt;&lt; filename &lt;&lt; std::endl &lt;&lt; std::endl;
        }
}
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ExVector3D_8cpp.shtml">ExVector3D.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:20 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
