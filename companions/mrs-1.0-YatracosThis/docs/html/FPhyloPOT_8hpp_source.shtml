<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FPhyloPOT.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('FPhyloPOT_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">FPhyloPOT.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="FPhyloPOT_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment"> * your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00027"></a>00027 <span class="preprocessor">#ifndef __FPHYLOPOT_HPP__</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">#define __FPHYLOPOT_HPP__</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;fstream&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;sstream&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;getopt.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;interval.hpp&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;imath.hpp&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;rmath.hpp&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;ivector.hpp&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;functional&gt;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;exception&gt;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;intvector.hpp&quot;</span>
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &lt;ctype.h&gt;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &lt;gop.hpp&gt;</span>  <span class="comment">// cxsc global optimisation</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="keyword">using namespace </span>std;
<a name="l00053"></a>00053 <span class="keyword">using namespace </span>cxsc;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="preprocessor">#include &quot;<a class="code" href="SmallClasses_8hpp.shtml">SmallClasses.hpp</a>&quot;</span>
<a name="l00056"></a>00056 <span class="preprocessor">#include &quot;<a class="code" href="Fobj_8hpp.shtml" title="Fobj definition and declaration.">Fobj.hpp</a>&quot;</span>
<a name="l00057"></a>00057 <span class="preprocessor">#include &quot;<a class="code" href="PhyloTree_8hpp.shtml" title="Declarations for a class of objects to represent Phylogenetic Trees.">PhyloTree.hpp</a>&quot;</span>
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">//forward class declaration</span>
<a name="l00060"></a>00060 <span class="comment">// A class for a phylogenetic tree</span>
<a name="l00061"></a>00061 <span class="keyword">class </span><a class="code" href="classPhyloTree.shtml">PhyloTree</a>;    
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="structDATA.shtml">00063</a> <span class="keyword">struct </span><a class="code" href="structDATA.shtml">DATA</a>
<a name="l00064"></a>00064 {
<a name="l00065"></a>00065   <span class="comment">// set in ReadSequence</span>
<a name="l00066"></a><a class="code" href="structDATA.shtml#af4cdaf38ce8f08aecdff70e4301bca38">00066</a>   vector&lt;string&gt; <a class="code" href="structDATA.shtml#af4cdaf38ce8f08aecdff70e4301bca38">seqNames</a>;
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="structDATA.shtml#aa02f132fe5b0ecd2f64374da002efbec">00068</a>   vector&lt; vector&lt;char&gt; &gt; <a class="code" href="structDATA.shtml#aa02f132fe5b0ecd2f64374da002efbec">rawSequences</a>;
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="structDATA.shtml#a988fb40b7296abe1c35d07aba414922d">00070</a>   <span class="keywordtype">int</span> <a class="code" href="structDATA.shtml#a988fb40b7296abe1c35d07aba414922d">No_seq</a>;
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="structDATA.shtml#ad43ceda299bda19eae5a7b5f1f17ce06">00072</a>   <span class="keywordtype">int</span> <a class="code" href="structDATA.shtml#ad43ceda299bda19eae5a7b5f1f17ce06">Seq_length</a>;
<a name="l00073"></a>00073 
<a name="l00074"></a><a class="code" href="structDATA.shtml#a781e3ff29ee1a5d9bc8816a076b26819">00074</a>   vector&lt;int&gt; <a class="code" href="structDATA.shtml#a781e3ff29ee1a5d9bc8816a076b26819">BPatternCounts</a>;
<a name="l00075"></a>00075 
<a name="l00076"></a>00076   <span class="comment">// storage for the base sequences we find in chars and in coded form</span>
<a name="l00077"></a><a class="code" href="structDATA.shtml#a1095aaedbb062c91c75a9dca7accc248">00077</a>   vector&lt;string&gt; <a class="code" href="structDATA.shtml#a1095aaedbb062c91c75a9dca7accc248">BPatterns</a>;
<a name="l00078"></a><a class="code" href="structDATA.shtml#ab267d3dd20bbe5abf0cf0d33c4a8ffdf">00078</a>   vector&lt; vector&lt;int&gt; &gt; <a class="code" href="structDATA.shtml#ab267d3dd20bbe5abf0cf0d33c4a8ffdf">baseSequences</a>;
<a name="l00079"></a>00079 
<a name="l00080"></a><a class="code" href="structDATA.shtml#a78e93d9dabc45d060155d164db458b3a">00080</a>   <span class="keywordtype">int</span> <a class="code" href="structDATA.shtml#a78e93d9dabc45d060155d164db458b3a">BNo_pattern</a>;
<a name="l00081"></a>00081 };
<a name="l00082"></a>00082 <span class="comment">// struct DATA SeqData;</span>
<a name="l00083"></a>00083 
<a name="l00102"></a><a class="code" href="classFPhyloPOT.shtml">00102</a> <span class="keyword">class </span><a class="code" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a>: <span class="keyword">public</span> <a class="code" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104 
<a name="l00105"></a>00105   <span class="keyword">private</span>:
<a name="l00106"></a>00106     <span class="comment">// ---------------------  data members ------------------------</span>
<a name="l00107"></a>00107 
<a name="l00109"></a>00109     <span class="comment">// the enum hack, makes maxCharInSeqName a symbolic name for 20</span>
<a name="l00110"></a><a class="code" href="classFPhyloPOT.shtml#a9b09c98520545b9c87c6993bf3c5f274aa74faf83373edcdf48ff35922dc009e2">00110</a>     <span class="keyword">enum</span>{maxCharInSeqName = 20};
<a name="l00111"></a>00111 
<a name="l00113"></a><a class="code" href="classFPhyloPOT.shtml#a41644607ab4dda406006b7899c60eb24acff34dde110707699080ef23caaabf95">00113</a>     <span class="keyword">enum</span>{TwoTaxaTop = 1, ThreeTaxaTop = 1, FourTaxaTop = 3, FiveTaxaTop = 15};
<a name="l00114"></a>00114 
<a name="l00116"></a><a class="code" href="classFPhyloPOT.shtml#a83a3e9f1c4025fc20c102ed2b819f9b8a3834f2c28027281be1d9fa2644e1bc31">00116</a>     <span class="keyword">enum</span>{TwoTaxaDim = 2, ThreeTaxaDim= 3, FourTaxaDim = 5, FiveTaxaDim = 7};
<a name="l00117"></a>00117 
<a name="l00119"></a><a class="code" href="classFPhyloPOT.shtml#af26457fdad1313b54245b464a08d2978ac4fc80c8577bb33e7bea00fad159e2ea">00119</a>     <span class="keyword">enum</span>{CharacterSpace = 4};
<a name="l00120"></a>00120 
<a name="l00121"></a>00121     <span class="comment">/* members inherited from Fobj</span>
<a name="l00122"></a>00122 <span class="comment">    // a flag for working on the log(target shape) scale</span>
<a name="l00123"></a>00123 <span class="comment">    bool UsingLogDensity;   </span>
<a name="l00124"></a>00124 <span class="comment">    // The initial collection of labelled boxes -- prior support</span>
<a name="l00125"></a>00125 <span class="comment">    vector&lt;LabBox&gt; LabDomainList;</span>
<a name="l00126"></a>00126 <span class="comment">    vector&lt;real&gt; LabDomainPriorIntegralList;</span>
<a name="l00127"></a>00127 <span class="comment">    // To specify uniform, exponential, user_defined.</span>
<a name="l00128"></a>00128 <span class="comment">    int PriorType;          </span>
<a name="l00129"></a>00129 <span class="comment">    */</span>
<a name="l00130"></a>00130     
<a name="l00132"></a><a class="code" href="classFPhyloPOT.shtml#a84a8fb3afb2b975331062752d414723a">00132</a>     <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#a84a8fb3afb2b975331062752d414723a" title="The model space or number of taxa.">tree_space</a>;
<a name="l00133"></a>00133 
<a name="l00135"></a><a class="code" href="classFPhyloPOT.shtml#aef4d908d355efec47e284d3845d74b73">00135</a>     <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#aef4d908d355efec47e284d3845d74b73" title="The number of edges in an unrooted tree.">n_dimensions</a>;
<a name="l00136"></a>00136 
<a name="l00138"></a><a class="code" href="classFPhyloPOT.shtml#af68e59b4d63e18f0b82864b101fd29d2">00138</a>     <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#af68e59b4d63e18f0b82864b101fd29d2" title="The number of unrooted topology trees given the model space.">topologies</a>;
<a name="l00139"></a>00139 
<a name="l00141"></a><a class="code" href="classFPhyloPOT.shtml#ab30590c070d95d5d5d7966cb386db7d6">00141</a>     <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#ab30590c070d95d5d5d7966cb386db7d6" title="The number of nodes in an unrooted tree given the number of taxa.">tree_nodes</a>;
<a name="l00142"></a>00142 
<a name="l00144"></a><a class="code" href="classFPhyloPOT.shtml#aa80ced607ed41f02bcd56b6f08fbd1ff">00144</a>     <span class="keyword">struct </span><a class="code" href="structDATA.shtml">DATA</a> SeqData;
<a name="l00145"></a>00145 
<a name="l00147"></a><a class="code" href="classFPhyloPOT.shtml#a99124f9f8855b0aebcccd20804ef9cde">00147</a>     <span class="keyword">mutable</span> <a class="code" href="PhyloTree_8hpp.shtml#a7924aedff3cf2bea3ffccb7b9f59f970" title="a container of pointers to PhyloTrees">PhyloTreePtrs</a> <a class="code" href="classFPhyloPOT.shtml#a99124f9f8855b0aebcccd20804ef9cde" title="A container of pointers to PhyloTrees.">treeRoots</a>;
<a name="l00148"></a>00148     
<a name="l00149"></a>00149     <span class="comment">// the trees are in dynamic memory and so have to be</span>
<a name="l00150"></a>00150     <span class="comment">// deleted when this object is destroyed</span>
<a name="l00151"></a>00151 
<a name="l00153"></a><a class="code" href="classFPhyloPOT.shtml#a6121e3100ec3c00f522f15e1feae0070">00153</a>     <span class="keyword">mutable</span> <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#a6121e3100ec3c00f522f15e1feae0070" title="Track number of interval function calls.">n_interval_calls</a>;
<a name="l00154"></a>00154 
<a name="l00156"></a><a class="code" href="classFPhyloPOT.shtml#a4e705aece25b8ee32d67aa6ab50cd9ec">00156</a>     <span class="keyword">mutable</span> <span class="keywordtype">int</span> <a class="code" href="classFPhyloPOT.shtml#a4e705aece25b8ee32d67aa6ab50cd9ec" title="Track number of real function calls.">n_real_calls</a>;
<a name="l00157"></a>00157 
<a name="l00158"></a>00158     <span class="comment">// ------------------------- private member functions ----------------------</span>
<a name="l00159"></a>00159 
<a name="l00161"></a>00161     <span class="keyword">static</span> <span class="keywordtype">int</span> Char2Code(<span class="keywordtype">char</span> ch);
<a name="l00162"></a>00162 
<a name="l00164"></a>00164     <span class="keyword">static</span> <span class="keywordtype">char</span> Code2Char(<span class="keywordtype">int</span> c);
<a name="l00165"></a>00165 
<a name="l00167"></a>00167     <span class="keyword">static</span> <span class="keywordtype">void</span> CheckReadLine(ifstream&amp; ifs, <span class="keywordtype">string</span>&amp; line);
<a name="l00168"></a>00168 
<a name="l00170"></a>00170     <span class="keyword">static</span> <span class="keywordtype">void</span> FileInputError(ifstream&amp; ifs, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; msg);
<a name="l00171"></a>00171 
<a name="l00173"></a>00173     <span class="keyword">static</span> <span class="keywordtype">void</span> ReformatSequence(<span class="keywordtype">string</span>&amp; line);
<a name="l00174"></a>00174 
<a name="l00176"></a>00176     <span class="comment">// not static since uses data members, not const since alters this</span>
<a name="l00177"></a>00177     <span class="keywordtype">int</span> ReadSequence(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00178"></a>00178 
<a name="l00182"></a>00182     <span class="comment">// not static since uses data members, not const since alters this</span>
<a name="l00183"></a>00183     <span class="keywordtype">int</span> FindPattern(<span class="keywordtype">void</span>);
<a name="l00184"></a>00184 
<a name="l00186"></a>00186     <span class="keywordtype">void</span> PrintSequence() <span class="keyword">const</span>;
<a name="l00187"></a>00187 
<a name="l00196"></a>00196     <span class="comment">// not static since uses data members, not const since alters this</span>
<a name="l00197"></a>00197     <span class="comment">// should abort if any problems</span>
<a name="l00198"></a>00198     <span class="keywordtype">void</span> ReadTrees(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00199"></a>00199 
<a name="l00201"></a>00201     <span class="comment">// print all the trees</span>
<a name="l00202"></a>00202     <span class="keywordtype">void</span> PrintTopologyTrees();
<a name="l00203"></a>00203 
<a name="l00205"></a>00205     <span class="keywordtype">void</span> destroyRoots() <span class="keyword">const</span>;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   <span class="keyword">public</span>:
<a name="l00209"></a>00209     <a class="code" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a>(<span class="keywordtype">int</span> ts, interval Domain, <span class="keywordtype">bool</span> LogPi, <span class="keywordtype">int</span> Prior);
<a name="l00210"></a>00210 
<a name="l00212"></a>00212     ~<a class="code" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a>();
<a name="l00213"></a>00213 
<a name="l00215"></a>00215     interval operator()(<span class="keyword">const</span> <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; lb) <span class="keyword">const</span>;
<a name="l00216"></a>00216 
<a name="l00218"></a>00218     real operator()(<span class="keyword">const</span> <a class="code" href="classLabPnt.shtml" title="A labeled point class.">LabPnt</a>&amp; lp) <span class="keyword">const</span>;
<a name="l00219"></a>00219 
<a name="l00221"></a>00221     HessType operator()(<span class="keyword">const</span> HTvector&amp; x, <span class="keyword">const</span> <span class="keywordtype">int</span> label = 0) <span class="keyword">const</span>;
<a name="l00222"></a>00222 
<a name="l00224"></a><a class="code" href="classFPhyloPOT.shtml#a580e93411b4a2dd881f4854481a8aeef">00224</a>     <span class="keyword">virtual</span> real LabBoxVolume(<span class="keyword">const</span> <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; LB)
<a name="l00225"></a>00225     {
<a name="l00226"></a>00226       <span class="keywordflow">return</span> <a class="code" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5" title="a defined pure virtual function for default Lebesgue measure (volume) of a labelled box...">Fobj::LabBoxVolume</a>(LB);
<a name="l00227"></a>00227     }
<a name="l00228"></a>00228 
<a name="l00230"></a><a class="code" href="classFPhyloPOT.shtml#af1164c3a4f529f5b4af38d18c79f7b47">00230</a>     <span class="keywordtype">int</span> get_interval_calls()
<a name="l00231"></a>00231     {
<a name="l00232"></a>00232       <span class="keywordflow">return</span> n_interval_calls;
<a name="l00233"></a>00233     }
<a name="l00234"></a>00234 
<a name="l00236"></a><a class="code" href="classFPhyloPOT.shtml#a439b0be63da661a8e7c945c986874c8c">00236</a>     <span class="keywordtype">int</span> get_real_calls()
<a name="l00237"></a>00237     {
<a name="l00238"></a>00238       <span class="keywordflow">return</span> n_real_calls;
<a name="l00239"></a>00239     }
<a name="l00240"></a>00240 
<a name="l00242"></a><a class="code" href="classFPhyloPOT.shtml#a13940c79064027cec1a2934afde0dbd7">00242</a>     <span class="keywordtype">int</span> getNoTrees()
<a name="l00243"></a>00243     {
<a name="l00244"></a>00244       <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(treeRoots.size());
<a name="l00245"></a>00245     }
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 };                  <span class="comment">// end of FPhyloPOT class declarations</span>
<a name="l00248"></a>00248 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="FPhyloPOT_8hpp.shtml">FPhyloPOT.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:12 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
