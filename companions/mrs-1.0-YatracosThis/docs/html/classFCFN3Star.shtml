<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FCFN3Star Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classFCFN3Star.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">FCFN3Star Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="FCFN3Star" --><!-- doxytag: inherits="Fobj" -->
<p>1-dimensional Cavender-Farris-Neyman (CFN) model likelihood as a function object class.  
 <a href="classFCFN3Star.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for FCFN3Star:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFCFN3Star__inherit__graph.png" border="0" usemap="#FCFN3Star_inherit__map" alt="Inheritance graph"/></div>
<map name="FCFN3Star_inherit__map" id="FCFN3Star_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for FCFN3Star:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFCFN3Star__coll__graph.png" border="0" usemap="#FCFN3Star_coll__map" alt="Collaboration graph"/></div>
<map name="FCFN3Star_coll__map" id="FCFN3Star_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classFCFN3Star-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a762c21a9ed9cba72242f87d27fc722fb">FCFN3Star</a> (int <a class="el" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77">Cid</a>, int <a class="el" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542">Cnid</a>, interval Domain, bool LogPi, int Prior)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A constructor.  <a href="#a762c21a9ed9cba72242f87d27fc722fb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#af2b3d4543f1ba7f9040e24433ac7436e">operator()</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">interval function object  <a href="#af2b3d4543f1ba7f9040e24433ac7436e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a3ea99664a49607ab495aad38b6a4a31d">operator()</a> (const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">real function object  <a href="#a3ea99664a49607ab495aad38b6a4a31d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#ad9fea247c542560b3c13dd0ad340d25f">LabBoxVolume</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;LB)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#aaa71b2dc822592e81afb4b12fdd8463c">get_interval_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of interval function calls.  <a href="#aaa71b2dc822592e81afb4b12fdd8463c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a1a5955ccbbecdce0f6cab399ef93f53c">get_real_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of real function calls.  <a href="#a1a5955ccbbecdce0f6cab399ef93f53c"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77">Cid</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Cid = count of invariant sites (minimal suffcient stats)  <a href="#a75abf79fc92c2683219829ce86a43a77"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542">Cnid</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Cnid = count of variant sites (minimal suffcient stats)  <a href="#ace3c43e5c025a8cd9976ce78202fa542"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a3afd13820d74fa145d6beafe2855e333">f0</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Fraction of invariant sites, f0 := Cid/(Cid+Cnid)  <a href="#a3afd13820d74fa145d6beafe2855e333"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a47a41d53ca005cab246ef1954e8e34e0">n_dimensions</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Dimensions of the labelled Domain,.  <a href="#a47a41d53ca005cab246ef1954e8e34e0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a1d596a2072a382eb4e11d99bca03b81d">TotSites</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#acdf33272ab3d95cd51709cd39a846ddd">n_interval_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of interval function calls.  <a href="#acdf33272ab3d95cd51709cd39a846ddd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFCFN3Star.shtml#a1f84d41d7101ffe0d1485f414065d09e">n_real_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of real function calls.  <a href="#a1f84d41d7101ffe0d1485f414065d09e"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>1-dimensional Cavender-Farris-Neyman (CFN) model likelihood as a function object class. </p>
<p>This is the ultrametric "star tree", a trifurcating tree with all three branches having equal length. </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00034">34</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a762c21a9ed9cba72242f87d27fc722fb"></a><!-- doxytag: member="FCFN3Star::FCFN3Star" ref="a762c21a9ed9cba72242f87d27fc722fb" args="(int Cid, int Cnid, interval Domain, bool LogPi, int Prior)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFCFN3Star.shtml#a762c21a9ed9cba72242f87d27fc722fb">FCFN3Star::FCFN3Star</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Countid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Countnid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">interval&#160;</td>
          <td class="paramname"><em>Domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>LogPi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Prior</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A constructor. </p>
<p>constructor for the likelihood of the common branchlength under CFN model for a rooted and clocked 3 taxa tree </p>

<p>Definition at line <a class="el" href="FCFN3_8cpp_source.shtml#l00051">51</a> of file <a class="el" href="FCFN3_8cpp_source.shtml">FCFN3.cpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00077">LabBox::L</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00052">Fobj::LabDomainList</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00044">n_dimensions</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00047">n_interval_calls</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00049">n_real_calls</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00058">Fobj::PriorType</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00190">Fobj::setUsingLogDensity()</a>.</p>
<div class="fragment"><pre class="fragment">:
<a class="code" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77" title="Cid = count of invariant sites (minimal suffcient stats)">Cid</a> (Countid), <a class="code" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542" title="Cnid = count of variant sites (minimal suffcient stats)">Cnid</a> (Countnid)
{
  <a class="code" href="classFCFN3Star.shtml#acdf33272ab3d95cd51709cd39a846ddd" title="Track number of interval function calls.">n_interval_calls</a> = 0;
  <a class="code" href="classFCFN3Star.shtml#a1f84d41d7101ffe0d1485f414065d09e" title="Track number of real function calls.">n_real_calls</a> = 0;
  <a class="code" href="classFobj.shtml#a809ddeff11d2485c9baef63217cf8ec5" title="set the target scale to natural logarithm">setUsingLogDensity</a> (LogPi);
  <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a> = Prior;
  <span class="comment">//TotSites = real(Cid+Cnid);</span>
  <span class="comment">//f0 = real(Cid); // /TotSites;</span>
  <a class="code" href="classFCFN3Star.shtml#a47a41d53ca005cab246ef1954e8e34e0" title="Dimensions of the labelled Domain,.">n_dimensions</a>=1;
  ivector domain (1, <a class="code" href="classFCFN3Star.shtml#a47a41d53ca005cab246ef1954e8e34e0" title="Dimensions of the labelled Domain,.">n_dimensions</a>);
  <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a> Ldomain;
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt;= <a class="code" href="classFCFN3Star.shtml#a47a41d53ca005cab246ef1954e8e34e0" title="Dimensions of the labelled Domain,.">n_dimensions</a>; i++)
  {
    domain[i] = Domain;
  }
  Ldomain.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a> = domain;
  Ldomain.<a class="code" href="classLabBox.shtml#a4f0197d8aaeb58676d6c50f0f229a63b" title="specifies the label L of the labeled box LabBox">L</a> = 0;
  <a class="code" href="classFobj.shtml#a7d5297f74590a7bf95aa65d37a72fdff" title="The initial collection of labelled domain boxes -- prior support.">LabDomainList</a>.push_back (Ldomain);
}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="aaa71b2dc822592e81afb4b12fdd8463c"></a><!-- doxytag: member="FCFN3Star::get_interval_calls" ref="aaa71b2dc822592e81afb4b12fdd8463c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#aaa71b2dc822592e81afb4b12fdd8463c">FCFN3Star::get_interval_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of interval function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a541c0edbb08855d1e3cdbb45b0aa26af">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00064">64</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>References <a class="el" href="FCFN3_8hpp_source.shtml#l00047">n_interval_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFCFN3Star.shtml#acdf33272ab3d95cd51709cd39a846ddd" title="Track number of interval function calls.">n_interval_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a1a5955ccbbecdce0f6cab399ef93f53c"></a><!-- doxytag: member="FCFN3Star::get_real_calls" ref="a1a5955ccbbecdce0f6cab399ef93f53c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#a1a5955ccbbecdce0f6cab399ef93f53c">FCFN3Star::get_real_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of real function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a63df2521571faeb43663613a9a4611e7">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00069">69</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>References <a class="el" href="FCFN3_8hpp_source.shtml#l00049">n_real_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFCFN3Star.shtml#a1f84d41d7101ffe0d1485f414065d09e" title="Track number of real function calls.">n_real_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="ad9fea247c542560b3c13dd0ad340d25f"></a><!-- doxytag: member="FCFN3Star::LabBoxVolume" ref="ad9fea247c542560b3c13dd0ad340d25f" args="(const LabBox &amp;LB)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual real <a class="el" href="classFCFN3Star.shtml#ad9fea247c542560b3c13dd0ad340d25f">FCFN3Star::LabBoxVolume</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Volume of rooted tree boxes is implemented here and NOT inherited from <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>

<p>Implements <a class="el" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00062">62</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{<span class="keywordflow">return</span> <a class="code" href="classFCFN3Star.shtml#ad9fea247c542560b3c13dd0ad340d25f">Fobj::LabBoxVolume</a>(LB);}
</pre></div>
</div>
</div>
<a class="anchor" id="af2b3d4543f1ba7f9040e24433ac7436e"></a><!-- doxytag: member="FCFN3Star::operator()" ref="af2b3d4543f1ba7f9040e24433ac7436e" args="(const LabBox &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval FCFN3Star::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>interval function object </p>

<p>Implements <a class="el" href="classFobj.shtml#acf5ccd1fd7b302c8a1c77081b606a6ad">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FCFN3_8cpp_source.shtml#l00075">75</a> of file <a class="el" href="FCFN3_8cpp_source.shtml">FCFN3.cpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00036">Cid</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00037">Cnid</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00047">n_interval_calls</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFCFN3Star.shtml#acdf33272ab3d95cd51709cd39a846ddd" title="Track number of interval function calls.">n_interval_calls</a>++;
<span class="preprocessor">  #ifdef TESTDIMS</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(X.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a>) != 1 || <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(X.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a>) != 1)
  {
    cerr &lt;&lt; <span class="stringliteral">&quot;dimensions !=1 OR start-index != 1... exiting. &quot;</span> 
         &lt;&lt; endl; exit (EXIT_FAILURE);
  }
<span class="preprocessor">  #endif</span>
<span class="preprocessor"></span>  interval em4t = (<a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-4.0 * X.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a>[1])) ;
  interval result = <a class="code" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77" title="Cid = count of invariant sites (minimal suffcient stats)">Cid</a>*<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( ((1.0 + (3.0*em4t)) / 8.0)) + 
                    <a class="code" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542" title="Cnid = count of variant sites (minimal suffcient stats)">Cnid</a>*<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( ((1.0 - em4t) / 8.0)) ;
  <span class="comment">// result = (TotSites*result);</span>
  <span class="comment">/*</span>
<span class="comment">  if (Sup (result) &lt; 0.0) Sup (result) = 0.0;</span>
<span class="comment">  if (Inf (result) &lt; 0.0) Inf (result) = 0.0;</span>
<span class="comment">  */</span>
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? (result) : <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(result);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3ea99664a49607ab495aad38b6a4a31d"></a><!-- doxytag: member="FCFN3Star::operator()" ref="a3ea99664a49607ab495aad38b6a4a31d" args="(const LabPnt &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real FCFN3Star::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;&#160;</td>
          <td class="paramname"><em>X</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>real function object </p>

<p>Implements <a class="el" href="classFobj.shtml#a7e89aa4918cf8e40683dde607257d1ee">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FCFN3_8cpp_source.shtml#l00098">98</a> of file <a class="el" href="FCFN3_8cpp_source.shtml">FCFN3.cpp</a>.</p>

<p>References <a class="el" href="FCFN3_8hpp_source.shtml#l00036">Cid</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00037">Cnid</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00049">n_real_calls</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00033">LabPnt::Pnt</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFCFN3Star.shtml#a1f84d41d7101ffe0d1485f414065d09e" title="Track number of real function calls.">n_real_calls</a>++;
<span class="preprocessor">  #ifdef TESTDIMS</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(X.<a class="code" href="classLabPnt.shtml#a57c17e6672679825de3ba13b7486d276" title="specifies the point as cxsc::rvector Pnt of the labeled point LabPnt">Pnt</a>) != 1 || <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(X.<a class="code" href="classLabPnt.shtml#a57c17e6672679825de3ba13b7486d276" title="specifies the point as cxsc::rvector Pnt of the labeled point LabPnt">Pnt</a>) != 1)
  {
    cout &lt;&lt; <span class="stringliteral">&quot;dimensions !=1 OR start-index != 1... exiting. &quot;</span> 
         &lt;&lt; endl; exit (EXIT_FAILURE);
  }
<span class="preprocessor">  #endif</span>
<span class="preprocessor"></span>  real em4t = (<a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-4.0 * X.<a class="code" href="classLabPnt.shtml#a57c17e6672679825de3ba13b7486d276" title="specifies the point as cxsc::rvector Pnt of the labeled point LabPnt">Pnt</a>[1])) ;
  real result = <a class="code" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77" title="Cid = count of invariant sites (minimal suffcient stats)">Cid</a>*<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( ((1.0 + (3.0*em4t)) / 8.0)) + 
                (<a class="code" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542" title="Cnid = count of variant sites (minimal suffcient stats)">Cnid</a>)*<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( ((1.0 - em4t) / 8.0)) ;
  <span class="comment">// result = (TotSites*result);</span>
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? (result) : <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(result);
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a75abf79fc92c2683219829ce86a43a77"></a><!-- doxytag: member="FCFN3Star::Cid" ref="a75abf79fc92c2683219829ce86a43a77" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#a75abf79fc92c2683219829ce86a43a77">FCFN3Star::Cid</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Cid = count of invariant sites (minimal suffcient stats) </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00036">36</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>Referenced by <a class="el" href="FCFN3_8cpp_source.shtml#l00075">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="ace3c43e5c025a8cd9976ce78202fa542"></a><!-- doxytag: member="FCFN3Star::Cnid" ref="ace3c43e5c025a8cd9976ce78202fa542" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#ace3c43e5c025a8cd9976ce78202fa542">FCFN3Star::Cnid</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Cnid = count of variant sites (minimal suffcient stats) </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00037">37</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>Referenced by <a class="el" href="FCFN3_8cpp_source.shtml#l00075">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a3afd13820d74fa145d6beafe2855e333"></a><!-- doxytag: member="FCFN3Star::f0" ref="a3afd13820d74fa145d6beafe2855e333" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFCFN3Star.shtml#a3afd13820d74fa145d6beafe2855e333">FCFN3Star::f0</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Fraction of invariant sites, f0 := Cid/(Cid+Cnid) </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00038">38</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a47a41d53ca005cab246ef1954e8e34e0"></a><!-- doxytag: member="FCFN3Star::n_dimensions" ref="a47a41d53ca005cab246ef1954e8e34e0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#a47a41d53ca005cab246ef1954e8e34e0">FCFN3Star::n_dimensions</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dimensions of the labelled Domain,. </p>
<p>ie, number of distinct branch lengths that have this topology label. </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00044">44</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>Referenced by <a class="el" href="FCFN3_8cpp_source.shtml#l00051">FCFN3Star()</a>.</p>

</div>
</div>
<a class="anchor" id="acdf33272ab3d95cd51709cd39a846ddd"></a><!-- doxytag: member="FCFN3Star::n_interval_calls" ref="acdf33272ab3d95cd51709cd39a846ddd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#acdf33272ab3d95cd51709cd39a846ddd">FCFN3Star::n_interval_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of interval function calls. </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00047">47</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>Referenced by <a class="el" href="FCFN3_8cpp_source.shtml#l00051">FCFN3Star()</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00064">get_interval_calls()</a>, and <a class="el" href="FCFN3_8cpp_source.shtml#l00075">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a1f84d41d7101ffe0d1485f414065d09e"></a><!-- doxytag: member="FCFN3Star::n_real_calls" ref="a1f84d41d7101ffe0d1485f414065d09e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFCFN3Star.shtml#a1f84d41d7101ffe0d1485f414065d09e">FCFN3Star::n_real_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of real function calls. </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00049">49</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

<p>Referenced by <a class="el" href="FCFN3_8cpp_source.shtml#l00051">FCFN3Star()</a>, <a class="el" href="FCFN3_8hpp_source.shtml#l00069">get_real_calls()</a>, and <a class="el" href="FCFN3_8cpp_source.shtml#l00098">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a1d596a2072a382eb4e11d99bca03b81d"></a><!-- doxytag: member="FCFN3Star::TotSites" ref="a1d596a2072a382eb4e11d99bca03b81d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFCFN3Star.shtml#a1d596a2072a382eb4e11d99bca03b81d">FCFN3Star::TotSites</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Total number of sites </p>

<p>Definition at line <a class="el" href="FCFN3_8hpp_source.shtml#l00045">45</a> of file <a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="FCFN3_8hpp_source.shtml">FCFN3.hpp</a></li>
<li><a class="el" href="FCFN3_8cpp_source.shtml">FCFN3.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classFCFN3Star.shtml">FCFN3Star</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:24 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
