<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: Member List</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1AdaptiveHistogramVCollator.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">subpavings::AdaptiveHistogramVCollator Member List</div>  </div>
</div><!--header-->
<div class="contents">
This is the complete list of members for <a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a1c28c75c070df4a922a066092cd7427e">AdaptiveHistogramVCollator</a>(CollatorSPVnode *spn)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td><code> [explicit, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#addfe1e7d9ec6cfeed3bcbd6f35ce98b2">AdaptiveHistogramVCollator</a>()</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td><code> [explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a28798e968c6693434cd189a64b185b96">AdaptiveHistogramVCollator</a>(const AdaptiveHistogramValidation &amp;adh, int whatSum)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td><code> [explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ab2c174cc93b8d61a5dae5d698a47e392">AdaptiveHistogramVCollator</a>(const AdaptiveHistogramVCollator &amp;other)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#af0f2129ebf8fc93357f877c5bac8e5b8">AdaptiveHistogramVCollator</a>(const AdaptiveHistogramVCollator &amp;other, int toSubtract)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a5db65fac4ff8b3de933909f6d83f8e02">addToCollationWithVal</a>(const AdaptiveHistogramValidation &amp;adh, int whatSum, size_t &amp;agg)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a6b81c529e7249fa666b288e24cbac5fd">getBisectionSearchEstimate</a>(int method, std::vector&lt; size_t &gt; &amp;winner, std::vector&lt; size_t &gt; &amp;loser, std::vector&lt; double &gt; &amp;deltaWinner, std::vector&lt; double &gt; &amp;deltaLoser)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a8f7b4de816404be827c1b201aa0d6edc">getHistScheffeSet</a>(std::vector&lt; std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &gt; &amp;vecScheffeSetVec)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a1ea3cb0ee5fea756fc45445fec2db166">getHistScheffeWinner</a>(std::vector&lt; std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &gt; &amp;vecScheffeSetVec, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;vecWinnerVec, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecDeltaWinnerVec)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a596a34b5f83f532160c5ab9104d6aa00">getHistYatSet</a>(std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecYatSet)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ab121bb960439438575c2115944990724">getInfDelta</a>(std::vector&lt; double &gt; &amp;vecInfDelta, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecDeltaMaxVec, int n)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a503d9bbe2f7854466570bad4fd2d0d42">getLeafLevelsString</a>() const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#adc9f2cb78559081ca925defe641bd583">getMinDelta</a>(int maxCheck, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecDeltaMaxVec)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a130f3418c9610b38030221924a846011">getMinDistEst</a>(std::vector&lt; double &gt; &amp;maxDelta, std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;veYatSet)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a78eefcadb3a5247ce6712493b85976f9">getMinDistTheta</a>(std::vector&lt; std::vector&lt; int &gt; &gt; &amp;vecMinDistTheta, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecDeltaMaxVec, int n)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a174349942bc7f76e6804aeb3714d1f3b">getNodesDelta</a>(std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &amp;YatSet, int thisTheta)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a045c1338ed19503f5485f40ee7d2e218">getNodesMaxDelta</a>(std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecYatSet, int thisTheta)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a7268bf31ef2baf216134f5751e5c6173">getNumberCollated</a>() const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a53105611d6db4dc208275fd049475cd6">getRootBox</a>()</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#aa66a678df6a370f60bb7141ddb28a043">getScheffeSetAll</a>(CollatorSPVnode *const splitNode, vector&lt; set&lt; CollatorSPVnode *, less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecScheffeSet, list&lt; set&lt; CollatorSPVnode *, less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;listScheffeSet)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a4b3830bf47fe4738c22f4a53858d90fc">getScheffeWinner</a>(std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecScheffeSet, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;vecWinnerVec, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecDeltaWinnerVec)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ab38cfd38290579694a35950af5c80c36">getSplitNodePtr</a>(CollatorSPVnode *&amp;splitCollNode, SPSVnode *const spn)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a4fc5807fde8de008b9551f6347c6d46e">getSubPaving</a>() const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a49437661609894461106a99c37ddeed5">getTotalNodes</a>()</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ad94f1c5c6943e7bb35e74030af5113fd">getYatracosClassAll</a>(CollatorSPVnode *const splitCollNode, std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecRowYatSet, std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecColYatSet, std::list&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;listYatSet)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a741a4e9b7dac5673c641b3a991b4a419">getYatracosDelta</a>(std::list&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;listYatSet, std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecRowYatSet, std::vector&lt; std::set&lt; CollatorSPVnode *, std::less&lt; CollatorSPVnode * &gt; &gt; &gt; &amp;vecColYatSet, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;vecMaxDeltaVec)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a1d9fe1618884a4cdbfc211a04dcd4a65">makeAverage</a>() const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ab9c2ad2ebbf0f50de0e06f92f222f0a7">makeMinimal</a>()</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ae8856c3f66db77b6f0ce896ff4f54ce5">operator+=</a>(const AdaptiveHistogramVCollator &amp;rhs)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a56acb0f59cd7c99a5ef8db73fd2b3294">operator-</a>(const AdaptiveHistogramVCollator &amp;rhs) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a06855795e0d1d9c5a268ec91153346d4">operator=</a>(const AdaptiveHistogramVCollator &amp;rhs)</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a95cf6201a4b2259eb5138193affc5f6b">outputAccumulationToTxtTabs</a>(const std::string &amp;s) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#af05a34e32911a81b2af37529994bae57">outputAverageToTxtTabs</a>(const std::string &amp;s) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ac58c3f7d536168d4c9c8cbceb95b1908">outputDifferenceToTxtTabs</a>(const std::string &amp;s) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a6cbc7efc97efaa397a6ed5c38b817e3a">outputGraphDot</a>() const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#ad2a470a3974ad963de7debb7fe870efe">outputToTxtTabs</a>(const std::string &amp;s) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a3a6ff433649c11815e6be5dbd04977bf">outputToTxtTabs</a>(const std::string &amp;s, int whichColl) const </td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#aceeaa0eac30ad826088e670544e1fcac">rootVCollator</a></td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml#a7fdc8a90199d4b39d4fb9179a8aada56">~AdaptiveHistogramVCollator</a>()</td><td><a class="el" href="classsubpavings_1_1AdaptiveHistogramVCollator.shtml">subpavings::AdaptiveHistogramVCollator</a></td><td></td></tr>
</table></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:32 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
