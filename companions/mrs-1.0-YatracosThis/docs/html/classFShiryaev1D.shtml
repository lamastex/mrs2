<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FShiryaev1D Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classFShiryaev1D.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">FShiryaev1D Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="FShiryaev1D" --><!-- doxytag: inherits="Fobj" -->
<p>one-dimensional Shiryaev density as a function object class  
 <a href="classFShiryaev1D.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for FShiryaev1D:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFShiryaev1D__inherit__graph.png" border="0" usemap="#FShiryaev1D_inherit__map" alt="Inheritance graph"/></div>
<map name="FShiryaev1D_inherit__map" id="FShiryaev1D_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for FShiryaev1D:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFShiryaev1D__coll__graph.png" border="0" usemap="#FShiryaev1D_coll__map" alt="Collaboration graph"/></div>
<map name="FShiryaev1D_coll__map" id="FShiryaev1D_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classFShiryaev1D-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a777dc6438cdc40a0c93dedfc491900f3">FShiryaev1D</a> (real <a class="el" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">aa</a>, real <a class="el" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">cc</a>, real <a class="el" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>, bool LogPi, int Prior)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a8e4ea007da7c37a1491f56fe663b7437">operator()</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#a8e4ea007da7c37a1491f56fe663b7437"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#af6742131d4d7acf6327d757a112b35ee">operator()</a> (const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#af6742131d4d7acf6327d757a112b35ee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a18052485756b302b7ac397355f6fc48c">LabBoxVolume</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;LB)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a defined pure virtual function for default Lebesgue measure (volume) of a labelled box  <a href="#a18052485756b302b7ac397355f6fc48c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a3012ae56329e3f2e9bf34cec1db2aceb">get_interval_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of interval function calls.  <a href="#a3012ae56329e3f2e9bf34cec1db2aceb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a893357913c92294604f237dcb1117a6c">get_real_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of real function calls.  <a href="#a893357913c92294604f237dcb1117a6c"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">aa</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">cc</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a66f8360cc03dd1361ceb124fc15c0d91">AA</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a4da3224ab754db6253a91b2f50c48bd7">CC</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a883a026ce025e27ad577d7119aec3d5b">n_interval_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of interval function calls.  <a href="#a883a026ce025e27ad577d7119aec3d5b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D.shtml#a509bc24aebc78394aeb8181620fa6c72">n_real_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of real function calls.  <a href="#a509bc24aebc78394aeb8181620fa6c72"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>one-dimensional Shiryaev density as a function object class </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00034">34</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a777dc6438cdc40a0c93dedfc491900f3"></a><!-- doxytag: member="FShiryaev1D::FShiryaev1D" ref="a777dc6438cdc40a0c93dedfc491900f3" args="(real aa, real cc, real DomainLimit, bool LogPi, int Prior)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFShiryaev1D.shtml#a777dc6438cdc40a0c93dedfc491900f3">FShiryaev1D::FShiryaev1D</a> </td>
          <td>(</td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>aa</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>cc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>DomainLimit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>LogPi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Prior</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00046">46</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00036">aa</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00038">AA</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00037">cc</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00039">CC</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00077">LabBox::L</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00052">Fobj::LabDomainList</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00058">Fobj::PriorType</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00190">Fobj::setUsingLogDensity()</a>.</p>
<div class="fragment"><pre class="fragment">:
<a class="code" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">aa</a> (A),
<a class="code" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">cc</a>(E)
{
  <a class="code" href="classFobj.shtml#a809ddeff11d2485c9baef63217cf8ec5" title="set the target scale to natural logarithm">setUsingLogDensity</a> (LogPi);
  <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a> = Prior;
  <span class="keywordflow">if</span>(<a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>!=0)
  {
    cerr &lt;&lt; <span class="stringliteral">&quot;Only uniform prior defined here... Reset to Uniform Prior\n&quot;</span>;
    <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>=0;
  }
  <a class="code" href="classFShiryaev1D.shtml#a66f8360cc03dd1361ceb124fc15c0d91">AA</a> = _interval (<a class="code" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">aa</a>);
  <a class="code" href="classFShiryaev1D.shtml#a4da3224ab754db6253a91b2f50c48bd7">CC</a> = _interval(<a class="code" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">cc</a>);
  ivector domain (1, 1);
  <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a> Ldomain;
  domain[1] = interval (0.0000000000001, <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>);
  Ldomain.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a> = domain;
  Ldomain.<a class="code" href="classLabBox.shtml#a4f0197d8aaeb58676d6c50f0f229a63b" title="specifies the label L of the labeled box LabBox">L</a> = 0;
  <a class="code" href="classFobj.shtml#a7d5297f74590a7bf95aa65d37a72fdff" title="The initial collection of labelled domain boxes -- prior support.">LabDomainList</a>.push_back (Ldomain);
}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a3012ae56329e3f2e9bf34cec1db2aceb"></a><!-- doxytag: member="FShiryaev1D::get_interval_calls" ref="a3012ae56329e3f2e9bf34cec1db2aceb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D.shtml#a3012ae56329e3f2e9bf34cec1db2aceb">FShiryaev1D::get_interval_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of interval function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a541c0edbb08855d1e3cdbb45b0aa26af">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00050">50</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00041">n_interval_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D.shtml#a883a026ce025e27ad577d7119aec3d5b" title="Track number of interval function calls.">n_interval_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a893357913c92294604f237dcb1117a6c"></a><!-- doxytag: member="FShiryaev1D::get_real_calls" ref="a893357913c92294604f237dcb1117a6c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D.shtml#a893357913c92294604f237dcb1117a6c">FShiryaev1D::get_real_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of real function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a63df2521571faeb43663613a9a4611e7">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00055">55</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00043">n_real_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D.shtml#a509bc24aebc78394aeb8181620fa6c72" title="Track number of real function calls.">n_real_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a18052485756b302b7ac397355f6fc48c"></a><!-- doxytag: member="FShiryaev1D::LabBoxVolume" ref="a18052485756b302b7ac397355f6fc48c" args="(const LabBox &amp;LB)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual real <a class="el" href="classFShiryaev1D.shtml#a18052485756b302b7ac397355f6fc48c">FShiryaev1D::LabBoxVolume</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a defined pure virtual function for default Lebesgue measure (volume) of a labelled box </p>
<p>get the default volume (Lebesgue) of a labeled box</p>
<p>derived classes inherit interface and default behavior see [Item 34,P.166, Meyers, Effective C++]</p>
<p>an inline definition of the pure virtual function for default Lebesgue measure (volume) of a labeled box </p>

<p>Implements <a class="el" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00048">48</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{<span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D.shtml#a18052485756b302b7ac397355f6fc48c" title="a defined pure virtual function for default Lebesgue measure (volume) of a labelled box...">Fobj::LabBoxVolume</a>(LB);}
</pre></div>
</div>
</div>
<a class="anchor" id="a8e4ea007da7c37a1491f56fe663b7437"></a><!-- doxytag: member="FShiryaev1D::operator()" ref="a8e4ea007da7c37a1491f56fe663b7437" args="(const LabBox &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval FShiryaev1D::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>
<p>Derived classes inherit interface only see [Item 34,P.162, Meyers, Effective C++] </p>

<p>Implements <a class="el" href="classFobj.shtml#acf5ccd1fd7b302c8a1c77081b606a6ad">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00070">70</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00038">AA</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00028">BB</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00039">CC</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00041">n_interval_calls</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00024">PI</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01008">taylor::sin()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01095">taylor::tan()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFShiryaev1D.shtml#a883a026ce025e27ad577d7119aec3d5b" title="Track number of interval function calls.">n_interval_calls</a>++;
  ivector Box = X.Box;
                    <span class="comment">//, z=Ub(Box);</span>
  <span class="keywordtype">size_t</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (Box);
  <span class="comment">//interval Nc = pow(AA, 1.0/BB) / GAMMA1PLUS1OVERBB;</span>
  interval aXtoL = <a class="code" href="classFShiryaev1D.shtml#a66f8360cc03dd1361ceb124fc15c0d91">AA</a> * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (Box[a], <a class="code" href="FShiryaev1D_8hpp.shtml#ad91fa5bb7926a489c6e63eb6f6ca4a19">BB</a>);
  <span class="comment">//interval result = </span>
  <span class="comment">// Nc * exp(- aXtoL) * (1.0 + (CC * sin( aXtoL * tan( BB * PI) )));</span>
  interval result =
    <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-aXtoL) * (1.0 + (<a class="code" href="classFShiryaev1D.shtml#a4da3224ab754db6253a91b2f50c48bd7">CC</a> * <a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">sin</a> (aXtoL * <a class="code" href="namespacetaylor.shtml#ac2888bbea40e7b720c6502639680302a">tan</a> (<a class="code" href="FShiryaev1D_8hpp.shtml#ad91fa5bb7926a489c6e63eb6f6ca4a19">BB</a> * <a class="code" href="FShiryaev1D_8hpp.shtml#a598a3330b3c21701223ee0ca14316eca">PI</a>))));
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a> (result) : result;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af6742131d4d7acf6327d757a112b35ee"></a><!-- doxytag: member="FShiryaev1D::operator()" ref="af6742131d4d7acf6327d757a112b35ee" args="(const LabPnt &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real FShiryaev1D::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;&#160;</td>
          <td class="paramname"><em>LP</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>

<p>Implements <a class="el" href="classFobj.shtml#a7e89aa4918cf8e40683dde607257d1ee">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00087">87</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00036">aa</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00029">bb</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00037">cc</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00043">n_real_calls</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00025">Pi</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00033">LabPnt::Pnt</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01008">taylor::sin()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01095">taylor::tan()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFShiryaev1D.shtml#a509bc24aebc78394aeb8181620fa6c72" title="Track number of real function calls.">n_real_calls</a>++;
  rvector Pnt = X.Pnt;
                    <span class="comment">//, z=Ub(Pnt);</span>
  <span class="keywordtype">size_t</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (Pnt);
  <span class="comment">//real Nc = pow(aa, 1.0/bb) / Gamma1plus1overbb;</span>
  real aXtoL = <a class="code" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">aa</a> * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (Pnt[a], <a class="code" href="FShiryaev1D_8hpp.shtml#afe4fb267f5fd876bc5f069b0a76054e4">bb</a>);
  <span class="comment">//real result = Nc * exp(- aXtoL) * </span>
  <span class="comment">//              (1.0 + (cc * sin( aXtoL * tan( bb * Pi) )));</span>
  real result =
    <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-aXtoL) * (1.0 + (<a class="code" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">cc</a> * <a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">sin</a> (aXtoL * <a class="code" href="namespacetaylor.shtml#ac2888bbea40e7b720c6502639680302a">tan</a> (<a class="code" href="FShiryaev1D_8hpp.shtml#afe4fb267f5fd876bc5f069b0a76054e4">bb</a> * <a class="code" href="FShiryaev1D_8hpp.shtml#a0c233fcb94ea9f05596b48427095806e">Pi</a>))));
  <span class="comment">//assert( result &lt; 1.0 );</span>
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a> (result) : result;
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a6ad03231ef56eaa821a14088c28e5301"></a><!-- doxytag: member="FShiryaev1D::aa" ref="a6ad03231ef56eaa821a14088c28e5301" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFShiryaev1D.shtml#a6ad03231ef56eaa821a14088c28e5301">FShiryaev1D::aa</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00036">36</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00046">FShiryaev1D()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00087">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a66f8360cc03dd1361ceb124fc15c0d91"></a><!-- doxytag: member="FShiryaev1D::AA" ref="a66f8360cc03dd1361ceb124fc15c0d91" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="classFShiryaev1D.shtml#a66f8360cc03dd1361ceb124fc15c0d91">FShiryaev1D::AA</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00038">38</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00046">FShiryaev1D()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00070">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a60d3bffaae43ec10e8204ba1bed5f708"></a><!-- doxytag: member="FShiryaev1D::cc" ref="a60d3bffaae43ec10e8204ba1bed5f708" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFShiryaev1D.shtml#a60d3bffaae43ec10e8204ba1bed5f708">FShiryaev1D::cc</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00037">37</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00046">FShiryaev1D()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00087">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a4da3224ab754db6253a91b2f50c48bd7"></a><!-- doxytag: member="FShiryaev1D::CC" ref="a4da3224ab754db6253a91b2f50c48bd7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="classFShiryaev1D.shtml#a4da3224ab754db6253a91b2f50c48bd7">FShiryaev1D::CC</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00039">39</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00046">FShiryaev1D()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00070">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a883a026ce025e27ad577d7119aec3d5b"></a><!-- doxytag: member="FShiryaev1D::n_interval_calls" ref="a883a026ce025e27ad577d7119aec3d5b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D.shtml#a883a026ce025e27ad577d7119aec3d5b">FShiryaev1D::n_interval_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of interval function calls. </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00041">41</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00050">get_interval_calls()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00070">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a509bc24aebc78394aeb8181620fa6c72"></a><!-- doxytag: member="FShiryaev1D::n_real_calls" ref="a509bc24aebc78394aeb8181620fa6c72" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D.shtml#a509bc24aebc78394aeb8181620fa6c72">FShiryaev1D::n_real_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of real function calls. </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00043">43</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00055">get_real_calls()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00087">operator()()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a></li>
<li><a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classFShiryaev1D.shtml">FShiryaev1D</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:25 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
