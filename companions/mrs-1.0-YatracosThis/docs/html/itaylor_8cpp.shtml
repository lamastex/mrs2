<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: itaylor.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('itaylor_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">itaylor.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="itaylor_8hpp_source.shtml">itaylor.hpp</a>&quot;</code><br/>
</div>
<p><a href="itaylor_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml">taylor</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6e77b6cb75729b58b05e3b3c5709aefc">taylor::var_itaylor</a> (int ord, const real &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a44a70c367b1b6a794db51766b92e6199">taylor::var_itaylor</a> (int ord, const interval &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a08f702327849871fe51880e06ca9d597">taylor::const_itaylor</a> (int ord, const real &amp;c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a181e11b88a03a4851d44b5cfd6adbd78">taylor::const_itaylor</a> (int ord, const interval &amp;c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#abdd8de17279023fa411c8c69dbce60df">taylor::get_order</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">ivector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a50419e8b461f8b4155495d943cbc4469">taylor::get_all_coef</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6694e32c6d5d68b7081fe4079435279e">taylor::get_j_coef</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int j)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac75b67e2f3d78871403f431867807ee0">taylor::print_itaylor</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a48b8404764aa49f337985ba478f4e201">taylor::print_itaylor</a> (std::ostream &amp;os, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int width, int digits)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af2f42b7045a6bc7bdf5225bb5b7f07bc">taylor::operator&lt;&lt;</a> (std::ostream &amp;os, <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a92d08c093471e48086af561e044283d2">taylor::operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3a700687e786e96af9fb63575f941188">taylor::operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a02e03dd1f37b791466c6ceaff7dadb36">taylor::operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a67bd05fe808051b2bd312fb3f488d448">taylor::operator*</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a782087dc9a12d1b6eb6ecd189b7454f8">taylor::operator/</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac0be684300be0c2c140b5f21a18a021d">taylor::operator-</a> (const interval &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a0ccc4b187f19c84e174cff0e0415baf9">taylor::operator+</a> (const interval &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a852eb06a98b349480553d8124724dbc0">taylor::operator*</a> (const interval &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a38d9e25f2193b6de0fb6a5a235c4a617">taylor::operator/</a> (const interval &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a5fbafc16645c05d60634be3ba1ae75fe">taylor::operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const interval &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a73e071be2c515e2213963c5d4adfd978">taylor::operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const interval &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a464e53f823f12c772db53cf1a34583d6">taylor::operator*</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const interval &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa35f5bbbbd3b7efecf6db9a0900e3a58">taylor::operator/</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const interval &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aea48d1e448300b1b05ce34a3c9228fd6">taylor::operator-</a> (const real &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a401f53ac76107b6d9b890b4b0ecbd423">taylor::operator+</a> (const real &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#afb0205c63be46b8c4d65b46f0f2c63d5">taylor::operator*</a> (const real &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ab62d7c3647e2a62d7863f6cb838ed71f">taylor::operator/</a> (const real &amp;x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a32e05ef71dbf31a76381ce8e36d8684d">taylor::operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const real &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa32df806dfcdb79632f619d6e725877b">taylor::operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const real &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac5cd097e68711b10ef867594c1c4873e">taylor::operator*</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const real &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a240b2c541cf0d46b9a7810987448631c">taylor::operator/</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const real &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a8ba1d848b912b57f58e2dbbbb1da7091">taylor::operator-</a> (int x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad3050b08b9a846b6b6d7556593d4d43f">taylor::operator+</a> (int x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a0584bb8817c35fb018eb6a16346396fa">taylor::operator*</a> (int x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa68052fbd6ae385609fb861cd61c970d">taylor::operator/</a> (int x, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a99a5e76ba886177f7789b309a1321c32">taylor::operator-</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad7810135b75df4525eeaa320940436d3">taylor::operator+</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aabf6fb8b1928b06ac73dfc55bee2e993">taylor::operator*</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a770113818b5fc83f7eefe876cbdd8295">taylor::operator/</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9962829203c2ce858b9158543d577e0d">taylor::f_g_u</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;<a class="el" href="errorfunc_8hpp.shtml#aacb77b1211a6ca2e2beff1811cf9ecf4">f</a>, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;g, const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;u, int nb_function)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a37319bcf4ecec3b74d87c39c9b5a8fce">taylor::sqr</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a5a055d2fa829aab1ef9d9d452dbf635b">taylor::sqrt</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af9650236965b00326a3be8175c47789c">taylor::sqrt</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int n)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a282c010c1d5e11c9363b21a788e9b1d5">taylor::sqrt1mx2</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a72536b0978e6cdcec6adf898e2642d31">taylor::sqrtx2m1</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a8a7b5c467bf63f6e51bd5b6c55ddd74d">taylor::sqrtp1m1</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a585467c43fcacacb16fcfa01320f4a15">taylor::pow</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, const interval &amp;alpha)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af95b8719093fcf56b4c366a57a604c0e">taylor::exp</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af148c02264bd6b573ce1edf7fca71aa0">taylor::expm1</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac7c27e2d4a78dbeaa37fb7803f8d1170">taylor::ln</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ae68d1b569d3411210304ec4001ea4a1e">taylor::lnp1</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a62ec379740c8e57b65eb49a4f78c86f5">taylor::sin</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3ffa0c28ccb08c1f1b043e9dfab43c04">taylor::cos</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3cbd901c0e176be2efe58be70bb48db6">taylor::tan</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9e16ad2608259386bb54992b05bb9da9">taylor::cot</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ace92ea0efa6fa5768a476784b1761859">taylor::sinh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a964f8e36028c83bc8ae0b836730a900c">taylor::cosh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a0de984183956000ebf6f44a817719266">taylor::tanh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a968502b349e1cd5621644b34495d9b3f">taylor::coth</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a8d6631d0906e0dbe8d5e0e573e6197ae">taylor::asin</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a10ee4a237acfa23e5566bdbc6256c34b">taylor::acos</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad4efebf4e010be4ae41fdc661f00417d">taylor::atan</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af339a9fb39e8c7141cc881baa47c4ea8">taylor::acot</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aea804ac21a6ac493d1b3b94c320c6d5f">taylor::asinh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9aedcec32b2edf6a4f93169199469bb5">taylor::acosh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3f93cbff36aa827c4da8179674cc1d41">taylor::atanh</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a425c4a560efdc61060e7c8d368c56a8f">taylor::acoth</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ae34779c49ee5e1ce798eafb83de238d0">taylor::erf</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a33b5e2b4ab7dcafac6e1d96991c94e8d">taylor::erfc</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a319f85acd3f83eb66fba6be32346573e">taylor::sqrt1px2</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classitaylor.shtml">itaylor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a51730e93b533e086e3d94d2aaeba4e24">taylor::powerAtZero</a> (const <a class="el" href="classitaylor.shtml">itaylor</a> &amp;x, int n)</td></tr>
</table>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="itaylor_8cpp.shtml">itaylor.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:21 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
