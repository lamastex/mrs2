<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: SeedGen.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('MCMCGRSims_2SeedGen_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">MCMCGRSims/SeedGen.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;time.h&gt;</code><br/>
<code>#include &lt;fstream&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
<code>#include &lt;gsl/gsl_qrng.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_randist.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_cdf.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_integration.h&gt;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &quot;<a class="el" href="toolz_8hpp_source.shtml">toolz.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="histall_8hpp_source.shtml">histall.hpp</a>&quot;</code><br/>
<code>#include &quot;dataprep.hpp&quot;</code><br/>
<code>#include &lt;vector&gt;</code><br/>
<code>#include &lt;iterator&gt;</code><br/>
<code>#include &lt;valarray&gt;</code><br/>
</div>
<p><a href="MCMCGRSims_2SeedGen_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="MCMCGRSims_2SeedGen_8cpp.shtml#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a0ddf1224851353fc92bfbff6f499fa97"></a><!-- doxytag: member="MCMCGRSims/SeedGen.cpp::main" ref="a0ddf1224851353fc92bfbff6f499fa97" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ImageSetDiff_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="MCMCGRSims_2SeedGen_8cpp_source.shtml#l00046">46</a> of file <a class="el" href="MCMCGRSims_2SeedGen_8cpp_source.shtml">MCMCGRSims/SeedGen.cpp</a>.</p>

<p>References <a class="el" href="toolz_8cpp_source.shtml#l00116">DrawUnifBox()</a>, <a class="el" href="spsnode_8cpp_source.shtml#l01328">subpavings::SPSnode::getLeaves()</a>, <a class="el" href="adaptivehistogram_8cpp_source.shtml#l01216">subpavings::AdaptiveHistogram::getSubPaving()</a>, and <a class="el" href="adaptivehistogram_8cpp_source.shtml#l02971">subpavings::AdaptiveHistogram::splitToShape()</a>.</p>
<div class="fragment"><pre class="fragment">{
   <span class="comment">//=======================================================================//</span>
  <span class="comment">//---set up parameters for data---------------------------------</span>
   <span class="keywordtype">size_t</span> n=atoi(argv[1]);  <span class="comment">// number to generate</span>
   <span class="keywordtype">int</span> H = atoi(argv[2]); <span class="comment">// number of simulations</span>
   <span class="keywordtype">int</span> d = atoi(argv[3]); <span class="comment">// dimensions</span>
  <span class="keywordtype">int</span> mix = atoi(argv[4]); <span class="comment">//mix</span>
   
  <span class="comment">//read in seed </span>
  <span class="comment">//string seedFile = &quot;Seed.txt&quot;;</span>
  <span class="comment">//long s;</span>
  
<span class="comment">//  ifstream infile(seedFile.c_str());</span>
<span class="comment">//  while ( !infile.eof() ) {infile &gt;&gt;s;}</span>
  <span class="comment">//------- prepare to generate some data for the tests -----------</span>
   <span class="comment">//set up a random number generator for bivariate gaussian rvs</span>
    <span class="keyword">const</span> gsl_rng_type * T;
    gsl_rng * r;
   <span class="comment">//create a generator chosen by the environment variable GSL_RNG_TYPE</span>
    gsl_rng_env_setup();
    T = gsl_rng_default;
    r = gsl_rng_alloc (T);
    <span class="comment">//create a generator chosen by the environment variable GSL_RNG_TYPE</span>
      vector&lt;long&gt; seed_vector;
   <span class="keywordtype">long</span> s = time (NULL) * getpid();
      gsl_rng_set(r, s);
     seed_vector.push_back(s);
    <span class="comment">//---------string formatting-----------------------------------------</span>
   <span class="keywordtype">string</span> outputFileName;<span class="comment">// for output file</span>
    ofstream oss;         <span class="comment">// ofstream object</span>
    oss &lt;&lt; scientific;  <span class="comment">// set formatting for input to oss</span>
    oss.precision(10);
   <span class="comment">//=======================================================================//</span>
  
    <span class="comment">//=================Setting up parameters for the distribution============//</span>
    <span class="comment">//data generating partition</span>
    ivector pavingBox(d);
    interval pavingInterval(0,1);
    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=1; i &lt;= d; i++) { pavingBox[i] = pavingInterval; }

    <span class="comment">// data sampled as uniform mixture over leaves of sub-paving myPart</span>
    <span class="comment">//make an Adaptive Histogram object with a specified box</span>
    <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> myPart(pavingBox);
    <span class="comment">// a container for the boxes</span>
    vector&lt;ivector&gt; Pboxes;
    <span class="comment">//mixture shape</span>
   <span class="keywordtype">string</span> mixShape;
   <span class="keywordflow">if</span> (mix == 1) {mixShape = <span class="stringliteral">&quot;1,1&quot;</span>; }<span class="comment">// this is the basic uniform</span>
   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mix == 2) { mixShape = <span class="stringliteral">&quot;1,2,2&quot;</span>; }
   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mix==3) { mixShape = <span class="stringliteral">&quot;2,3,4,4,3,4,4,2&quot;</span>; }   
   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mix==4) {mixShape = <span class="stringliteral">&quot;5,6,7,8,9,10,10,5,5,6,6,5,6,6,7,7,6,5,5,6,7,8,9,10,10,5,7,8,8,6,5,5,5,5,7,7,7,8,9,10,10,5,5,5,6,7,7,5,5,6,6,5,5,5,5,5,5,6,7,8,9,10,10&quot;</span>; }   
  
   myPart.splitToShape(mixShape);<span class="comment">// uniform mixture     </span>
    <a class="code" href="namespacesubpavings.shtml#ad23942a388da964ca7487e496d0f2923" title="Define type SPSnodePtrs as container of pointers to SPSnodes.">SPSnodePtrs</a> Pleaves; <span class="comment">// set up empty container for leaf node pointers</span>
    <a class="code" href="namespacesubpavings.shtml#a3d06253195e32236cc10b1c2050073c9" title="Define type SPSnodePtrsItr as an iterator over SPSnodePtrs.">SPSnodePtrsItr</a> it; <span class="comment">// and an iterator over the container</span>
    myPart.getSubPaving()-&gt;getLeaves(Pleaves); <span class="comment">// fill the container</span>
    <span class="comment">// container is filled by reading leaves off tree from left to right</span>
    <span class="keywordflow">for</span>(it = Pleaves.begin(); it &lt; Pleaves.end(); it++) {
        Pboxes.push_back((*it)-&gt;getBox());
    }
   <span class="keywordtype">size_t</span> PartSize = Pboxes.size();
  <span class="comment">//=======================================================================//</span>
   
   <span class="comment">//=========================Generate data=================================//   </span>

  
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> h=1; h&lt;=H; h++){
    
    cout &lt;&lt; <span class="stringliteral">&quot;Generating data: &quot;</span> &lt;&lt; endl;
      <span class="comment">// data sampled as uniform equi-mixture over leaves of sub-paving myPart</span>
      <span class="comment">//create a generator chosen by the environment variable GSL_RNG_TYPE</span>
    
    
    <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a> theData;   
      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; n; i++) {
      rvector thisrv(d);
         <span class="keywordtype">size_t</span> RndBoxNum = floor(PartSize*gsl_rng_uniform(r));
         <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=1; i &lt;= d; i++) {
        thisrv = <a class="code" href="toolz_8cpp.shtml#abc84f170f624cc9d449c0cfcaac0f157" title="Draw a vector uniformly at pseudo-random from a Box.">DrawUnifBox</a>(r,Pboxes[RndBoxNum]);              
      }
         <span class="comment">// put points generated into container</span>
         theData.push_back(thisrv);
    <span class="comment">//  cout &lt;&lt; thisrv &lt;&lt; endl;</span>
      }
  } <span class="comment">// end of loop for histograms</span>
  
  
  <span class="comment">// free the random number generator</span>
     gsl_rng_free (r);
    
     outputFileName = <span class="stringliteral">&quot;Seed.txt&quot;</span>;
      <span class="comment">//read into file</span>
    oss.open(outputFileName.c_str());
    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; seed_vector.size(); i++){
      oss &lt;&lt; seed_vector[i] &lt;&lt; endl;
    }
    oss &lt;&lt; flush;
    oss.close();
  
      <span class="keywordflow">return</span> 0;

} <span class="comment">// end of Uniform MIAE program</span>
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="MCMCGRSims_2SeedGen_8cpp.shtml">SeedGen.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:23 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
