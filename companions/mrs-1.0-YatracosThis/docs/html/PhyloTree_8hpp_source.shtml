<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: PhyloTree.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('PhyloTree_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">PhyloTree.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="PhyloTree_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment"> * your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00026"></a>00026 <span class="preprocessor">#ifndef __PHYLOTREE_HPP__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#define __PHYLOTREE_HPP__</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;fstream&gt;</span> 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;sstream&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;getopt.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;interval.hpp&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;imath.hpp&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;rmath.hpp&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;ivector.hpp&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;functional&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;numeric&gt;</span>  <span class="comment">// to be able to use accumulate algorithm</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;exception&gt;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;intvector.hpp&quot;</span>
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00050"></a>00050 
<a name="l00051"></a>00051 <span class="preprocessor">#include &lt;gop.hpp&gt;</span>  <span class="comment">// cxsc global optimisation, for HessTypes etc</span>
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="keyword">using namespace </span>std;
<a name="l00054"></a>00054 <span class="keyword">using namespace </span>cxsc;
<a name="l00055"></a>00055 
<a name="l00059"></a>00059 <span class="keyword">class </span><a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>;    
<a name="l00060"></a>00060 <span class="keyword">class </span><a class="code" href="classPhyloTree.shtml">PhyloTree</a>;    
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 
<a name="l00066"></a>00066 
<a name="l00067"></a><a class="code" href="PhyloTree_8hpp.shtml#a949af9a126c7f41a99746ced5d664690">00067</a> <span class="keyword">typedef</span> vector&lt;PhyloNode*&gt; <a class="code" href="PhyloTree_8hpp.shtml#a949af9a126c7f41a99746ced5d664690" title="a container of pointers to PhyloNodes">PhyloPtrs</a>;
<a name="l00069"></a><a class="code" href="PhyloTree_8hpp.shtml#a0a3a649fee0ead336be1530dea932165">00069</a> <span class="keyword">typedef</span> PhyloPtrs::iterator <a class="code" href="PhyloTree_8hpp.shtml#a0a3a649fee0ead336be1530dea932165" title="iterator over a container of pointers to PhyloNodes">PhyloPtrsItr</a>;
<a name="l00071"></a>00071 
<a name="l00075"></a>00075 
<a name="l00076"></a><a class="code" href="PhyloTree_8hpp.shtml#a7924aedff3cf2bea3ffccb7b9f59f970">00076</a> <span class="keyword">typedef</span> vector&lt;PhyloTree*&gt; <a class="code" href="PhyloTree_8hpp.shtml#a7924aedff3cf2bea3ffccb7b9f59f970" title="a container of pointers to PhyloTrees">PhyloTreePtrs</a>;
<a name="l00078"></a><a class="code" href="PhyloTree_8hpp.shtml#a2b4b80181cb6658430fed06941d6d356">00078</a> <span class="keyword">typedef</span> PhyloTreePtrs::iterator <a class="code" href="PhyloTree_8hpp.shtml#a2b4b80181cb6658430fed06941d6d356" title="an iterator over a container of PhyloTrees">PhyloTreePtrsItr</a>;
<a name="l00080"></a>00080 
<a name="l00084"></a>00084 
<a name="l00085"></a><a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db">00085</a> <span class="keyword">typedef</span> vector&lt;interval&gt; <a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db" title="a container of intervals for interval probabilities">IntervalProbs</a>;
<a name="l00087"></a><a class="code" href="PhyloTree_8hpp.shtml#ae6dce39bb2373cdd25c3cd78882b1a14">00087</a> <span class="keyword">typedef</span> IntervalProbs::iterator <a class="code" href="PhyloTree_8hpp.shtml#ae6dce39bb2373cdd25c3cd78882b1a14" title="iterator over container of interval probabilities">IntervalProbsIt</a>;
<a name="l00089"></a><a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114">00089</a> <span class="keyword">typedef</span> vector&lt;real&gt; <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>;
<a name="l00091"></a><a class="code" href="PhyloTree_8hpp.shtml#ae814ea4f78985c9aadd5e090ea7afd07">00091</a> <span class="keyword">typedef</span> RealProbs::iterator <a class="code" href="PhyloTree_8hpp.shtml#ae814ea4f78985c9aadd5e090ea7afd07" title="iterator over container of real probabilities">RealProbsIt</a>;
<a name="l00093"></a><a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7">00093</a> <span class="keyword">typedef</span> vector&lt;HessType&gt; <a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7" title="a container of HessTypes for HessType probabilities">HessProbs</a>;
<a name="l00095"></a><a class="code" href="PhyloTree_8hpp.shtml#a307afe6ee485d09861ce0a119769e184">00095</a> <span class="keyword">typedef</span> HessProbs::iterator <a class="code" href="PhyloTree_8hpp.shtml#a307afe6ee485d09861ce0a119769e184" title="iterator over container of HessType probabilities">HessProbsIt</a>;
<a name="l00097"></a>00097 
<a name="l00101"></a>00101 
<a name="l00102"></a><a class="code" href="PhyloTree_8hpp.shtml#a4457ee43eaa9b550b64e1542c62f7a6f">00102</a> <span class="keyword">typedef</span> real (*<a class="code" href="PhyloTree_8hpp.shtml#a4457ee43eaa9b550b64e1542c62f7a6f" title="for probabilities as reals">RealTranProb_FctPtr</a>)(<span class="keyword">const</span> real&amp;, <span class="keyword">const</span> int, <span class="keyword">const</span> int);
<a name="l00104"></a><a class="code" href="PhyloTree_8hpp.shtml#a6961512ff8fd6fa5a520b93c63c4ad60">00104</a> <span class="keyword">typedef</span> interval (*<a class="code" href="PhyloTree_8hpp.shtml#a6961512ff8fd6fa5a520b93c63c4ad60" title="for probabilities as intervals">IntervalTranProb_FctPtr</a>)(<span class="keyword">const</span> interval&amp;, <span class="keyword">const</span> int, <span class="keyword">const</span> int);
<a name="l00106"></a><a class="code" href="PhyloTree_8hpp.shtml#aa81a7e0d071642af42626caebfef6eeb">00106</a> <span class="keyword">typedef</span> HessType (*<a class="code" href="PhyloTree_8hpp.shtml#aa81a7e0d071642af42626caebfef6eeb" title="for probabilities as HessTypes">HessTranProb_FctPtr</a>)(<span class="keyword">const</span> HessType&amp;, <span class="keyword">const</span> int, <span class="keyword">const</span> int);
<a name="l00108"></a>00108 
<a name="l00110"></a><a class="code" href="structDeleteObject.shtml">00110</a> <span class="keyword">struct </span><a class="code" href="structDeleteObject.shtml" title="A struct to make a templatised function to delete objects pointed to by pointers.">DeleteObject</a>
<a name="l00111"></a>00111 {
<a name="l00112"></a>00112   <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00113"></a><a class="code" href="structDeleteObject.shtml#ac6d4617e73a4f1e49f71393487ff83cf">00113</a>     <span class="keywordtype">void</span> operator()(<span class="keyword">const</span> T* ptr)<span class="keyword"> const</span>
<a name="l00114"></a>00114 <span class="keyword">  </span>{
<a name="l00115"></a>00115     <span class="keyword">delete</span> ptr;
<a name="l00116"></a>00116   }
<a name="l00117"></a>00117 };
<a name="l00118"></a>00118 
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00127"></a>00127 real <a class="code" href="PhyloTree_8cpp.shtml#aa9345a2830ad2dc42d513ff3438b51f6" title="Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.">PijofT_JC69R</a> (<span class="keyword">const</span> real&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j );
<a name="l00128"></a>00128 
<a name="l00130"></a>00130 
<a name="l00134"></a>00134 interval <a class="code" href="PhyloTree_8cpp.shtml#a56808e5beae03768e4d46dc72617f722" title="Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.">PijofT_JC69I</a> (<span class="keyword">const</span> interval&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j );
<a name="l00135"></a>00135 
<a name="l00137"></a>00137 
<a name="l00141"></a>00141 HessType <a class="code" href="PhyloTree_8cpp.shtml#a2ffe000f93e3429bd11c7921fe152f53" title="Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.">PijofT_JC69H</a> (<span class="keyword">const</span> HessType&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j );
<a name="l00142"></a>00142 
<a name="l00144"></a>00144 
<a name="l00148"></a>00148 real <a class="code" href="PhyloTree_8cpp.shtml#a53c51d97bba89addbb5ebd545b1fdceb" title="CFN formula for transition from nucleotype i to j with character space 2.">PijofT_CFNR</a>(<span class="keyword">const</span> real&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j);
<a name="l00149"></a>00149 
<a name="l00151"></a>00151 
<a name="l00155"></a>00155 interval <a class="code" href="PhyloTree_8cpp.shtml#a53c51d97bba89addbb5ebd545b1fdceb" title="CFN formula for transition from nucleotype i to j with character space 2.">PijofT_CFNR</a>(<span class="keyword">const</span> interval&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j);
<a name="l00156"></a>00156 
<a name="l00158"></a>00158 
<a name="l00162"></a>00162 HessType <a class="code" href="PhyloTree_8cpp.shtml#a53c51d97bba89addbb5ebd545b1fdceb" title="CFN formula for transition from nucleotype i to j with character space 2.">PijofT_CFNR</a>(<span class="keyword">const</span> HessType&amp; t, <span class="keyword">const</span> <span class="keywordtype">int</span> i, <span class="keyword">const</span> <span class="keywordtype">int</span> j);
<a name="l00163"></a>00163 
<a name="l00165"></a>00165 
<a name="l00167"></a><a class="code" href="classPhyloNode.shtml">00167</a> <span class="keyword">class </span><a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>
<a name="l00168"></a>00168 {
<a name="l00169"></a>00169 
<a name="l00170"></a>00170   <span class="keyword">private</span>:
<a name="l00171"></a><a class="code" href="classPhyloNode.shtml#a08d47840fd629726502a4c83ee7f97d0">00171</a>     <span class="keywordtype">int</span> <a class="code" href="classPhyloNode.shtml#a08d47840fd629726502a4c83ee7f97d0" title="signifies the edge number, ie the correspondence to the dimensions of the problem">ibranch</a>;    
<a name="l00172"></a><a class="code" href="classPhyloNode.shtml#ac50e08220f3cfb519d0e21ae4dd53dd2">00172</a>     <span class="keywordtype">int</span> <a class="code" href="classPhyloNode.shtml#ac50e08220f3cfb519d0e21ae4dd53dd2" title="every leaf node should have a sequence number">seq_no</a>;     
<a name="l00173"></a><a class="code" href="classPhyloNode.shtml#a24cf3f05065a31fde05a428d0eca87cf">00173</a>     real <a class="code" href="classPhyloNode.shtml#a24cf3f05065a31fde05a428d0eca87cf" title="some nodes may be given a time in the tree file">time</a>;      
<a name="l00174"></a><a class="code" href="classPhyloNode.shtml#a4abacdd01e6c36193c6372758a05debf">00174</a>     <span class="keywordtype">int</span> <a class="code" href="classPhyloNode.shtml#a4abacdd01e6c36193c6372758a05debf" title="some nodes may be given a label in the input file">label</a>;      
<a name="l00175"></a><a class="code" href="classPhyloNode.shtml#aa99afd949e72b932d9c0d89d06c2a890">00175</a>     <span class="keywordtype">string</span> seq_name;
<a name="l00176"></a>00176 
<a name="l00178"></a>00178     <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* parent;
<a name="l00180"></a><a class="code" href="classPhyloNode.shtml#ae90d7dd10164a001107371397dc036be">00180</a>     <a class="code" href="PhyloTree_8hpp.shtml#a949af9a126c7f41a99746ced5d664690" title="a container of pointers to PhyloNodes">PhyloPtrs</a> <a class="code" href="classPhyloNode.shtml#ae90d7dd10164a001107371397dc036be">childNodes</a>;
<a name="l00181"></a>00181 
<a name="l00183"></a>00183 
<a name="l00184"></a>00184     <span class="keyword">explicit</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>(<span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>&amp; other);
<a name="l00185"></a>00185 
<a name="l00187"></a>00187 
<a name="l00188"></a>00188     <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>&amp; rhs);
<a name="l00189"></a>00189 
<a name="l00190"></a>00190   <span class="keyword">public</span>:
<a name="l00192"></a><a class="code" href="classPhyloNode.shtml#a82abba4349a6808ba134a89fae92fb7f">00192</a>     <span class="keyword">explicit</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>() : ibranch(-1), seq_no(-1), time(0.0), label(0), parent(NULL)
<a name="l00193"></a>00193     <span class="comment">// vector childNodes is not initialised</span>
<a name="l00194"></a>00194       {}
<a name="l00195"></a>00195 
<a name="l00197"></a>00197     ~<a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>();
<a name="l00198"></a>00198 
<a name="l00200"></a>00200 
<a name="l00201"></a>00201     <span class="comment">// this will mean that there are multiple pointers to the parent around - not very safe</span>
<a name="l00202"></a><a class="code" href="classPhyloNode.shtml#a960666762aaed1c4f6ddfbc2aa413892">00202</a>     <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* getParent()<span class="keyword"> const</span>
<a name="l00203"></a>00203 <span class="keyword">    </span>{
<a name="l00204"></a>00204       <span class="keywordflow">return</span> parent;
<a name="l00205"></a>00205     }
<a name="l00206"></a>00206 
<a name="l00208"></a>00208 
<a name="l00209"></a>00209     <span class="comment">// this will mean that there are multiple pointers to the children around - not very safe</span>
<a name="l00210"></a><a class="code" href="classPhyloNode.shtml#ae7877c20c9db63402d07b6f82a346b21">00210</a>     <a class="code" href="PhyloTree_8hpp.shtml#a949af9a126c7f41a99746ced5d664690" title="a container of pointers to PhyloNodes">PhyloPtrs</a> getChildren()<span class="keyword"> const</span>
<a name="l00211"></a>00211 <span class="keyword">    </span>{
<a name="l00212"></a>00212       <span class="keywordflow">return</span> childNodes;
<a name="l00213"></a>00213     }
<a name="l00214"></a>00214 
<a name="l00216"></a><a class="code" href="classPhyloNode.shtml#a565c9444607ed8768e9415eacb559123">00216</a>     <span class="keywordtype">int</span> getBranch()<span class="keyword"> const</span>
<a name="l00217"></a>00217 <span class="keyword">    </span>{
<a name="l00218"></a>00218       <span class="keywordflow">return</span> ibranch;
<a name="l00219"></a>00219     }
<a name="l00220"></a>00220 
<a name="l00222"></a><a class="code" href="classPhyloNode.shtml#a00c2267514e0f9ca175de697a15698b3">00222</a>     real getTime()<span class="keyword"> const</span>
<a name="l00223"></a>00223 <span class="keyword">    </span>{
<a name="l00224"></a>00224       <span class="keywordflow">return</span> time;
<a name="l00225"></a>00225     }
<a name="l00226"></a>00226 
<a name="l00228"></a><a class="code" href="classPhyloNode.shtml#a7b0378a66e2acf414820eb25eddb0dcc">00228</a>     <span class="keywordtype">int</span> getLabel()<span class="keyword"> const</span>
<a name="l00229"></a>00229 <span class="keyword">    </span>{
<a name="l00230"></a>00230       <span class="keywordflow">return</span> label;
<a name="l00231"></a>00231     }
<a name="l00232"></a>00232 
<a name="l00234"></a><a class="code" href="classPhyloNode.shtml#a3fc253c8d09bf7d7cf1da885c1eaec4c">00234</a>     <span class="keywordtype">int</span> getSeqNo()<span class="keyword"> const</span>
<a name="l00235"></a>00235 <span class="keyword">    </span>{
<a name="l00236"></a>00236       <span class="keywordflow">return</span> seq_no;
<a name="l00237"></a>00237     }
<a name="l00238"></a>00238 
<a name="l00240"></a><a class="code" href="classPhyloNode.shtml#af9113f5f2b37eb169e982f8b8033d3f6">00240</a>     <span class="keywordtype">string</span> getSeqName()<span class="keyword"> const</span>
<a name="l00241"></a>00241 <span class="keyword">    </span>{
<a name="l00242"></a>00242       <span class="keywordflow">return</span> seq_name;
<a name="l00243"></a>00243     }
<a name="l00244"></a>00244 
<a name="l00246"></a><a class="code" href="classPhyloNode.shtml#a9744c7676674e8e988449bda24808d54">00246</a>     <span class="keywordtype">void</span> setBranch(<span class="keyword">const</span> <span class="keywordtype">int</span> branch)
<a name="l00247"></a>00247     {
<a name="l00248"></a>00248       ibranch = branch;
<a name="l00249"></a>00249     }
<a name="l00250"></a>00250 
<a name="l00252"></a><a class="code" href="classPhyloNode.shtml#ac1e882ec990671ad78dc76218aa80610">00252</a>     <span class="keywordtype">void</span> setTime(<span class="keyword">const</span> real t)
<a name="l00253"></a>00253     {
<a name="l00254"></a>00254       time = t;
<a name="l00255"></a>00255     }
<a name="l00256"></a>00256 
<a name="l00258"></a><a class="code" href="classPhyloNode.shtml#ab5fcae88b5e5a29c0619b2f1b85958be">00258</a>     <span class="keywordtype">void</span> setLabel(<span class="keyword">const</span> <span class="keywordtype">int</span> n)
<a name="l00259"></a>00259     {
<a name="l00260"></a>00260       label = n;
<a name="l00261"></a>00261     }
<a name="l00262"></a>00262 
<a name="l00264"></a><a class="code" href="classPhyloNode.shtml#a30b68416bbeabe566b2d17ef43ff753c">00264</a>     <span class="keywordtype">void</span> setSeqNo(<span class="keyword">const</span> <span class="keywordtype">int</span> n)
<a name="l00265"></a>00265     {
<a name="l00266"></a>00266       seq_no = n;
<a name="l00267"></a>00267     }
<a name="l00268"></a>00268 
<a name="l00270"></a><a class="code" href="classPhyloNode.shtml#a30c30789517e9f40bec24c7f665c4675">00270</a>     <span class="keywordtype">void</span> setSeqName(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s)
<a name="l00271"></a>00271     {
<a name="l00272"></a>00272       seq_name = s;
<a name="l00273"></a>00273     }
<a name="l00274"></a>00274 
<a name="l00276"></a><a class="code" href="classPhyloNode.shtml#a2393043d53032824ed9de2ed0429f7d7">00276</a>     <span class="keywordtype">void</span> setParent(<a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * newparent)
<a name="l00277"></a>00277     {
<a name="l00278"></a>00278       parent = newparent;
<a name="l00279"></a>00279     }
<a name="l00280"></a>00280 
<a name="l00282"></a>00282     <span class="keywordtype">void</span> addChild(<a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * <span class="keyword">const</span> child);
<a name="l00283"></a>00283 
<a name="l00284"></a>00284     <span class="keywordtype">size_t</span> noChildren() <span class="keyword">const</span>;
<a name="l00285"></a>00285 
<a name="l00286"></a>00286     <span class="keywordtype">size_t</span> noDescendents() <span class="keyword">const</span>;
<a name="l00287"></a>00287 
<a name="l00289"></a>00289 
<a name="l00290"></a>00290     <span class="keywordtype">void</span> printNode() <span class="keyword">const</span>;
<a name="l00291"></a>00291 
<a name="l00292"></a>00292 };                  <span class="comment">// end of PhyloNode class</span>
<a name="l00293"></a>00293 
<a name="l00294"></a><a class="code" href="classPhyloTree.shtml">00294</a> <span class="keyword">class </span><a class="code" href="classPhyloTree.shtml">PhyloTree</a>
<a name="l00295"></a>00295 {
<a name="l00296"></a>00296 
<a name="l00297"></a>00297   <span class="keyword">private</span>:
<a name="l00298"></a>00298 
<a name="l00299"></a>00299     <span class="comment">// data members</span>
<a name="l00301"></a><a class="code" href="classPhyloTree.shtml#a38c3253751a7ed9ffacb0978106f8173">00301</a> <span class="comment"></span>    <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* <a class="code" href="classPhyloTree.shtml#a38c3253751a7ed9ffacb0978106f8173" title="A pointer to a PhyloNode root of the tree.">root</a>;
<a name="l00302"></a>00302 
<a name="l00304"></a><a class="code" href="classPhyloTree.shtml#a2411ce76565644f8253f15840863a05a">00304</a>     <span class="keywordtype">int</span> <a class="code" href="classPhyloTree.shtml#a2411ce76565644f8253f15840863a05a" title="The size of the character space for the tree.">CharacterSpace</a>;
<a name="l00305"></a>00305     <span class="comment">//private functions</span>
<a name="l00306"></a>00306 
<a name="l00308"></a>00308 
<a name="l00309"></a>00309     <span class="comment">// returns a pointer to the root node of the new tree</span>
<a name="l00310"></a>00310     <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* DecodeTree(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; line, <span class="keyword">const</span> vector&lt;string&gt;&amp; seqnames) <span class="keyword">const</span>;
<a name="l00311"></a>00311 
<a name="l00313"></a>00313     <span class="keywordtype">void</span> TreeFileErrorExit(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; msg, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * node) <span class="keyword">const</span>;
<a name="l00314"></a>00314 
<a name="l00316"></a>00316     real findTime(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; line, <span class="keyword">const</span> <span class="keywordtype">size_t</span> lineLength, <span class="keywordtype">size_t</span>&amp; pos, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* root) <span class="keyword">const</span>;
<a name="l00317"></a>00317 
<a name="l00319"></a>00319     <span class="keywordtype">int</span> findLabel(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; line, <span class="keyword">const</span> <span class="keywordtype">size_t</span> lineLength, <span class="keywordtype">size_t</span>&amp; pos, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* root) <span class="keyword">const</span>;
<a name="l00320"></a>00320 
<a name="l00322"></a>00322 
<a name="l00323"></a>00323     <span class="keywordtype">int</span> findSeqNo(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; line, <span class="keyword">const</span> <span class="keywordtype">size_t</span> lineLength, <span class="keywordtype">size_t</span>&amp; pos, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* root, <span class="keyword">const</span> vector&lt;string&gt;&amp; seqnames) <span class="keyword">const</span>;
<a name="l00324"></a>00324 
<a name="l00326"></a>00326     <span class="keyword">static</span> <span class="keywordtype">void</span> PrintBranch(<span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * <span class="keyword">const</span> node, <span class="keywordtype">int</span> level);
<a name="l00327"></a>00327 
<a name="l00329"></a>00329 
<a name="l00330"></a>00330     <span class="keyword">explicit</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>(<span class="keyword">const</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>&amp; other);
<a name="l00331"></a>00331 
<a name="l00333"></a>00333 
<a name="l00334"></a>00334     <a class="code" href="classPhyloTree.shtml">PhyloTree</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>&amp; rhs);
<a name="l00335"></a>00335 
<a name="l00337"></a>00337 
<a name="l00344"></a>00344     <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; nodePOTreal(<a class="code" href="PhyloTree_8hpp.shtml#a4457ee43eaa9b550b64e1542c62f7a6f" title="for probabilities as reals">RealTranProb_FctPtr</a> tpf, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * <span class="keyword">const</span> node, <span class="keyword">const</span> rvector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; rNucProb) <span class="keyword">const</span>;
<a name="l00345"></a>00345 
<a name="l00347"></a>00347 
<a name="l00354"></a>00354     <a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db" title="a container of intervals for interval probabilities">IntervalProbs</a>&amp; nodePOTinterval(<a class="code" href="PhyloTree_8hpp.shtml#a6961512ff8fd6fa5a520b93c63c4ad60" title="for probabilities as intervals">IntervalTranProb_FctPtr</a> tpf, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * <span class="keyword">const</span> node, <span class="keyword">const</span> ivector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db" title="a container of intervals for interval probabilities">IntervalProbs</a>&amp; iNucProb) <span class="keyword">const</span>;
<a name="l00355"></a>00355 
<a name="l00357"></a>00357 
<a name="l00366"></a>00366     <a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7" title="a container of HessTypes for HessType probabilities">HessProbs</a>&amp; nodePOTHess(<a class="code" href="PhyloTree_8hpp.shtml#aa81a7e0d071642af42626caebfef6eeb" title="for probabilities as HessTypes">HessTranProb_FctPtr</a> tpf, <span class="keyword">const</span> <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a> * <span class="keyword">const</span> node, <span class="keyword">const</span> HTvector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7" title="a container of HessTypes for HessType probabilities">HessProbs</a>&amp; hNucProb) <span class="keyword">const</span>;
<a name="l00367"></a>00367 
<a name="l00368"></a>00368   <span class="keyword">public</span>:
<a name="l00370"></a><a class="code" href="classPhyloTree.shtml#ab6e00efe0c10f4a93d34e7d027489ac6">00370</a>     <span class="keyword">explicit</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>() : root(NULL)
<a name="l00371"></a>00371       {}
<a name="l00372"></a>00372 
<a name="l00374"></a>00374     <span class="keyword">explicit</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>(<span class="keywordtype">int</span> cs, <span class="keywordtype">string</span>&amp; line, <span class="keyword">const</span> vector&lt;string&gt;&amp; seqnames);
<a name="l00375"></a>00375 
<a name="l00377"></a>00377     <span class="keyword">explicit</span> <a class="code" href="classPhyloTree.shtml">PhyloTree</a>(<span class="keywordtype">int</span> cs, <span class="keywordtype">string</span>&amp; line);
<a name="l00378"></a>00378 
<a name="l00380"></a><a class="code" href="classPhyloTree.shtml#a4a4c3d1b60f3bba1fe813a0ada4de498">00380</a>     ~<a class="code" href="classPhyloTree.shtml">PhyloTree</a>()
<a name="l00381"></a>00381     {               <span class="comment">// deletes the node which is the root and all its children</span>
<a name="l00382"></a>00382       <span class="keyword">delete</span> root;
<a name="l00383"></a>00383     }
<a name="l00384"></a>00384 
<a name="l00386"></a>00386     <span class="keywordtype">void</span> PrintTree() <span class="keyword">const</span>;
<a name="l00387"></a>00387 
<a name="l00389"></a><a class="code" href="classPhyloTree.shtml#a5ede1337d40e3e211e83d9f009b062f9">00389</a>     <a class="code" href="classPhyloNode.shtml" title="A class for nodes of a phylogenetic tree.">PhyloNode</a>* getRoot()<span class="keyword"> const</span>
<a name="l00390"></a>00390 <span class="keyword">    </span>{
<a name="l00391"></a>00391       <span class="keywordflow">return</span> root;
<a name="l00392"></a>00392     }
<a name="l00393"></a>00393 
<a name="l00395"></a>00395     <span class="keywordtype">size_t</span> getNumberNodes() <span class="keyword">const</span>;
<a name="l00396"></a>00396 
<a name="l00398"></a><a class="code" href="classPhyloTree.shtml#ae7557f8269350a3ee6ba18f9bd63b7e6">00398</a>     <span class="keywordtype">size_t</span> getNumberBranches()<span class="keyword"> const</span>
<a name="l00399"></a>00399 <span class="keyword">    </span>{
<a name="l00400"></a>00400       <span class="keywordflow">return</span> getNumberNodes() - 1;
<a name="l00401"></a>00401     }
<a name="l00402"></a>00402 
<a name="l00404"></a>00404 
<a name="l00410"></a>00410     <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; fillProbRealJC69(<span class="keyword">const</span> rvector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; rNucProb) <span class="keyword">const</span>;
<a name="l00411"></a>00411 
<a name="l00413"></a>00413 
<a name="l00419"></a>00419     <a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db" title="a container of intervals for interval probabilities">IntervalProbs</a>&amp; fillProbIntervalJC69(<span class="keyword">const</span> ivector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#af4bedfc3c110381d3675cf92e28539db" title="a container of intervals for interval probabilities">IntervalProbs</a>&amp; iNucProb) <span class="keyword">const</span>;
<a name="l00420"></a>00420 
<a name="l00422"></a>00422 
<a name="l00428"></a>00428     <a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7" title="a container of HessTypes for HessType probabilities">HessProbs</a>&amp; fillProbHessJC69(<span class="keyword">const</span> HTvector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#a8ee2b3678316ad48baa269e4ee7db7f7" title="a container of HessTypes for HessType probabilities">HessProbs</a>&amp; hNucProb) <span class="keyword">const</span>;
<a name="l00429"></a>00429 
<a name="l00431"></a>00431 
<a name="l00437"></a>00437     <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; fillProbRealCFN(<span class="keyword">const</span> rvector&amp; x, <span class="keyword">const</span> vector&lt;int&gt;&amp; pattern, <a class="code" href="PhyloTree_8hpp.shtml#a9a6f7e127d1279875ce95b0b6a331114" title="a container of intervals for real probabilities">RealProbs</a>&amp; rNucProb) <span class="keyword">const</span>;
<a name="l00438"></a>00438 
<a name="l00439"></a>00439 };                  <span class="comment">// end of PhyloTree class declarations</span>
<a name="l00440"></a>00440 
<a name="l00443"></a>00443 real <a class="code" href="PhyloTree_8cpp.shtml#ae36eeec3df01dff75dc04065eb5095f4" title="operator const LabPnt&amp; X Utility function to sum reals">realSum</a>(real sumSoFar, <span class="keyword">const</span> real r);
<a name="l00444"></a>00444 
<a name="l00447"></a>00447 interval <a class="code" href="PhyloTree_8cpp.shtml#a84ced4c363a59a5168225a9396ce2b84" title="operator const LabBox&amp; X Utility function to sum intervals">intervalSum</a>(interval sumSoFar, <span class="keyword">const</span> interval x);
<a name="l00448"></a>00448 
<a name="l00451"></a>00451 HessType <a class="code" href="PhyloTree_8cpp.shtml#a62f64b7d245c1108fa85ec6509952932" title="operator const HTvector&amp; X Utility function to sum HessTypes">hessSum</a>(HessType sumSoFar, <span class="keyword">const</span> HessType x);
<a name="l00452"></a>00452 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="PhyloTree_8hpp.shtml">PhyloTree.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
