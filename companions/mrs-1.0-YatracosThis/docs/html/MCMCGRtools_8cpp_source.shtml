<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: MCMCGRtools.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('MCMCGRtools_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">MCMCGRtools.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="MCMCGRtools_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment">* Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment">*</span>
<a name="l00007"></a>00007 <span class="comment">* mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment">* it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment">* the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment">* your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">* General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">* along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment">*/</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;fstream&gt;</span>  <span class="comment">// input and output streams</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;iterator&gt;</span> <span class="comment">// for output iterators</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;stdexcept&gt;</span> <span class="comment">// for standard exception types</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="MCMCGRtools_8hpp.shtml" title="Definitions for tools for testing StatsSubPavings (aka SPSnodes) with MCMC with the Gelman-Rubin conv...">MCMCGRtools.hpp</a>&quot;</span> 
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="sptools_8hpp.shtml" title="General tools for subpavings.">sptools.hpp</a>&quot;</span> 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">using namespace </span>cxsc;
<a name="l00037"></a>00037 <span class="keyword">using namespace </span>std;
<a name="l00038"></a>00038 <span class="keyword">using namespace </span>subpavings;
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">/* output a vector of vectors of reals to a file, with each inner vector</span>
<a name="l00043"></a>00043 <span class="comment">* as a column, headed by the column names in colNames,</span>
<a name="l00044"></a>00044 <span class="comment">* using precision given by prec.</span>
<a name="l00045"></a>00045 <span class="comment">* Checks that size of colNames matches size of dataPtrs,</span>
<a name="l00046"></a>00046 <span class="comment">* but does not check that vectors within dataPtrs are all the same length*/</span>
<a name="l00047"></a><a class="code" href="MCMCGRtools_8hpp.shtml#af7a5f5135a7b7856b5c0f8df4c052577">00047</a> <span class="keywordtype">void</span> <a class="code" href="MCMCGRtools_8cpp.shtml#a32af99153a16e8c03195b10d3fcb6a9c">outputToFileVertical</a>( std::vector &lt; RealVec* &gt;&amp; dataPtrs, 
<a name="l00048"></a>00048               std::vector &lt; std::string &gt;&amp; colNames,
<a name="l00049"></a>00049               std::string&amp; filename,
<a name="l00050"></a>00050               <span class="keywordtype">int</span> prec)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   
<a name="l00053"></a>00053   <span class="keywordtype">size_t</span> n = colNames.size();
<a name="l00054"></a>00054   <span class="keywordflow">if</span> (n != dataPtrs.size()) {
<a name="l00055"></a>00055     <span class="keywordflow">throw</span> std::length_error(<span class="stringliteral">&quot;Size of colNames does not match size of dataPtrs&quot;</span>);
<a name="l00056"></a>00056   }
<a name="l00057"></a>00057   
<a name="l00058"></a>00058   <a class="code" href="namespacesubpavings.shtml#afb8564fbbb2536bafcd19a5cc56e6531" title="Opening line of a txt log file.">outputFileStart</a>(filename);
<a name="l00059"></a>00059   
<a name="l00060"></a>00060   std::ofstream os;
<a name="l00061"></a>00061   
<a name="l00062"></a>00062   os.open(filename.c_str(), ios::app);         <span class="comment">// append</span>
<a name="l00063"></a>00063   
<a name="l00064"></a>00064 
<a name="l00065"></a>00065   <span class="keywordflow">if</span> (os.is_open()) {
<a name="l00066"></a>00066     
<a name="l00067"></a>00067     <span class="comment">// use cxsc manipulators to set the precision for output</span>
<a name="l00068"></a>00068     os &lt;&lt; cxsc::Variable;
<a name="l00069"></a>00069     os &lt;&lt; cxsc::SetPrecision(prec+2, prec);
<a name="l00070"></a>00070     
<a name="l00071"></a>00071     <span class="comment">// colNames</span>
<a name="l00072"></a>00072     os &lt;&lt; <span class="stringliteral">&quot;line\t&quot;</span>;
<a name="l00073"></a>00073     ostream_iterator&lt; std::string &gt; out_s_it (os,<span class="stringliteral">&quot;\t&quot;</span>);
<a name="l00074"></a>00074     copy ( colNames.begin(), colNames.end(), out_s_it );
<a name="l00075"></a>00075     os &lt;&lt; std::endl;
<a name="l00076"></a>00076     
<a name="l00077"></a>00077     <span class="comment">// data</span>
<a name="l00078"></a>00078     <span class="comment">/* find the longest inner vector, and </span>
<a name="l00079"></a>00079 <span class="comment">     * make a vector of iterators to the beginning of each inner vector */</span>
<a name="l00080"></a>00080     <span class="keywordtype">size_t</span> longest = 0;
<a name="l00081"></a>00081     std::vector &lt; RealVecItr &gt; dataIterators;
<a name="l00082"></a>00082     <span class="keywordflow">for</span> (std::vector &lt; RealVec* &gt;::iterator it = dataPtrs.begin();
<a name="l00083"></a>00083         it &lt; dataPtrs.end(); ++it) {
<a name="l00084"></a>00084       dataIterators.push_back( (*it)-&gt;begin() );
<a name="l00085"></a>00085       <span class="keywordflow">if</span> ((*it)-&gt;size() &gt; longest) longest = (*it)-&gt;size();
<a name="l00086"></a>00086     }
<a name="l00087"></a>00087     <span class="comment">// use this to output the data</span>
<a name="l00088"></a>00088     <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; longest; ++j) {
<a name="l00089"></a>00089       os &lt;&lt; j+1;
<a name="l00090"></a>00090       <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; n; ++i) {
<a name="l00091"></a>00091         <span class="keywordflow">if</span> ( dataIterators[i] &lt; dataPtrs[i]-&gt;end() ) {
<a name="l00092"></a>00092           os &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; (*dataIterators[i]);
<a name="l00093"></a>00093           dataIterators[i]++;
<a name="l00094"></a>00094         }
<a name="l00095"></a>00095         <span class="keywordflow">else</span> {
<a name="l00096"></a>00096           os &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span>; <span class="comment">// not sure about this - may not be a good idea?</span>
<a name="l00097"></a>00097         }
<a name="l00098"></a>00098         
<a name="l00099"></a>00099       }
<a name="l00100"></a>00100       <span class="comment">// if it is not the last row, newline</span>
<a name="l00101"></a>00101       <span class="keywordflow">if</span> ( j &lt; longest - 1) os &lt;&lt; std::endl;
<a name="l00102"></a>00102     }
<a name="l00103"></a>00103     
<a name="l00104"></a>00104     os.close();
<a name="l00105"></a>00105   }
<a name="l00106"></a>00106   <span class="keywordflow">else</span> {
<a name="l00107"></a>00107     std::cerr &lt;&lt; <span class="stringliteral">&quot;Error: could not open file named &quot;</span>
<a name="l00108"></a>00108     &lt;&lt; filename &lt;&lt; std::endl &lt;&lt; std::endl;
<a name="l00109"></a>00109   }
<a name="l00110"></a>00110   
<a name="l00111"></a>00111 }
<a name="l00112"></a>00112 
<a name="l00113"></a><a class="code" href="MCMCGRtools_8hpp.shtml#ab5ce0fd56591a345c170439c72740f61">00113</a> std::vector &lt; RealVec* &gt;&amp; <a class="code" href="MCMCGRtools_8cpp.shtml#aeab60d2a0ee499db048aa1ea334582c9">addDataPtrs</a>(std::vector &lt; RealVec* &gt;&amp; container,
<a name="l00114"></a>00114                 std::vector &lt; RealVec &gt;&amp; toAdd)
<a name="l00115"></a>00115 {
<a name="l00116"></a>00116   <span class="keywordflow">for</span> (std::vector &lt; RealVec &gt;::iterator it = toAdd.begin();
<a name="l00117"></a>00117           it &lt; toAdd.end();
<a name="l00118"></a>00118           ++it) {
<a name="l00119"></a>00119     
<a name="l00120"></a>00120     container.push_back( &amp;(*it) );
<a name="l00121"></a>00121             
<a name="l00122"></a>00122   }
<a name="l00123"></a>00123   
<a name="l00124"></a>00124   <span class="keywordflow">return</span> container;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="MCMCGRtools_8cpp.shtml">MCMCGRtools.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
