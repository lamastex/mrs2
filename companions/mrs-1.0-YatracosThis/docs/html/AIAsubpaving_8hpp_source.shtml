<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: AIAsubpaving.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('AIAsubpaving_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">AIAsubpaving.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="AIAsubpaving_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment"> * your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="cxsc_8hpp.shtml">cxsc.hpp</a>&quot;</span> <span class="comment">//to use ivectors</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="toolz_8hpp.shtml" title="Declaration of various tools; functions and structs, for MRS.">toolz.hpp</a>&quot;</span><span class="comment">//to use methods declared in toolz.hpp</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;iostream&gt;</span> <span class="comment">// to use standard input and output</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;fstream&gt;</span>  <span class="comment">// include fstream to output a file from spImage</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;list&gt;</span>     <span class="comment">// to use std::list</span>
<a name="l00032"></a>00032 
<a name="l00038"></a><a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6a966ca7244fcb98834f2b3afbb5d32ac2">00038</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> {<a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6a966ca7244fcb98834f2b3afbb5d32ac2">BI_TRUE</a>,<a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6a57a124e19ed919ea8c7a944c309d7636">BI_FALSE</a>,<a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6aa43b2bfa91b022f8aa5c08a522eb4fce">BI_INDET</a>}
<a name="l00039"></a>00039 <a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6" title="Define type &quot;Interval Booleans&quot; This is used to extend the usual booleans TRUE and FALSE for use with...">AIA_BOOL_INTERVAL</a>;
<a name="l00040"></a>00040 
<a name="l00054"></a><a class="code" href="AIAsubpaving_8hpp.shtml#ac3a2af016d66120f37b7e4b3da564876">00054</a> <span class="keyword">typedef</span> <a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6" title="Define type &quot;Interval Booleans&quot; This is used to extend the usual booleans TRUE and FALSE for use with...">AIA_BOOL_INTERVAL</a> (*<a class="code" href="AIAsubpaving_8hpp.shtml#ac3a2af016d66120f37b7e4b3da564876" title="Define type &quot;Pointer to an interval boolean test&quot;.">AIA_PIBT</a>)(<span class="keyword">const</span> ivector&amp;);
<a name="l00055"></a>00055 
<a name="l00062"></a><a class="code" href="AIAsubpaving_8hpp.shtml#aee443215927e43ef8f6880f25b053a2e">00062</a> <span class="keyword">typedef</span> ivector (*<a class="code" href="AIAsubpaving_8hpp.shtml#aee443215927e43ef8f6880f25b053a2e" title="Define type &quot;Pointer to an interval vector function&quot;.">AIA_PIVF</a>)(<span class="keyword">const</span> ivector&amp;);
<a name="l00063"></a>00063 
<a name="l00065"></a><a class="code" href="AIAsubpaving_8hpp.shtml#ab6618d8727b32e897c1b7ab3415b93ff">00065</a> <span class="keyword">class </span><a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASPnode</a>;
<a name="l00066"></a>00066 
<a name="l00068"></a>00068 <span class="keyword">typedef</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASPnode</a>* <a class="code" href="AIAsubpaving_8hpp.shtml#ab6618d8727b32e897c1b7ab3415b93ff" title="Makes AIASubPaving alias of pointer to a AIASPnode.">AIASubPaving</a>;
<a name="l00070"></a>00070 
<a name="l00082"></a><a class="code" href="classAIASPnode.shtml">00082</a> <span class="keyword">class </span><a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASPnode</a>
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084   <span class="keyword">private</span>:
<a name="l00086"></a><a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143">00086</a>     ivector* <a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>;
<a name="l00088"></a><a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85">00088</a>     <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85" title="The node&#39;s left child.">leftChild</a>;
<a name="l00090"></a><a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1">00090</a>     <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1" title="The node&#39;s right child.">rightChild</a>;
<a name="l00091"></a>00091 
<a name="l00092"></a>00092   <span class="keyword">public</span>:
<a name="l00094"></a><a class="code" href="classAIASPnode.shtml#a69e70b41f415cb17b09690315320b194">00094</a>     <a class="code" href="classAIASPnode.shtml#a69e70b41f415cb17b09690315320b194" title="Default constructor.">AIASPnode</a>()
<a name="l00095"></a>00095       {<a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>=NULL; <a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85" title="The node&#39;s left child.">leftChild</a>=NULL; <a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1" title="The node&#39;s right child.">rightChild</a>=NULL;}
<a name="l00096"></a>00096 
<a name="l00098"></a><a class="code" href="classAIASPnode.shtml#a71f172fa0bf3aba39084ea502f79f523">00098</a>     <a class="code" href="classAIASPnode.shtml#a69e70b41f415cb17b09690315320b194" title="Default constructor.">AIASPnode</a>(ivector&amp; v)
<a name="l00099"></a>00099       {<a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>=<span class="keyword">new</span> ivector(v); <a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85" title="The node&#39;s left child.">leftChild</a>=NULL; <a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1" title="The node&#39;s right child.">rightChild</a>=NULL;}
<a name="l00100"></a>00100 
<a name="l00102"></a>00102     <a class="code" href="classAIASPnode.shtml#a69e70b41f415cb17b09690315320b194" title="Default constructor.">AIASPnode</a>(<span class="keyword">const</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASPnode</a>&amp; n);
<a name="l00103"></a>00103 
<a name="l00105"></a><a class="code" href="classAIASPnode.shtml#a57d10c2f272f0e78f1a72e4f5f548e77">00105</a>     <a class="code" href="classAIASPnode.shtml#a57d10c2f272f0e78f1a72e4f5f548e77" title="Destructor.">~AIASPnode</a>()
<a name="l00106"></a>00106       {<span class="keyword">delete</span> <a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>; <span class="keyword">delete</span> <a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85" title="The node&#39;s left child.">leftChild</a>; <span class="keyword">delete</span> <a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1" title="The node&#39;s right child.">rightChild</a>;}
<a name="l00107"></a>00107 
<a name="l00113"></a>00113 
<a name="l00114"></a><a class="code" href="classAIASPnode.shtml#ae78ba41711edb725cf1ef43c27144be3">00114</a>     <span class="keyword">friend</span> ivector <a class="code" href="classAIASPnode.shtml#ae78ba41711edb725cf1ef43c27144be3" title="Returns a copy of theBox of an AIASubPaving. */.">Box</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> a)
<a name="l00115"></a>00115       { <span class="keywordflow">return</span> (*a-&gt;<a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>); }
<a name="l00116"></a>00116 
<a name="l00118"></a><a class="code" href="classAIASPnode.shtml#a1d5eb42dff486e08cf1cb54fa2a719a4">00118</a>     <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="classAIASPnode.shtml#a1d5eb42dff486e08cf1cb54fa2a719a4" title="Check if the AIASubPaving is empty.">IsEmpty</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> a)
<a name="l00119"></a>00119       {<span class="keywordflow">return</span> ( (a==NULL) || (a-&gt;<a class="code" href="classAIASPnode.shtml#ab904c07918618a89d5511fbaf87f5143" title="The interval vector the node represents.">theBox</a>==NULL) ); }
<a name="l00120"></a>00120 
<a name="l00122"></a><a class="code" href="classAIASPnode.shtml#a8528a3302f3cce257686222b065bb807">00122</a>     <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="classAIASPnode.shtml#a8528a3302f3cce257686222b065bb807" title="Check if the AIASubPaving is a leaf.">IsLeaf</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> a)
<a name="l00123"></a>00123     {
<a name="l00124"></a>00124       <span class="keywordflow">return</span> ( !<a class="code" href="classAIASPnode.shtml#a1d5eb42dff486e08cf1cb54fa2a719a4" title="Check if the AIASubPaving is empty.">IsEmpty</a>(a) &amp;&amp; <a class="code" href="classAIASPnode.shtml#a1d5eb42dff486e08cf1cb54fa2a719a4" title="Check if the AIASubPaving is empty.">IsEmpty</a>(a-&gt;<a class="code" href="classAIASPnode.shtml#a64dc679fe03b03b7beb6ddb04b2a0f85" title="The node&#39;s left child.">leftChild</a>)
<a name="l00125"></a>00125         &amp;&amp; <a class="code" href="classAIASPnode.shtml#a1d5eb42dff486e08cf1cb54fa2a719a4" title="Check if the AIASubPaving is empty.">IsEmpty</a>(a-&gt;<a class="code" href="classAIASPnode.shtml#adbaa03014929ff2ab653d6d916ca2fc1" title="The node&#39;s right child.">rightChild</a>) );
<a name="l00126"></a>00126     }
<a name="l00127"></a>00127 
<a name="l00132"></a>00132     <span class="keyword">friend</span> <span class="keywordtype">double</span> <a class="code" href="classAIASPnode.shtml#a7f6354ab5e7b1310b03f0e190169eabe" title="Volume of an AIASubPaving.">Volume</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> a);
<a name="l00133"></a>00133 
<a name="l00135"></a>00135     <span class="keyword">friend</span> <span class="keywordtype">int</span> <a class="code" href="classAIASPnode.shtml#a6cc4fba2aef7df53e990c5348f84bd3b" title="Number of leaves of an AIASubPaving.">NbLeaves</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> a);
<a name="l00136"></a>00136 
<a name="l00138"></a>00138     <span class="keyword">friend</span> <a class="code" href="AIAsubpaving_8hpp.shtml#a04a5da87f7c1570d6ef4843fb476d1a6" title="Define type &quot;Interval Booleans&quot; This is used to extend the usual booleans TRUE and FALSE for use with...">AIA_BOOL_INTERVAL</a> <a class="code" href="classAIASPnode.shtml#a0869804e6aaefcc26aebe081061df6ad" title="Check for containment of interval vector or box in the AIASubPaving.">operator&lt;=</a>(<span class="keyword">const</span> ivector&amp;, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a>);
<a name="l00139"></a>00139 
<a name="l00146"></a>00146     <span class="keyword">friend</span> std::ostream &amp; <a class="code" href="classAIASPnode.shtml#abf9101628f2ef58fbd1132a1c7086d06" title="Output the contents of an AIASubPaving.">operator&lt;&lt; </a>(std::ostream &amp;, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a>);
<a name="l00147"></a>00147 
<a name="l00164"></a>00164     <span class="keyword">friend</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#a7ca818aa239136500bfc1020684160de" title="Set Inversion Via Interval Analysis method taken from AIA2001.">Sivia</a>(<a class="code" href="AIAsubpaving_8hpp.shtml#ac3a2af016d66120f37b7e4b3da564876" title="Define type &quot;Pointer to an interval boolean test&quot;.">AIA_PIBT</a> BoolTest, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> A, <span class="keywordtype">double</span>);
<a name="l00165"></a>00165 
<a name="l00171"></a>00171     <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="classAIASPnode.shtml#aa3ceca06b6916b5ac1382a5aa8bf56aa" title="Expand a leaf node to have two child nodes.">Expand</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> A, <span class="keywordtype">int</span> comp);
<a name="l00172"></a>00172 
<a name="l00185"></a>00185     <span class="keyword">friend</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#ad0b3998c79d0cbf91d21c550a6bb72e7" title="Return a minimal subpaving from two sibling subpavings.">ReUnite</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> lChild, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> rChild, 
<a name="l00186"></a>00186                                 ivector x);
<a name="l00187"></a>00187 
<a name="l00195"></a>00195     <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="classAIASPnode.shtml#ab7921c5bd80f01985ee134c5d2ab595d" title="Mince up a subpaving.">Mince</a>(<a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> A, <span class="keywordtype">double</span> eps);
<a name="l00196"></a>00196 
<a name="l00207"></a>00207     <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="classAIASPnode.shtml#a1032a6cd48f87337e0980fe290c140b8" title="Evaluate the image.">Evaluate</a>(<a class="code" href="AIAsubpaving_8hpp.shtml#aee443215927e43ef8f6880f25b053a2e" title="Define type &quot;Pointer to an interval vector function&quot;.">AIA_PIVF</a>, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> A, list&lt;ivector&gt;&amp; evalImages, 
<a name="l00208"></a>00208                          ivector&amp; hull);
<a name="l00209"></a>00209 
<a name="l00229"></a>00229     <span class="keyword">friend</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#a1b1148d30745256482cbc7cca090253d" title="Forms a minimal image subpaving from a list of interval vector images.">Regularize</a>(ivector&amp; hull, list&lt;ivector&gt;&amp; ivectorList, 
<a name="l00230"></a>00230                                    <span class="keywordtype">double</span> eps);
<a name="l00231"></a>00231 
<a name="l00246"></a>00246     <span class="keyword">friend</span> <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> <a class="code" href="classAIASPnode.shtml#aa860838286031ef8164937725092a2c2" title="Creation of an image subpaving (ImageSp) with Interval Analysis from AIA2001.">ImageSp</a>(<a class="code" href="AIAsubpaving_8hpp.shtml#aee443215927e43ef8f6880f25b053a2e" title="Define type &quot;Pointer to an interval vector function&quot;.">AIA_PIVF</a>, <a class="code" href="classAIASPnode.shtml" title="AIASubPaving node class.">AIASubPaving</a> A, <span class="keywordtype">double</span> eps);
<a name="l00248"></a>00248 
<a name="l00249"></a>00249 };
<a name="l00250"></a>00250 
<a name="l00259"></a>00259 <span class="keywordtype">bool</span> <a class="code" href="classAIASPnode.shtml#a8713b30834070a586c0b99d9899f9b74" title="Compare volumes of two boxes.">volCompare</a>(<span class="keyword">const</span> ivector &amp;a, <span class="keyword">const</span> ivector &amp;b);
<a name="l00260"></a>00260 
<a name="l00261"></a>00261 <span class="comment">//----------------------------------------------------------</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="AIAsubpaving_8hpp.shtml">AIAsubpaving.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:11 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
