<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: subpavings::RangeCollectionClass&lt; T &gt; Class Template Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1RangeCollectionClass.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">subpavings::RangeCollectionClass&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="subpavings::RangeCollectionClass" -->
<p>A class for range collection objects.  
 <a href="classsubpavings_1_1RangeCollectionClass.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>&gt;</code></p>

<p><a href="classsubpavings_1_1RangeCollectionClass-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aef62d2aa5ff8ba9dec79cb9bb714fc68">RangeCollectionClass</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a994407fb9063dec6364b57697ee4ffbd">RangeCollectionClass</a> (const T &amp;range)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#afd2ea195d16d474bf618c2fd478cdfc4">RangeCollectionClass</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;other)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aba4094c69cec254d23643c00051ce068">operator=</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ac7965fd94f11b817f6f533a5dab2a106">getSize</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a777b04fa8e011fdbaabdd85ced542e83">isEmpty</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad3fca9cdacde8581cd6d1684357d1d1">pushBack</a> (const T &amp;toAdd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ab0bda06429ce2355970cdfe02a1c1b36">addReduce</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#acc3641f81593a24b242bed4f223cbd85">productReduce</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a98e31e9ed0220ed3358860b808258a55">absValue</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ad34b794f99d2b254f1a7d8a1fa608bf8">hullCollection</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;other)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#acf3cc8c38b9a009312dc4d6660705958">scalarMult</a> (const T &amp;mult)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ab2bb4230d2cdfffab259895a8bf0037d">hullCollection</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;lhs, const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a6bfb2802ef229b5671ce6e095fd5004e">combineCollection</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;lhs, const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a5a93572c908847119d9f562208088792">subtractCollection</a> (const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;lhs, const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a853143f43198b6f2dbfffbe364e75d09">outputTabs</a> (std::ostream &amp;os) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a6173b655063220537c3630f1347cfdd5">getWeights</a> (std::vector&lt; double &gt; &amp;WeightsVector, std::vector&lt; interval &gt; &amp;WeightsInt, double boxVol)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a14b0dd04add88d021dc3a67a3a1c8656">getHeight</a> (std::vector&lt; real &gt; &amp;HeightsVector)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aa2490dc5f0d3e9651753ad6aea148c1b">getNodeIAE</a> (double boxVol)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a638fb0cb53c34ae359743cd22d6da8ee">getNodeIAERegHist</a> (double boxVol, double height)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a364b0e829d6f1dea3b2cb9085036dd2c">getNodeArea</a> (double boxVol)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a4a8632e2e2f9f9743256c7dbaa7a7529">normNodeHeight</a> (double totalArea)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ac728d483dcb418354e6286c8b6db08e1">clearAll</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad6b97397ee955fe4ed74e1d8dc0776a">RangeCollectionType</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; T &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; T &gt;<br class="typebreak"/>
::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a636405dad973d70f8addd86d416418ca">RangeCollectionConstItr</a></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad6b97397ee955fe4ed74e1d8dc0776a">RangeCollectionType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br/>
class subpavings::RangeCollectionClass&lt; T &gt;</h3>

<p>A class for range collection objects. </p>
<p>A <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml" title="A class for range collection objects.">RangeCollectionClass</a> is an implementation for collections of ranges used by <a class="el" href="classsubpavings_1_1MappedSPnode.shtml" title="A templated derived class based on SPnode.">MappedSPnode</a> objects. The type of the range object is the template parameter T.</p>
<p>The underlying container should be some kind of sequence container.</p>
<p>This implementation uses an stl::vector as the implementation container. </p>

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00098">98</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>
</div><hr/><h2>Member Typedef Documentation</h2>
<a class="anchor" id="a636405dad973d70f8addd86d416418ca"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionConstItr" ref="a636405dad973d70f8addd86d416418ca" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;T&gt;::const_iterator <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a636405dad973d70f8addd86d416418ca">RangeCollectionConstItr</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00102">102</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="afc18b2f0242b0fc4314bbf8af2cc7034"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionItr" ref="afc18b2f0242b0fc4314bbf8af2cc7034" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;T&gt;::iterator <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00101">101</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aad6b97397ee955fe4ed74e1d8dc0776a"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionType" ref="aad6b97397ee955fe4ed74e1d8dc0776a" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;T&gt; <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad6b97397ee955fe4ed74e1d8dc0776a">RangeCollectionType</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00100">100</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aef62d2aa5ff8ba9dec79cb9bb714fc68"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionClass" ref="aef62d2aa5ff8ba9dec79cb9bb714fc68" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00110">110</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{}
</pre></div>
</div>
</div>
<a class="anchor" id="a994407fb9063dec6364b57697ee4ffbd"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionClass" ref="a994407fb9063dec6364b57697ee4ffbd" args="(const T &amp;range)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>range</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00113">113</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00142">subpavings::RangeCollectionClass&lt; T &gt;::pushBack()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#aad3fca9cdacde8581cd6d1684357d1d1">pushBack</a>(range);
        }
</pre></div>
</div>
</div>
<a class="anchor" id="afd2ea195d16d474bf618c2fd478cdfc4"></a><!-- doxytag: member="subpavings::RangeCollectionClass::RangeCollectionClass" ref="afd2ea195d16d474bf618c2fd478cdfc4" args="(const RangeCollectionClass&lt; T &gt; &amp;other)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00119">119</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>
<div class="fragment"><pre class="fragment">        : <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>(other.container) {}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a98e31e9ed0220ed3358860b808258a55"></a><!-- doxytag: member="subpavings::RangeCollectionClass::absValue" ref="a98e31e9ed0220ed3358860b808258a55" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a98e31e9ed0220ed3358860b808258a55">absValue</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00193">193</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            T accumulation; <span class="comment">// default constructor</span>

            <span class="keywordflow">if</span> (!<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.empty()) {

                accumulation = abs(*(<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin()));


                <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() &gt; 1) {
                    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> rit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin();

                    rit++;
                    <span class="keywordflow">for</span> (;
                            rit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); rit++) {
                        <span class="comment">// don&#39;t use *= in case type T does not support it</span>
                        accumulation = accumulation + abs(*rit);
                    }
                }

            }
            <span class="keywordflow">return</span> accumulation;
        }
</pre></div>
</div>
</div>
<a class="anchor" id="ab0bda06429ce2355970cdfe02a1c1b36"></a><!-- doxytag: member="subpavings::RangeCollectionClass::addReduce" ref="ab0bda06429ce2355970cdfe02a1c1b36" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ab0bda06429ce2355970cdfe02a1c1b36">addReduce</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00149">149</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="keywordflow">if</span> (!<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.empty()) {

                <span class="comment">// use std::accumulate for this but from second value in collection on</span>
                <span class="comment">// so that we can use first value as intial one</span>
                <span class="comment">// avoids having to know the equivalent of &#39;0&#39; for T</span>

                T accumulation = *(<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin());

                <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() &gt; 1) {
                    accumulation = std::accumulate(++<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(),
                                    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(), accumulation);
                }

                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear();
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(accumulation);
            }
        }
</pre></div>
</div>
</div>
<a class="anchor" id="ac728d483dcb418354e6286c8b6db08e1"></a><!-- doxytag: member="subpavings::RangeCollectionClass::clearAll" ref="ac728d483dcb418354e6286c8b6db08e1" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ac728d483dcb418354e6286c8b6db08e1">clearAll</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00441">441</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">   {
    <span class="keywordflow">if</span> (!<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.empty()) {
       <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear();
    }
   }
</pre></div>
</div>
</div>
<a class="anchor" id="a6bfb2802ef229b5671ce6e095fd5004e"></a><!-- doxytag: member="subpavings::RangeCollectionClass::combineCollection" ref="a6bfb2802ef229b5671ce6e095fd5004e" args="(const RangeCollectionClass&lt; T &gt; &amp;lhs, const RangeCollectionClass&lt; T &gt; &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a6bfb2802ef229b5671ce6e095fd5004e">combineCollection</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00286">286</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="comment">// now give this node a range collection which contains all the</span>
            <span class="comment">// elements in both lhs and rhs range collections, going l-&gt;r</span>
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear(); <span class="comment">// make sure current range collection empty</span>
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.insert(<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(),
                                            lhs.container.begin(),
                                            lhs.container.end());
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.insert(<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(),
                                            rhs.container.begin(),
                                            rhs.container.end());
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a14b0dd04add88d021dc3a67a3a1c8656"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getHeight" ref="a14b0dd04add88d021dc3a67a3a1c8656" args="(std::vector&lt; real &gt; &amp;HeightsVector)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a14b0dd04add88d021dc3a67a3a1c8656">getHeight</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; real &gt; &amp;&#160;</td>
          <td class="paramname"><em>HeightsVector</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00366">366</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="MappedFiniteMixtureLeafCounts_8cpp_source.shtml#l00096">getHeightAndBox()</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            HeightsVector.push_back((*cit));
        }
      }
      }
</pre></div>
</div>
</div>
<a class="anchor" id="a364b0e829d6f1dea3b2cb9085036dd2c"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getNodeArea" ref="a364b0e829d6f1dea3b2cb9085036dd2c" args="(double boxVol)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a364b0e829d6f1dea3b2cb9085036dd2c">getNodeArea</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>boxVol</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00412">412</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">      {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      real area = 0.0;
      <span class="comment">//std::cout &lt;&lt; &quot;get node area: &quot; &lt;&lt; std::endl;</span>
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            <span class="comment">//std::cout &lt;&lt; (*cit) &lt;&lt; &quot;\t&quot; &lt;&lt; boxVol &lt;&lt; std::endl;</span>
            area = (*cit)*boxVol;
        }
      }
      <span class="keywordflow">return</span> area;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="aa2490dc5f0d3e9651753ad6aea148c1b"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getNodeIAE" ref="aa2490dc5f0d3e9651753ad6aea148c1b" args="(double boxVol)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aa2490dc5f0d3e9651753ad6aea148c1b">getNodeIAE</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>boxVol</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00380">380</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      real IAE;
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            real diff = (*cit);
            <span class="keywordflow">if</span> (diff &lt; 0) { diff = diff * (-1.0); } <span class="comment">//to make it positive</span>
            IAE = (boxVol*diff);
            <span class="comment">//std::cout &lt;&lt; diff &lt;&lt; &quot;\t&quot; &lt;&lt; boxVol &lt;&lt; std::endl;</span>
        }
      }
      <span class="keywordflow">return</span> IAE;
      }
</pre></div>
</div>
</div>
<a class="anchor" id="a638fb0cb53c34ae359743cd22d6da8ee"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getNodeIAERegHist" ref="a638fb0cb53c34ae359743cd22d6da8ee" args="(double boxVol, double height)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a638fb0cb53c34ae359743cd22d6da8ee">getNodeIAERegHist</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>boxVol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00397">397</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      real IAE;
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            real diff = (*cit) - height;
            <span class="keywordflow">if</span> (diff &lt; 0) { diff = diff * (-1.0); } <span class="comment">//to make it positive</span>
            IAE = (boxVol*diff);
        }
      }
      <span class="keywordflow">return</span> IAE;
      }
</pre></div>
</div>
</div>
<a class="anchor" id="ac7965fd94f11b817f6f533a5dab2a106"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getSize" ref="ac7965fd94f11b817f6f533a5dab2a106" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ac7965fd94f11b817f6f533a5dab2a106">getSize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00130">130</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="rangecollection_8hpp_source.shtml#l00219">subpavings::RangeCollectionClass&lt; T &gt;::hullCollection()</a>, and <a class="el" href="rangecollection_8hpp_source.shtml#l00301">subpavings::RangeCollectionClass&lt; T &gt;::subtractCollection()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="keywordflow">return</span> <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size();
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a6173b655063220537c3630f1347cfdd5"></a><!-- doxytag: member="subpavings::RangeCollectionClass::getWeights" ref="a6173b655063220537c3630f1347cfdd5" args="(std::vector&lt; double &gt; &amp;WeightsVector, std::vector&lt; interval &gt; &amp;WeightsInt, double boxVol)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a6173b655063220537c3630f1347cfdd5">getWeights</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>WeightsVector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; interval &gt; &amp;&#160;</td>
          <td class="paramname"><em>WeightsInt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>boxVol</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00339">339</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="MappedFiniteMixtureLeafCounts_8cpp_source.shtml#l00077">getAllWeights()</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            
            interval vol = interval(boxVol);
            interval height = interval(*cit);
            <span class="comment">//std::cout &lt;&lt; vol &lt;&lt; &quot;\t&quot; &lt;&lt; height &lt;&lt; std::endl;</span>
            
            interval area = vol*height;
            WeightsInt.push_back(area);
            WeightsVector.push_back(_double(mid(area)));
            <span class="comment">//i know this is horrible but i don&#39;t know how else to do this</span>
            <span class="comment">//for now and i don&#39;t have time to improve this.. sorry..</span>
            <span class="comment">//mainly i need a double for the gsl_ran_discrete_preproc</span>
            <span class="comment">//which only takes in doubles, hence the cast.</span>
        }
      }
      }
</pre></div>
</div>
</div>
<a class="anchor" id="ad34b794f99d2b254f1a7d8a1fa608bf8"></a><!-- doxytag: member="subpavings::RangeCollectionClass::hullCollection" ref="ad34b794f99d2b254f1a7d8a1fa608bf8" args="(const RangeCollectionClass&lt; T &gt; &amp;other)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ad34b794f99d2b254f1a7d8a1fa608bf8">hullCollection</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00219">219</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00130">subpavings::RangeCollectionClass&lt; T &gt;::getSize()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00059">subpavings::hullOperator()</a>, and <a class="el" href="rangecollection_8hpp_source.shtml#l00136">subpavings::RangeCollectionClass&lt; T &gt;::isEmpty()</a>.</p>

<p>Referenced by <a class="el" href="rangecollection_8hpp_source.shtml#l00276">subpavings::RangeCollectionClass&lt; T &gt;::hullCollection()</a>.</p>
<div class="fragment"><pre class="fragment">        {

            <span class="keywordtype">size_t</span> i = 0;

            <span class="keywordtype">size_t</span> n = other.getSize();

            <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a777b04fa8e011fdbaabdd85ced542e83">isEmpty</a>()) { <span class="comment">// nothing here already</span>
                <span class="comment">// copy the other&#39;s container for this</span>
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a> = other.container;
            }
            <span class="keywordflow">else</span> { <span class="comment">// has something in</span>

                <span class="comment">// we have to make sure the rangeCollection for this matches</span>
                <span class="comment">// that of the children</span>
                <span class="comment">// number of elements in this rangeCollection should = child</span>
                <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#ac7965fd94f11b817f6f533a5dab2a106">getSize</a>() != n) {
                    <span class="keywordflow">throw</span> RangeCollectionException(<span class="stringliteral">&quot;rangeCollections do not match&quot;</span>);
                }

                <span class="comment">// store current container temporarily</span>
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#aad6b97397ee955fe4ed74e1d8dc0776a">RangeCollectionType</a> _temp = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>;

                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear();

                <span class="comment">// put into this container the hull operator of</span>
                <span class="comment">// the pairs of values from the other&#39;s container and the this&#39;s container</span>
                <span class="keywordflow">for</span> (i=0; i &lt; n; i++) {
                    <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(
                                <a class="code" href="namespacesubpavings.shtml#a3aaa0e2846fcc501bf57373ab4fcfcb3">hullOperator</a>((other.container)[i],
                                _temp[i]));
                }
            }
        }
</pre></div>
</div>
</div>
<a class="anchor" id="ab2bb4230d2cdfffab259895a8bf0037d"></a><!-- doxytag: member="subpavings::RangeCollectionClass::hullCollection" ref="ab2bb4230d2cdfffab259895a8bf0037d" args="(const RangeCollectionClass&lt; T &gt; &amp;lhs, const RangeCollectionClass&lt; T &gt; &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#ad34b794f99d2b254f1a7d8a1fa608bf8">hullCollection</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00276">276</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>, and <a class="el" href="rangecollection_8hpp_source.shtml#l00219">subpavings::RangeCollectionClass&lt; T &gt;::hullCollection()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a> = lhs.container;
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#ad34b794f99d2b254f1a7d8a1fa608bf8">hullCollection</a>(rhs);
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a777b04fa8e011fdbaabdd85ced542e83"></a><!-- doxytag: member="subpavings::RangeCollectionClass::isEmpty" ref="a777b04fa8e011fdbaabdd85ced542e83" args="() const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a777b04fa8e011fdbaabdd85ced542e83">isEmpty</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00136">136</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="rangecollection_8hpp_source.shtml#l00219">subpavings::RangeCollectionClass&lt; T &gt;::hullCollection()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="keywordflow">return</span> <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.empty();
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a4a8632e2e2f9f9743256c7dbaa7a7529"></a><!-- doxytag: member="subpavings::RangeCollectionClass::normNodeHeight" ref="a4a8632e2e2f9f9743256c7dbaa7a7529" args="(double totalArea)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a4a8632e2e2f9f9743256c7dbaa7a7529">normNodeHeight</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>totalArea</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00426">426</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="MappedFiniteMixtureLeafCounts_8cpp_source.shtml#l00118">normHeights()</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> cit;
      real newHeight;
      <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() == 1) {
        <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
            newHeight = (*cit)/totalArea;
        }
      }
      <span class="keywordflow">return</span> newHeight;
    } <span class="comment">// end of normNodeHeight</span>
</pre></div>
</div>
</div>
<a class="anchor" id="aba4094c69cec254d23643c00051ce068"></a><!-- doxytag: member="subpavings::RangeCollectionClass::operator=" ref="aba4094c69cec254d23643c00051ce068" args="(const RangeCollectionClass&lt; T &gt; &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt;T&gt;&amp; <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00123">123</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a> = rhs.container;
            <span class="keywordflow">return</span> *<span class="keyword">this</span>;
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a853143f43198b6f2dbfffbe364e75d09"></a><!-- doxytag: member="subpavings::RangeCollectionClass::outputTabs" ref="a853143f43198b6f2dbfffbe364e75d09" args="(std::ostream &amp;os) const " -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a853143f43198b6f2dbfffbe364e75d09">outputTabs</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00326">326</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a636405dad973d70f8addd86d416418ca">RangeCollectionConstItr</a> cit;
            <span class="keywordflow">for</span> (cit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin(); cit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); cit++) {
                os &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; (*cit);
            }
        }
</pre></div>
</div>
</div>
<a class="anchor" id="acc3641f81593a24b242bed4f223cbd85"></a><!-- doxytag: member="subpavings::RangeCollectionClass::productReduce" ref="acc3641f81593a24b242bed4f223cbd85" args="()" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#acc3641f81593a24b242bed4f223cbd85">productReduce</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00171">171</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="keywordflow">if</span> (!<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.empty()) {

                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> rit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin();
                T product = *(rit);

                <span class="keywordflow">if</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.size() &gt; 1) {
                    rit++;
                    <span class="keywordflow">for</span> (;
                            rit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); rit++) {
                        <span class="comment">// don&#39;t use *= in case type T does not support it</span>
                        product = product * (*rit);
                    }
               }

                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear();
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(product);
            }
        }
</pre></div>
</div>
</div>
<a class="anchor" id="aad3fca9cdacde8581cd6d1684357d1d1"></a><!-- doxytag: member="subpavings::RangeCollectionClass::pushBack" ref="aad3fca9cdacde8581cd6d1684357d1d1" args="(const T &amp;toAdd)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad3fca9cdacde8581cd6d1684357d1d1">pushBack</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>toAdd</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00142">142</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>

<p>Referenced by <a class="el" href="rangecollection_8hpp_source.shtml#l00113">subpavings::RangeCollectionClass&lt; T &gt;::RangeCollectionClass()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(toAdd);
        }
</pre></div>
</div>
</div>
<a class="anchor" id="acf3cc8c38b9a009312dc4d6660705958"></a><!-- doxytag: member="subpavings::RangeCollectionClass::scalarMult" ref="acf3cc8c38b9a009312dc4d6660705958" args="(const T &amp;mult)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#acf3cc8c38b9a009312dc4d6660705958">scalarMult</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>mult</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00262">262</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="comment">//transform (container.begin(), container.end(), container.begin(),</span>
            <span class="comment">//            bind1st(transformMult&lt;T&gt;(),mult));</span>

            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> rit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin();
            <span class="keywordflow">for</span> (<a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#afc18b2f0242b0fc4314bbf8af2cc7034">RangeCollectionItr</a> rit = <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.begin();
                            rit &lt; <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.end(); rit++) {
                        <span class="comment">// don&#39;t use *= in case type T does not support it</span>
                        *rit = mult * (*rit);
            }
        }
</pre></div>
</div>
</div>
<a class="anchor" id="a5a93572c908847119d9f562208088792"></a><!-- doxytag: member="subpavings::RangeCollectionClass::subtractCollection" ref="a5a93572c908847119d9f562208088792" args="(const RangeCollectionClass&lt; T &gt; &amp;lhs, const RangeCollectionClass&lt; T &gt; &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a5a93572c908847119d9f562208088792">subtractCollection</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00301">301</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>References <a class="el" href="rangecollection_8hpp_source.shtml#l00105">subpavings::RangeCollectionClass&lt; T &gt;::container</a>, and <a class="el" href="rangecollection_8hpp_source.shtml#l00130">subpavings::RangeCollectionClass&lt; T &gt;::getSize()</a>.</p>
<div class="fragment"><pre class="fragment">        {
            <span class="keywordtype">size_t</span> i = 0;
            <span class="keywordtype">size_t</span> n = rhs.getSize();
            <span class="keywordtype">size_t</span> m = lhs.getSize();
            <span class="comment">// we have to make sure the rangeCollection for this matches</span>
            <span class="comment">// that of the other</span>
            <span class="comment">// number of elements in this rangeCollection should = child</span>
            <span class="keywordflow">if</span> (m &lt; n) {
                <span class="keywordflow">throw</span> RangeCollectionException(<span class="stringliteral">&quot;rangeCollections do not match&quot;</span>);
            }
            <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.clear();
            <span class="comment">// put into this container the difference of</span>
            <span class="comment">// the pairs of values from the two containers</span>
            <span class="keywordflow">for</span> (i=0; i &lt; n; i++) {
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(
                            lhs.container[i] - rhs.container[i]);
            }
            <span class="keywordflow">for</span> (i = n; i &lt; m; i++) {
                <a class="code" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a>.push_back(lhs.container[i]);
            }
        }
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a91c127974a65a450569f9c33bbc2fcf6"></a><!-- doxytag: member="subpavings::RangeCollectionClass::container" ref="a91c127974a65a450569f9c33bbc2fcf6" args="" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#aad6b97397ee955fe4ed74e1d8dc0776a">RangeCollectionType</a> <a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">subpavings::RangeCollectionClass</a>&lt; T &gt;::<a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml#a91c127974a65a450569f9c33bbc2fcf6">container</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rangecollection_8hpp_source.shtml#l00105">105</a> of file <a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a>.</p>

<p>Referenced by <a class="el" href="rangecollection_8hpp_source.shtml#l00193">subpavings::RangeCollectionClass&lt; T &gt;::absValue()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00149">subpavings::RangeCollectionClass&lt; T &gt;::addReduce()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00441">subpavings::RangeCollectionClass&lt; T &gt;::clearAll()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00286">subpavings::RangeCollectionClass&lt; T &gt;::combineCollection()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00366">subpavings::RangeCollectionClass&lt; T &gt;::getHeight()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00412">subpavings::RangeCollectionClass&lt; T &gt;::getNodeArea()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00380">subpavings::RangeCollectionClass&lt; T &gt;::getNodeIAE()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00397">subpavings::RangeCollectionClass&lt; T &gt;::getNodeIAERegHist()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00130">subpavings::RangeCollectionClass&lt; T &gt;::getSize()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00339">subpavings::RangeCollectionClass&lt; T &gt;::getWeights()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00219">subpavings::RangeCollectionClass&lt; T &gt;::hullCollection()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00136">subpavings::RangeCollectionClass&lt; T &gt;::isEmpty()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00426">subpavings::RangeCollectionClass&lt; T &gt;::normNodeHeight()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00123">subpavings::RangeCollectionClass&lt; T &gt;::operator=()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00326">subpavings::RangeCollectionClass&lt; T &gt;::outputTabs()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00171">subpavings::RangeCollectionClass&lt; T &gt;::productReduce()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00142">subpavings::RangeCollectionClass&lt; T &gt;::pushBack()</a>, <a class="el" href="rangecollection_8hpp_source.shtml#l00262">subpavings::RangeCollectionClass&lt; T &gt;::scalarMult()</a>, and <a class="el" href="rangecollection_8hpp_source.shtml#l00301">subpavings::RangeCollectionClass&lt; T &gt;::subtractCollection()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="rangecollection_8hpp_source.shtml">rangecollection.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespacesubpavings.shtml">subpavings</a>      </li>
      <li class="navelem"><a class="el" href="classsubpavings_1_1RangeCollectionClass.shtml">RangeCollectionClass</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:40 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
