<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: PhyloPOT.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">GOpt/PhyloPOT/PhyloPOT.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Example to use <a class="el" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a> and GOpt to do global optimisation for phylogenetic problem.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;iostream&gt;</code><br/>
<code>#include &lt;fstream&gt;</code><br/>
<code>#include &lt;vector&gt;</code><br/>
<code>#include &lt;functional&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &lt;numeric&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &lt;math.h&gt;</code><br/>
<code>#include &lt;time.h&gt;</code><br/>
<code>#include &quot;interval.hpp&quot;</code><br/>
<code>#include &quot;imath.hpp&quot;</code><br/>
<code>#include &quot;rmath.hpp&quot;</code><br/>
<code>#include &quot;intvector.hpp&quot;</code><br/>
<code>#include &quot;ivector.hpp&quot;</code><br/>
<code>#include &quot;rvector.hpp&quot;</code><br/>
<code>#include &quot;imatrix.hpp&quot;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="toolz_8hpp_source.shtml">toolz.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="Fobj_8hpp_source.shtml">Fobj.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="FPhyloPOT_8hpp_source.shtml">FPhyloPOT.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="PhyloTree_8hpp_source.shtml">PhyloTree.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="GOpt_8hpp_source.shtml">GOpt.hpp</a>&quot;</code><br/>
</div>
<p><a href="GOpt_2PhyloPOT_2PhyloPOT_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (int argc, char **argv)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Example to use <a class="el" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a> and GOpt to do global optimisation for phylogenetic problem. </p>

<p>Definition in file <a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp_source.shtml">GOpt/PhyloPOT/PhyloPOT.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a3c04138a5bfe5d72780bb7e82a18e627"></a><!-- doxytag: member="GOpt/PhyloPOT/PhyloPOT.cpp::main" ref="a3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ImageSetDiff_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000016">Todo:</a></b></dt><dd>Need to do simultaneous glabal opoptimisation over all labeles see Raaz's 2004 code with hacked older C-XSC libs </dd></dl>

<p>Definition at line <a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp_source.shtml#l00062">62</a> of file <a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp_source.shtml">GOpt/PhyloPOT/PhyloPOT.cpp</a>.</p>

<p>References <a class="el" href="Fobj_8hpp_source.shtml#l00202">Fobj::getLabeledDomainDim()</a>, <a class="el" href="FPhyloPOT_8hpp_source.shtml#l00242">FPhyloPOT::getNoTrees()</a>, <a class="el" href="GOpt_8cpp_source.shtml#l00100">GOptMax()</a>, and <a class="el" href="GOpt_8cpp_source.shtml#l00061">GOptMin()</a>.</p>
<div class="fragment"><pre class="fragment">{
  ios::sync_with_stdio ();  <span class="comment">// call this function so iostream works with stdio</span>
  cout &lt;&lt; SetPrecision (20, 15);  <span class="comment">// Number of mantissa digits in I/O</span>
  
  <span class="comment">// default value</span>
  <span class="keywordtype">double</span> Alb = 1.0;<span class="comment">// partition until lower bound on Acceptance Prob. is &gt; Alb</span>
  
  <span class="comment">// default value</span>
  <span class="keywordtype">int</span> n_boxes = 500;
  
  <span class="comment">// default value</span>
  <span class="keywordtype">int</span> n_samples = 100;
  
  <span class="comment">// default value</span>
  <span class="keywordtype">unsigned</span> theSeed = 1234;
  
  <span class="comment">// default value</span>
  <span class="keywordtype">bool</span> UseLogPi = <span class="keyword">true</span>;
  
  <span class="comment">// default value</span>
  <span class="keywordtype">bool</span> use_f_scale = <span class="keyword">true</span>;
  
  <span class="comment">// default value</span>
  <span class="keywordtype">int</span> prior_type = 0;
  
  <span class="comment">// parameters for FPhyloPOT</span>
  <span class="comment">// default value</span>
  interval DomainCFN3(0.0000000001,1);
  
  <span class="comment">// default value</span>
  <span class="keywordtype">int</span> tree_space = 3; <span class="comment">// number of taxa</span>
  
  <span class="comment">// check the input </span>
  <span class="keywordflow">if</span> (argc &gt;= 2)
  {
    sscanf (argv[1], <span class="stringliteral">&quot;%i&quot;</span>, &amp;tree_space);
    cout &lt;&lt; <span class="stringliteral">&quot;# Usage: PhyloPOT &lt;tree_space&gt; &quot;</span>
                     &lt;&lt; <span class="stringliteral">&quot;extra arguments ignored.\n&quot;</span>;
  }
  
  cout &lt;&lt; <span class="stringliteral">&quot;# tree_space: &quot;</span> &lt;&lt; tree_space  &lt;&lt; endl; 
  
  
  <a class="code" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a> FPhylo(tree_space, DomainCFN3, UseLogPi, prior_type);
  
  <span class="comment">// ***************** global optimisation ****************</span>
  
    
  <span class="comment">// set up a search box</span>
  <span class="comment">// get the dimensions of the domain for this first tree</span>
  <span class="keywordtype">int</span> domain_dim = FPhylo.getLabeledDomainDim(0); 
  ivector search (1, domain_dim);
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt;= domain_dim; i++)
  {
    search[i] = DomainCFN3;     <span class="comment">// note smaller domain used here for gopt</span>
  }
  
  real tolerance; <span class="comment">// set a tolerance</span>
  tolerance = 1e-8;
  
  <span class="comment">// cycle through the trees and do global optimisation for minimums and maximums</span>
  <span class="keywordtype">int</span> noTrees = FPhylo.getNoTrees();
  std::cout &lt;&lt; <span class="stringliteral">&quot;Note there are &quot;</span> &lt;&lt; noTrees 
            &lt;&lt; <span class="stringliteral">&quot; trees for this function object.&quot;</span> &lt;&lt; std::endl &lt;&lt; std::endl;
  <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; noTrees; i++) {
    
    std::cout &lt;&lt; <span class="stringliteral">&quot;Performing global optimisation only on tree number &quot;</span> 
              &lt;&lt; i &lt;&lt; std::endl;
        
    <span class="comment">// Minimums</span>
    <span class="comment">// call GoptMin with pointer to FPhylo for tree i</span>
    <a class="code" href="GOpt_8cpp.shtml#aa1ef10e5facfa08af99a235f02dce943" title="This runs the global optimisation procedure AllGOp for global minimums and prints results...">GOptMin</a>(&amp;FPhylo, search, tolerance, i);
    
    <span class="comment">// Maximums</span>
    <span class="comment">// call GoptMax with pointer to FPhylo for tree i</span>
    <a class="code" href="GOpt_8cpp.shtml#ad4d421e8fe8cd7dc081fbc719c43c8b4" title="This runs the global optimisation procedure AllGOp for global maximums and prints results...">GOptMax</a>(&amp;FPhylo, search, tolerance, i); 
    
  }
  
  
  <span class="keywordflow">return</span> 0;     
}
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml">PhyloPOT.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:22 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
