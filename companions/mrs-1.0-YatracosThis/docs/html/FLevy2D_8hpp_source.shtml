<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FLevy2D.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('FLevy2D_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">FLevy2D.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="FLevy2D_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2005, 2006, 2007, 2008, 2009 Raazesh Sainudiin and Thomas York</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00009"></a>00009 <span class="comment"> * your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00026"></a>00026 <span class="preprocessor">#ifndef __FLEVY2D__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#define __FLEVY2D__</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;assert.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;getopt.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;interval.hpp&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;imath.hpp&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;rmath.hpp&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;ivector.hpp&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;functional&gt;</span>
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;gop.hpp&gt;</span>  <span class="comment">// cxsc global optimisation</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="keyword">using namespace </span>std;
<a name="l00046"></a>00046 <span class="keyword">using namespace </span>cxsc;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="SmallClasses_8hpp.shtml">SmallClasses.hpp</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="Fobj_8hpp.shtml" title="Fobj definition and declaration.">Fobj.hpp</a>&quot;</span>
<a name="l00050"></a>00050 
<a name="l00052"></a><a class="code" href="classFLevy2D.shtml">00052</a> <span class="keyword">class </span><a class="code" href="classFLevy2D.shtml" title="two-dimensional Levy density as a function object class">FLevy2D</a>: <span class="keyword">public</span> <a class="code" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>
<a name="l00053"></a>00053 {
<a name="l00054"></a><a class="code" href="classFLevy2D.shtml#adfc81b0fad00fd255954e5f0a6ae786a">00054</a>   real <a class="code" href="classFLevy2D.shtml#adfc81b0fad00fd255954e5f0a6ae786a">Temperature</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a>;
<a name="l00055"></a>00055 
<a name="l00057"></a><a class="code" href="classFLevy2D.shtml#a3ae9783838856fc26170358ca4989818">00057</a>   <span class="keyword">mutable</span> <span class="keywordtype">int</span> <a class="code" href="classFLevy2D.shtml#a3ae9783838856fc26170358ca4989818" title="Track number of interval function calls.">n_interval_calls</a>;
<a name="l00058"></a>00058 
<a name="l00060"></a><a class="code" href="classFLevy2D.shtml#a9061075d7df97d8cbd182f049b93d404">00060</a>   <span class="keyword">mutable</span> <span class="keywordtype">int</span> <a class="code" href="classFLevy2D.shtml#a9061075d7df97d8cbd182f049b93d404" title="Track number of real function calls.">n_real_calls</a>;
<a name="l00061"></a>00061   <span class="keyword">public</span>:
<a name="l00063"></a>00063     <a class="code" href="classFLevy2D.shtml" title="two-dimensional Levy density as a function object class">FLevy2D</a>(real <a class="code" href="LevyFobj2D_8cpp.shtml#ae3d1dc6c8ff5f4490d10dd105dfce9a7">Temperature</a>, real <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a>, real <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a>, real <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a>, 
<a name="l00064"></a>00064             real <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>, <span class="keywordtype">bool</span> LogPi);
<a name="l00065"></a>00065 
<a name="l00067"></a>00067     interval operator()(<span class="keyword">const</span> <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; X) <span class="keyword">const</span>;
<a name="l00068"></a>00068 
<a name="l00070"></a>00070     real operator()(<span class="keyword">const</span> <a class="code" href="classLabPnt.shtml" title="A labeled point class.">LabPnt</a>&amp; X) <span class="keyword">const</span>;
<a name="l00071"></a>00071 
<a name="l00073"></a>00073     HessType operator()(<span class="keyword">const</span> HTvector&amp; x, <span class="keyword">const</span> <span class="keywordtype">int</span> label = 0) <span class="keyword">const</span>;
<a name="l00074"></a>00074 
<a name="l00076"></a><a class="code" href="classFLevy2D.shtml#a8d1acd389752d1554445b0247bb06f60">00076</a>     <span class="keyword">virtual</span> real LabBoxVolume(<span class="keyword">const</span> <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; LB)
<a name="l00077"></a>00077     {
<a name="l00078"></a>00078       <span class="keywordflow">return</span> <a class="code" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5" title="a defined pure virtual function for default Lebesgue measure (volume) of a labelled box...">Fobj::LabBoxVolume</a>(LB);
<a name="l00079"></a>00079     }
<a name="l00080"></a>00080 
<a name="l00082"></a><a class="code" href="classFLevy2D.shtml#a8ca0edbf796cd3d7687a86a1c80266c1">00082</a>     <span class="keywordtype">int</span> get_interval_calls()
<a name="l00083"></a>00083     {
<a name="l00084"></a>00084       <span class="keywordflow">return</span> n_interval_calls;
<a name="l00085"></a>00085     }
<a name="l00086"></a>00086 
<a name="l00088"></a><a class="code" href="classFLevy2D.shtml#a48cec5994f9d62306e3852dda50f7f5a">00088</a>     <span class="keywordtype">int</span> get_real_calls()
<a name="l00089"></a>00089     {
<a name="l00090"></a>00090       <span class="keywordflow">return</span> n_real_calls;
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092 };
<a name="l00093"></a>00093 
<a name="l00096"></a><a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml">00096</a> <span class="keyword">class </span><a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml">FLevy2D_Lkl_Tfrom1data</a>: <span class="keyword">public</span> <a class="code" href="classFobj1D.shtml" title="abstract class for one-dimensional function objects">Fobj1D</a>
<a name="l00097"></a>00097 {
<a name="l00098"></a><a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml#a164feef005f7cd698ef7e737479376d9">00098</a>   ivector <a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml#a164feef005f7cd698ef7e737479376d9">Data</a>;
<a name="l00099"></a><a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml#a76c6284c5bb945dcbdd9e0b4e93b7159">00099</a>   real <a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml#a76c6284c5bb945dcbdd9e0b4e93b7159">GlobalMax</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a>;
<a name="l00100"></a>00100   <span class="keyword">public</span>:
<a name="l00101"></a>00101     <a class="code" href="classFLevy2D__Lkl__Tfrom1data.shtml">FLevy2D_Lkl_Tfrom1data</a>(ivector&amp; Data, real <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a>, real <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a>, real <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a>, interval <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>, <span class="keywordtype">bool</span> LogPi);
<a name="l00102"></a>00102     interval operator()(<span class="keyword">const</span> interval&amp; T) <span class="keyword">const</span>;
<a name="l00103"></a>00103     real operator()(<span class="keyword">const</span> real&amp; T) <span class="keyword">const</span> ;
<a name="l00104"></a>00104 };
<a name="l00105"></a>00105 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="FLevy2D_8hpp.shtml">FLevy2D.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:12 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
