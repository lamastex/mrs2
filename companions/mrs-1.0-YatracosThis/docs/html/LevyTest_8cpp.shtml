<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: LevyTest.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('LevyTest_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">LevyTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Testing StatsSubPavings Levy2D data.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;time.h&gt;</code><br/>
<code>#include &lt;fstream&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
<code>#include &quot;<a class="el" href="histall_8hpp_source.shtml">histall.hpp</a>&quot;</code><br/>
<code>#include &lt;gsl/gsl_qrng.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_randist.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="Fobj_8hpp_source.shtml">Fobj.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="FLevy2D_8hpp_source.shtml">FLevy2D.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="MRSampler_8hpp_source.shtml">MRSampler.hpp</a>&quot;</code><br/>
</div>
<p><a href="LevyTest_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="LevyTest_8cpp.shtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (int argc, char **argv)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Testing StatsSubPavings Levy2D data. </p>

<p>Definition in file <a class="el" href="LevyTest_8cpp_source.shtml">LevyTest.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a3c04138a5bfe5d72780bb7e82a18e627"></a><!-- doxytag: member="LevyTest.cpp::main" ref="a3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ImageSetDiff_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="LevyTest_8cpp_source.shtml#l00044">44</a> of file <a class="el" href="LevyTest_8cpp_source.shtml">LevyTest.cpp</a>.</p>

<p>References <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00020">Center1</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00021">Center2</a>, <a class="el" href="adaptivehistogramcollator_8cpp_source.shtml#l00740">subpavings::AdaptiveHistogramCollator::collateFromRSSampleSplitPQ()</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00023">DomainLimit</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00022">GlobalMax</a>, <a class="el" href="adaptivehistogramcollator_8cpp_source.shtml#l00470">subpavings::AdaptiveHistogramCollator::makeAverage()</a>, <a class="el" href="adaptivehistogramcollator_8cpp_source.shtml#l00802">subpavings::AdaptiveHistogramCollator::outputToTxtTabs()</a>, <a class="el" href="MRSampler_8cpp_source.shtml#l00354">MRSampler::RejectionSampleMany()</a>, and <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00019">Temperature</a>.</p>
<div class="fragment"><pre class="fragment">{

    <span class="comment">// example to average 10 samples from a 2-d Levy shape</span>

    ios::sync_with_stdio (); <span class="comment">// so iostream works with stdio</span>
    cout &lt;&lt; SetPrecision (20, 15);  <span class="comment">// Number of mantissa digits in I/O</span>


    <span class="keywordtype">int</span> n_dimensions = 2;
    <span class="keywordtype">int</span> n_boxes = 1000;
    <span class="keywordtype">int</span> n_samples = 100000;
    <span class="keywordtype">double</span> Alb = 1.0;<span class="comment">// partition until lower bound on Acceptance Prob.&gt;Alb</span>
    <span class="keywordtype">unsigned</span> theSeed = 12345;


    <span class="keywordtype">bool</span> use_f_scale = <span class="keyword">true</span>;

    cout &lt;&lt; <span class="stringliteral">&quot;# n_dimensions: &quot;</span> &lt;&lt; n_dimensions &lt;&lt; <span class="stringliteral">&quot;  n_boxes: &quot;</span> &lt;&lt; n_boxes
        &lt;&lt; <span class="stringliteral">&quot;  n_samples: &quot;</span> &lt;&lt; n_samples &lt;&lt; <span class="stringliteral">&quot;  rng_seed = &quot;</span> &lt;&lt; theSeed
        &lt;&lt; endl; <span class="comment">//getchar();</span>

    <span class="comment">//Parameters specific to the Levy target</span>
    real <a class="code" href="LevyFobj2D_8cpp.shtml#ae3d1dc6c8ff5f4490d10dd105dfce9a7">Temperature</a> = 40.0;
    real <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a> = 1.42513;
    real <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a> = 0.80032;
    real <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a> = 176.14;
    real <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a> = 10.0;    <span class="comment">//0.999999999999999;</span>
    <span class="keywordtype">bool</span> UseLogPi = <span class="keyword">false</span>; <span class="comment">// log scale won&#39;t work naively</span>

    <span class="comment">// make the function object</span>
    <a class="code" href="classFLevy2D.shtml" title="two-dimensional Levy density as a function object class">FLevy2D</a> F_Levy_Temp_2D(Temperature, GlobalMax,
                        Center1, Center2, DomainLimit, UseLogPi);

    <span class="comment">// create the sampler</span>
    <a class="code" href="classMRSampler.shtml" title="The Moore rejection sampler class for trans-dimensional targets over labeled metric spaces...">MRSampler</a> theSampler (F_Levy_Temp_2D, n_boxes, Alb, theSeed,
                        (use_f_scale == 1));

    <span class="comment">// produce the samples (n_sample samples should be produced)</span>
    <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> rs_sample; <span class="comment">// object for the sample</span>

    theSampler.RejectionSampleMany (n_samples, rs_sample);


    <span class="comment">// make a box: the same box will be used by all histograms</span>
    <span class="comment">// so should be big enough for all of them, so use the function domain</span>
    <span class="comment">// set up the domain list</span>
    ivector pavingBox(2);
    interval dim1(-DomainLimit, DomainLimit);
    interval dim2(-DomainLimit, DomainLimit);
    pavingBox[1] = dim1;
    pavingBox[2] = dim2;

    <span class="keywordtype">size_t</span> samplesize = 10000; <span class="comment">// number of samples to take from the RSSample</span>

    <span class="comment">// the number of histograms to generate</span>
    <span class="keywordtype">size_t</span> numSamples = 10;

    <span class="comment">// make a collation object, empty at present</span>
    <a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml" title="A wrapper or manager for a CollatorSPSnode.">AdaptiveHistogramCollator</a> coll;

    <span class="comment">// set up objects for priority queue splitting</span>

    <span class="comment">// node comparison using count of data points associated with nodes</span>
    <a class="code" href="classsubpavings_1_1CompCount.shtml" title="Class comparing on count of data points associated with a node.">CompCount</a> compCount;

    <span class="comment">// stopping on smallest volume criteria for splittable nodes</span>
    <span class="keywordtype">double</span> vol = 0.05;
    <a class="code" href="classsubpavings_1_1CritSmallestVol__LTE.shtml" title="Class for testing the volume of the box with the smallest volume in the histogram&#39;s subpaving...">CritSmallestVol_LTE</a> critSmallestVol(vol);

    <span class="comment">/* A node is not splittable if splitting that node would give at least</span>
<span class="comment">    one child with &lt; minPoints of data associated with it.*/</span>
    <span class="keywordtype">size_t</span> minPoints = 0;

    <span class="comment">/* minVolB is the multiplier for (log n)^2/n to determine the minumum</span>
<span class="comment">    volume for a splittable node where n is total points in subpaving.</span>
<span class="comment">    A node with volume &lt; minVolB(log n)^2/n will not be splittable. */</span>
    <span class="keywordtype">double</span> minVolB = 0.0;

    <span class="comment">// do the collation of numSamples histograms from the rssample</span>
    <span class="keywordtype">bool</span> success = coll.<a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml#a3ba2c0211c575d8564050292e2b00640" title="Collate samples from RSSample object, priority queue splitting.">collateFromRSSampleSplitPQ</a>(samplesize, numSamples,
                    rs_sample, pavingBox, compCount,
                    critSmallestVol, minPoints, minVolB);

    <span class="keywordflow">if</span> (success) {
    <span class="keywordtype">string</span> fileName = <span class="stringliteral">&quot;CollatorHistogram.txt&quot;</span>;
    coll.<a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml#aab47793e8362245a28a7ec3090da5352" title="Output the collated information to a txt file.">outputToTxtTabs</a>(fileName); <span class="comment">// output the collation to file</span>

    <span class="comment">//  Make an average histogram</span>
    <a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml" title="A wrapper or manager for a CollatorSPSnode.">AdaptiveHistogramCollator</a> avColl = coll.<a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml#a0437fe89f5ca716f729c7406ca218d3e">makeAverage</a>();
    fileName = <span class="stringliteral">&quot;AverageHistogram.txt&quot;</span>;     <span class="comment">// provide a filename</span>

    avColl.<a class="code" href="classsubpavings_1_1AdaptiveHistogramCollator.shtml#aab47793e8362245a28a7ec3090da5352" title="Output the collated information to a txt file.">outputToTxtTabs</a>(fileName);  <span class="comment">// output the average to file</span>
    }

    <span class="keywordflow">else</span>    cout &lt;&lt; <span class="stringliteral">&quot;Failed to create collation over histograms&quot;</span> &lt;&lt; endl;

    <span class="keywordflow">return</span> 0;

} <span class="comment">// end of Levy test program</span>
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="LevyTest_8cpp.shtml">LevyTest.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:21 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
