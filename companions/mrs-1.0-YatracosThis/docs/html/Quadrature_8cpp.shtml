<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: Quadrature.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('Quadrature_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Quadrature.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_math.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_monte.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_monte_plain.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_monte_miser.h&gt;</code><br/>
<code>#include &lt;gsl/gsl_monte_vegas.h&gt;</code><br/>
<code>#include &lt;iostream&gt;</code><br/>
</div>
<p><a href="Quadrature_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Quadrature_8cpp.shtml#a5d8d739082df35fdba55d410ef394b44">Rosenbrock</a> (double *k, size_t dim, void *params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Quadrature_8cpp.shtml#ab4532dd177083e8a5a8622a982a5ebfc">Levy</a> (double *k, size_t dim, void *params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> (double result, double error)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Quadrature_8cpp.shtml#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a1dda2cc239ef14ab1793a43f9f1201a7"></a><!-- doxytag: member="Quadrature.cpp::display_results" ref="a1dda2cc239ef14ab1793a43f9f1201a7" args="(double result, double error)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>error</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Quadrature_8cpp_source.shtml#l00070">70</a> of file <a class="el" href="Quadrature_8cpp_source.shtml">Quadrature.cpp</a>.</p>

<p>Referenced by <a class="el" href="Quadrature_8cpp_source.shtml#l00077">main()</a>.</p>
<div class="fragment"><pre class="fragment">     {
       printf (<span class="stringliteral">&quot;result = % .6f\n&quot;</span>, result);
       printf (<span class="stringliteral">&quot;sigma  = % .6f\n&quot;</span>, error);
     }
</pre></div>
</div>
</div>
<a class="anchor" id="ab4532dd177083e8a5a8622a982a5ebfc"></a><!-- doxytag: member="Quadrature.cpp::Levy" ref="ab4532dd177083e8a5a8622a982a5ebfc" args="(double *k, size_t dim, void *params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="Quadrature_8cpp.shtml#ab4532dd177083e8a5a8622a982a5ebfc">Levy</a> </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Quadrature_8cpp_source.shtml#l00040">40</a> of file <a class="el" href="Quadrature_8cpp_source.shtml">Quadrature.cpp</a>.</p>

<p>References <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00020">Center1</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00021">Center2</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01052">taylor::cos()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00022">GlobalMax</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, and <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00019">Temperature</a>.</p>

<p>Referenced by <a class="el" href="Quadrature_8cpp_source.shtml#l00077">main()</a>.</p>
<div class="fragment"><pre class="fragment">                                          {   
       <span class="comment">//Parameters specific to the Levy target</span>
        <span class="keywordtype">double</span> <a class="code" href="LevyFobj2D_8cpp.shtml#ae3d1dc6c8ff5f4490d10dd105dfce9a7">Temperature</a> = 40.0;
        <span class="keywordtype">double</span> <a class="code" href="LevyFobj2D_8cpp.shtml#abe2298578938894ea3823f8baea9361e">Center1</a> = 1.42513;
        <span class="keywordtype">double</span> <a class="code" href="LevyFobj2D_8cpp.shtml#a896d9a31b2c3aeb2deecb90e98e18a14">Center2</a> = 0.80032;
        <span class="keywordtype">double</span> <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a> = 176.14;

  <span class="keywordtype">double</span> x = k[0];
  <span class="keywordtype">double</span> y = k[1];
<span class="keywordtype">double</span> isum, jsum, hh;
  isum = 0.0;
  jsum = 0.0;

  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt;= 5; i++)
  {
    isum = isum + double (i) * <a class="code" href="namespacetaylor.shtml#af7e3108838177d298e5ef3930dd9605f">cos</a> (<span class="keywordtype">double</span> (i - 1) *x + <span class="keywordtype">double</span> (i));
    jsum = jsum + double (i) * <a class="code" href="namespacetaylor.shtml#af7e3108838177d298e5ef3930dd9605f">cos</a> (<span class="keywordtype">double</span> (i + 1) *y + <span class="keywordtype">double</span> (i));
  }
  <span class="comment">// Avoid real conversion error</span>
  hh = isum * jsum + <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>((x + Center1),2) +
       <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>((y + Center2),2);
  hh += <a class="code" href="LevyFobj2D_8cpp.shtml#a37e4011a5b0b8b87b1893520477568a2">GlobalMax</a>;

  <span class="comment">// TEMPERATURE = 1, 4, 40, 400, 4000</span>
  <span class="keywordtype">double</span> result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-hh / Temperature);

<span class="keywordflow">return</span> result;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0ddf1224851353fc92bfbff6f499fa97"></a><!-- doxytag: member="Quadrature.cpp::main" ref="a0ddf1224851353fc92bfbff6f499fa97" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ImageSetDiff_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Quadrature_8cpp_source.shtml#l00077">77</a> of file <a class="el" href="Quadrature_8cpp_source.shtml">Quadrature.cpp</a>.</p>

<p>References <a class="el" href="Quadrature_8cpp_source.shtml#l00070">display_results()</a>, <a class="el" href="Quadrature_8cpp_source.shtml#l00040">Levy()</a>, and <a class="el" href="Quadrature_8cpp_source.shtml#l00015">Rosenbrock()</a>.</p>
<div class="fragment"><pre class="fragment">     {
       
      <span class="keywordtype">double</span> x1 = atof(argv[1]);
      <span class="keywordtype">double</span> x2 = atof(argv[2]);
      <span class="keywordtype">double</span> y1 = atof(argv[3]);
      <span class="keywordtype">double</span> y2 = atof(argv[4]);
      <span class="keywordtype">double</span> dim = 2;
       <span class="keywordtype">double</span> resRosen, errRosen, resLevy, errLevy;
     
       <span class="keywordtype">double</span> xl[2] = {x1, y1}; 
       <span class="keywordtype">double</span> xu[2] = {x2, y2};
     
       <span class="keyword">const</span> gsl_rng_type *T;
       gsl_rng *r;
     
       gsl_monte_function G1 =  { &amp;<a class="code" href="Quadrature_8cpp.shtml#a5d8d739082df35fdba55d410ef394b44">Rosenbrock</a>, 2, 0 };
       gsl_monte_function G2 = { &amp;<a class="code" href="Quadrature_8cpp.shtml#ab4532dd177083e8a5a8622a982a5ebfc">Levy</a>, 2, 0 };

       <span class="keywordtype">size_t</span> calls = 10000000;
     
       gsl_rng_env_setup ();
     
       T = gsl_rng_default;
       r = gsl_rng_alloc (T);
     

       {
         gsl_monte_plain_state *s = gsl_monte_plain_alloc (2);
         gsl_monte_plain_integrate (&amp;G1, xl, xu, 2, calls, r, s, 
                                    &amp;resRosen, &amp;errRosen);
         gsl_monte_plain_integrate (&amp;G2, xl, xu, 2, calls, r, s, &amp;resLevy, &amp;errLevy);
         gsl_monte_plain_free (s);
         cout &lt;&lt; <span class="stringliteral">&quot;plain Rosen&quot;</span> &lt;&lt; endl;   
         <a class="code" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> (resRosen, errRosen);
         cout &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span> &lt;&lt; endl;
         cout &lt;&lt; <span class="stringliteral">&quot;plain Levy&quot;</span> &lt;&lt; endl;
         <a class="code" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> (resLevy, errLevy);
         cout &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span> &lt;&lt; endl;
       }

     
       {
         gsl_monte_miser_state *s = gsl_monte_miser_alloc (2);
         gsl_monte_miser_integrate (&amp;G1, xl, xu, 2, calls, r, s,
                                   &amp;resRosen, &amp;errRosen);
         gsl_monte_miser_integrate (&amp;G2, xl, xu, 2, calls, r, s, &amp;resLevy, &amp;errLevy);
         gsl_monte_miser_free (s);
         cout &lt;&lt; <span class="stringliteral">&quot;miser Rosen&quot;</span> &lt;&lt; endl;
         <a class="code" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> (resRosen, errRosen);
         cout &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span> &lt;&lt; endl;
         cout &lt;&lt; <span class="stringliteral">&quot;miser Levy&quot;</span> &lt;&lt; endl;
         <a class="code" href="Quadrature_8cpp.shtml#a1dda2cc239ef14ab1793a43f9f1201a7">display_results</a> (resLevy, errLevy);
       }
     
     
       gsl_rng_free (r);
     
       <span class="keywordflow">return</span> 0;
     }
</pre></div>
</div>
</div>
<a class="anchor" id="a5d8d739082df35fdba55d410ef394b44"></a><!-- doxytag: member="Quadrature.cpp::Rosenbrock" ref="a5d8d739082df35fdba55d410ef394b44" args="(double *k, size_t dim, void *params)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="Quadrature1_8cpp.shtml#a299a351ae0c2f31d690417ca8a34bcb6">Rosenbrock</a> </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Quadrature_8cpp_source.shtml#l00015">15</a> of file <a class="el" href="Quadrature_8cpp_source.shtml">Quadrature.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00018">Height</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, and <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00017">Tinverse</a>.</p>

<p>Referenced by <a class="el" href="Quadrature_8cpp_source.shtml#l00077">main()</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="comment">// Parameters specific to the Rosenbrock target</span>
<span class="keywordtype">double</span> <a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> = 1.0;
<span class="keywordtype">double</span> <a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> = 100.0;
<span class="comment">// Domain</span>
<span class="comment">//double x = k[0];</span>
<span class="comment">//double y = k[1];</span>
<span class="keywordtype">double</span> result=0.0;
<span class="comment">//double size_k; //size of array k</span>

    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 1; i++) <span class="comment">//2nd term should be size_k</span>
    {
      result = result + (Height * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>((k[i+1] - <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(k[i],2)) ,2) +
        <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>((k[i] - 1.0), 2));
    }

result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-(Tinverse * result));

<span class="keywordflow">return</span> result; 
}
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="Quadrature_8cpp.shtml">Quadrature.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:22 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
