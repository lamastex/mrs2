<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FWitchesHat Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classFWitchesHat.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">FWitchesHat Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="FWitchesHat" --><!-- doxytag: inherits="Fobj" -->
<p>n-dimensional witch's hat density as a function object class  
 <a href="classFWitchesHat.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for FWitchesHat:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFWitchesHat__inherit__graph.png" border="0" usemap="#FWitchesHat_inherit__map" alt="Inheritance graph"/></div>
<map name="FWitchesHat_inherit__map" id="FWitchesHat_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for FWitchesHat:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFWitchesHat__coll__graph.png" border="0" usemap="#FWitchesHat_coll__map" alt="Collaboration graph"/></div>
<map name="FWitchesHat_coll__map" id="FWitchesHat_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classFWitchesHat-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#aab1cf526334362a4902d3a724190f038">FWitchesHat</a> (int n_dimensions, real PMean, real PRadius, real PWeight, real UWeight, real <a class="el" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>, bool LogPi, int Prior)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a11734772d7dea57df5ff72ebbfd3e272">operator()</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#a11734772d7dea57df5ff72ebbfd3e272"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a027d78c3e9e90da19370cb50d8b43b46">operator()</a> (const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;X) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#a027d78c3e9e90da19370cb50d8b43b46"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a4549cc1c30758e673f050e9b30eae67e">LabBoxVolume</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;LB)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a defined pure virtual function for default Lebesgue measure (volume) of a labelled box  <a href="#a4549cc1c30758e673f050e9b30eae67e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#ac5039f4bf8564b17e2c5c3fcbd10ddfd">get_interval_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of interval function calls.  <a href="#ac5039f4bf8564b17e2c5c3fcbd10ddfd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a601c966b9479f0d500f677ab1756347f">get_real_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of real function calls.  <a href="#a601c966b9479f0d500f677ab1756347f"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a6bc557f3f9e39384c3273551d599120c">PeakWeight</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">Rtod</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#adb3a9d40df656e50327d3c40c505fdb6">UniformWeight</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">DomainVolume</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#ae9af30cb2fef292d9eafe3ca42ce4b60">n_interval_calls</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#ab91e3167c8275b9cec6aa913d55a2ea4">n_real_calls</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a> [11]</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>n-dimensional witch's hat density as a function object class </p>

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00025">25</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aab1cf526334362a4902d3a724190f038"></a><!-- doxytag: member="FWitchesHat::FWitchesHat" ref="aab1cf526334362a4902d3a724190f038" args="(int n_dimensions, real PMean, real PRadius, real PWeight, real UWeight, real DomainLimit, bool LogPi, int Prior)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFWitchesHat.shtml#aab1cf526334362a4902d3a724190f038">FWitchesHat::FWitchesHat</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_dimensions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>PMean</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>PRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>PWeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>UWeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>DomainLimit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>LogPi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Prior</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">48</a> of file <a class="el" href="FWitchesHat_8cpp_source.shtml">FWitchesHat.cpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="LevyFobj2D_8cpp_source.shtml#l00023">DomainLimit</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00029">DomainVolume</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00032">h</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00077">LabBox::L</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00052">Fobj::LabDomainList</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00030">n_interval_calls</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00031">n_real_calls</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakRadius</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00058">Fobj::PriorType</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">Rtod</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00190">Fobj::setUsingLogDensity()</a>.</p>
<div class="fragment"><pre class="fragment">:
<a class="code" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a> (PMean), 
<a class="code" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a> (PRadius), 
<a class="code" href="classFWitchesHat.shtml#a6bc557f3f9e39384c3273551d599120c">PeakWeight</a> (PWeight),
<a class="code" href="classFWitchesHat.shtml#adb3a9d40df656e50327d3c40c505fdb6">UniformWeight</a> (UWeight)
{
  <span class="comment">//  witches hat peak is at (PeakMean, PeakMean, ... , PeakMean)</span>
  <a class="code" href="classFWitchesHat.shtml#ae9af30cb2fef292d9eafe3ca42ce4b60">n_interval_calls</a> = 0;
  <a class="code" href="classFWitchesHat.shtml#ab91e3167c8275b9cec6aa913d55a2ea4">n_real_calls</a> = 0;
  <a class="code" href="classFobj.shtml#a809ddeff11d2485c9baef63217cf8ec5" title="set the target scale to natural logarithm">setUsingLogDensity</a> (LogPi);
  <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[0]=0.0; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[1]=1.0; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[2]=0.95493; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[3]=0.95493; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[4]=1.01321; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[5]=1.13986;
  <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[6]=1.35456; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[7]=1.69321; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[8]=2.21745; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[9]=3.03167; <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[10]=4.31345;
  <span class="comment">//{0.0,1.0,0.95493,0.95493,1.01321,1.13986,1.35456,</span>
  <span class="comment">//1.69321,2.21745,3.03167,4.31345};</span>

  ivector domain (1, n_dimensions);
  <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a> Ldomain;
  <a class="code" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">DomainVolume</a> = 1.0;
  <a class="code" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">Rtod</a> = <a class="code" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a>;
  <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a> = Prior;
  <span class="keywordflow">if</span>(<a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>!=0)
  {
    cerr &lt;&lt; <span class="stringliteral">&quot;Only uniform prior defined here... Reset to Uniform Prior\n&quot;</span>;
    <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>=0;
  }
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt;= n_dimensions; i++)
  {
    domain[i] = interval (-<a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>, <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>);
    <a class="code" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">DomainVolume</a> *= 2.0 * <a class="code" href="LevyFobj2D_8cpp.shtml#ae28a2599911ae746bc33211d3ea52aaf">DomainLimit</a>;
    <a class="code" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">Rtod</a> *= <a class="code" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a>;
  }
  Ldomain.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a> = domain;
  Ldomain.<a class="code" href="classLabBox.shtml#a4f0197d8aaeb58676d6c50f0f229a63b" title="specifies the label L of the labeled box LabBox">L</a> = 0;
  <a class="code" href="classFobj.shtml#a7d5297f74590a7bf95aa65d37a72fdff" title="The initial collection of labelled domain boxes -- prior support.">LabDomainList</a>.push_back (Ldomain);

}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ac5039f4bf8564b17e2c5c3fcbd10ddfd"></a><!-- doxytag: member="FWitchesHat::get_interval_calls" ref="ac5039f4bf8564b17e2c5c3fcbd10ddfd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFWitchesHat.shtml#ac5039f4bf8564b17e2c5c3fcbd10ddfd">FWitchesHat::get_interval_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of interval function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a541c0edbb08855d1e3cdbb45b0aa26af">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00042">42</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>References <a class="el" href="FWitchesHat_8hpp_source.shtml#l00030">n_interval_calls</a>.</p>
<div class="fragment"><pre class="fragment">{ <span class="keywordflow">return</span> <a class="code" href="classFWitchesHat.shtml#ae9af30cb2fef292d9eafe3ca42ce4b60">n_interval_calls</a>; }
</pre></div>
</div>
</div>
<a class="anchor" id="a601c966b9479f0d500f677ab1756347f"></a><!-- doxytag: member="FWitchesHat::get_real_calls" ref="a601c966b9479f0d500f677ab1756347f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFWitchesHat.shtml#a601c966b9479f0d500f677ab1756347f">FWitchesHat::get_real_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of real function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a63df2521571faeb43663613a9a4611e7">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00043">43</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>References <a class="el" href="FWitchesHat_8hpp_source.shtml#l00031">n_real_calls</a>.</p>
<div class="fragment"><pre class="fragment">{ <span class="keywordflow">return</span> <a class="code" href="classFWitchesHat.shtml#ab91e3167c8275b9cec6aa913d55a2ea4">n_real_calls</a>; }
</pre></div>
</div>
</div>
<a class="anchor" id="a4549cc1c30758e673f050e9b30eae67e"></a><!-- doxytag: member="FWitchesHat::LabBoxVolume" ref="a4549cc1c30758e673f050e9b30eae67e" args="(const LabBox &amp;LB)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual real <a class="el" href="classFWitchesHat.shtml#a4549cc1c30758e673f050e9b30eae67e">FWitchesHat::LabBoxVolume</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a defined pure virtual function for default Lebesgue measure (volume) of a labelled box </p>
<p>get the default volume (Lebesgue) of a labeled box</p>
<p>derived classes inherit interface and default behavior see [Item 34,P.166, Meyers, Effective C++]</p>
<p>an inline definition of the pure virtual function for default Lebesgue measure (volume) of a labeled box </p>

<p>Implements <a class="el" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00041">41</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{<span class="keywordflow">return</span> <a class="code" href="classFWitchesHat.shtml#a4549cc1c30758e673f050e9b30eae67e" title="a defined pure virtual function for default Lebesgue measure (volume) of a labelled box...">Fobj::LabBoxVolume</a>(LB);}
</pre></div>
</div>
</div>
<a class="anchor" id="a11734772d7dea57df5ff72ebbfd3e272"></a><!-- doxytag: member="FWitchesHat::operator()" ref="a11734772d7dea57df5ff72ebbfd3e272" args="(const LabBox &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval FWitchesHat::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>
<p>Derived classes inherit interface only see [Item 34,P.162, Meyers, Effective C++] </p>

<p>Implements <a class="el" href="classFobj.shtml#acf5ccd1fd7b302c8a1c77081b606a6ad">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">91</a> of file <a class="el" href="FWitchesHat_8cpp_source.shtml">FWitchesHat.cpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00029">DomainVolume</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00032">h</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00030">n_interval_calls</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakMean</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakRadius</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakWeight</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">Rtod</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00592">taylor::sqr()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00678">taylor::sqrt()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00028">UniformWeight</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFWitchesHat.shtml#ae9af30cb2fef292d9eafe3ca42ce4b60">n_interval_calls</a>++;
  <span class="keywordtype">int</span> i, a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (X.Box), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (X.Box);
  <span class="keywordtype">int</span> ndim = 1 + z - a;
  <span class="keywordflow">if</span> (ndim &gt; 10)
  {
    cout &lt;&lt; <span class="stringliteral">&quot;&gt; 10 dimensions. exiting. &quot;</span> &lt;&lt; endl;
    exit (EXIT_FAILURE);
  }
  <span class="comment">//   real DomainVolume = (2.0*DOMAINLIMIT);</span>
  interval r = <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (X.Box[a] - <a class="code" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a>);
  <span class="keywordflow">for</span> (i = a + 1; i &lt;= z; i++)
  {
    r += <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (X.Box[i] - <a class="code" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a>);
    <span class="comment">//  DomainVolume *= (2.0*DOMAINLIMIT);</span>
  }
  r = <a class="code" href="namespacetaylor.shtml#af90786d46d07cc1e02c6011fee55f165">sqrt</a> (r);
  interval result = <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[ndim] * (<a class="code" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a> - r) / <a class="code" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">Rtod</a>;

  <span class="keywordflow">if</span> (Sup (result) &lt; 0.0)
    Sup (result) = 0.0;
  <span class="keywordflow">if</span> (Inf (result) &lt; 0.0)
    Inf (result) = 0.0;
                    <span class="comment">// mixture of uniform and wh peak</span>
  result = <a class="code" href="classFWitchesHat.shtml#adb3a9d40df656e50327d3c40c505fdb6">UniformWeight</a> / <a class="code" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">DomainVolume</a> + <a class="code" href="classFWitchesHat.shtml#a6bc557f3f9e39384c3273551d599120c">PeakWeight</a> * result;
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a> (result) : result;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a027d78c3e9e90da19370cb50d8b43b46"></a><!-- doxytag: member="FWitchesHat::operator()" ref="a027d78c3e9e90da19370cb50d8b43b46" args="(const LabPnt &amp;X) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real FWitchesHat::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;&#160;</td>
          <td class="paramname"><em>LP</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>

<p>Implements <a class="el" href="classFobj.shtml#a7e89aa4918cf8e40683dde607257d1ee">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FWitchesHat_8cpp_source.shtml#l00122">122</a> of file <a class="el" href="FWitchesHat_8cpp_source.shtml">FWitchesHat.cpp</a>.</p>

<p>References <a class="el" href="FWitchesHat_8hpp_source.shtml#l00029">DomainVolume</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00032">h</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00031">n_real_calls</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakMean</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakRadius</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">PeakWeight</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00033">LabPnt::Pnt</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">Rtod</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00592">taylor::sqr()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00678">taylor::sqrt()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00028">UniformWeight</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFWitchesHat.shtml#ab91e3167c8275b9cec6aa913d55a2ea4">n_real_calls</a>++;
  <span class="keywordtype">int</span> i, a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (X.Pnt), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (X.Pnt);
  <span class="keywordtype">int</span> ndim = 1 + z - a;
  <span class="keywordflow">if</span> (ndim &gt; 10)
  {
    cout &lt;&lt; <span class="stringliteral">&quot;&gt; 10 dimensions. exiting. &quot;</span> &lt;&lt; endl;
    exit (EXIT_FAILURE);
  }
  <span class="comment">//  real DomainVolume = (2.0*DOMAINLIMIT);</span>
  real r = <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (X.Pnt[a] - <a class="code" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a>);
  <span class="keywordflow">for</span> (i = a + 1; i &lt;= z; i++)
  {
    r += <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (X.Pnt[i] - <a class="code" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">PeakMean</a>);
    <span class="comment">//  DomainVolume *= (2.0*DOMAINLIMIT);</span>
  }
  r = <a class="code" href="namespacetaylor.shtml#af90786d46d07cc1e02c6011fee55f165">sqrt</a> (r);
  real result = <a class="code" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">h</a>[ndim] * (<a class="code" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">PeakRadius</a> - r) / <a class="code" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">Rtod</a>;

  <span class="keywordflow">if</span> (result &lt; 0.0)
    result = 0.0;
  <span class="comment">// if(result &gt; 0.0) </span>
  <span class="comment">//   cout &lt;&lt; &quot;Pnt: &quot; &lt;&lt; X.Pnt &lt;&lt; &quot;  r: &quot;  &lt;&lt; r &lt;&lt; &quot;  peakhgt: &quot; &lt;&lt; result </span>
  <span class="comment">//        &lt;&lt; &quot;  Rtod: &quot; &lt;&lt; Rtod &lt;&lt; endl;</span>
  
  <span class="comment">// mixture of uniform and wh peak</span>
  result = <a class="code" href="classFWitchesHat.shtml#adb3a9d40df656e50327d3c40c505fdb6">UniformWeight</a> / <a class="code" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">DomainVolume</a> + <a class="code" href="classFWitchesHat.shtml#a6bc557f3f9e39384c3273551d599120c">PeakWeight</a> * result;
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a> (result) : result;
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a54f305164476a0d3f746be9bf6c48bb9"></a><!-- doxytag: member="FWitchesHat::DomainVolume" ref="a54f305164476a0d3f746be9bf6c48bb9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#a54f305164476a0d3f746be9bf6c48bb9">FWitchesHat::DomainVolume</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00029">29</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a08793da5b6fee108f85a70f9eaf67e65"></a><!-- doxytag: member="FWitchesHat::h" ref="a08793da5b6fee108f85a70f9eaf67e65" args="[11]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#a08793da5b6fee108f85a70f9eaf67e65">FWitchesHat::h</a>[11]<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00032">32</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="ae9af30cb2fef292d9eafe3ca42ce4b60"></a><!-- doxytag: member="FWitchesHat::n_interval_calls" ref="ae9af30cb2fef292d9eafe3ca42ce4b60" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFWitchesHat.shtml#ae9af30cb2fef292d9eafe3ca42ce4b60">FWitchesHat::n_interval_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00030">30</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00042">get_interval_calls()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="ab91e3167c8275b9cec6aa913d55a2ea4"></a><!-- doxytag: member="FWitchesHat::n_real_calls" ref="ab91e3167c8275b9cec6aa913d55a2ea4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFWitchesHat.shtml#ab91e3167c8275b9cec6aa913d55a2ea4">FWitchesHat::n_real_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00031">31</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, <a class="el" href="FWitchesHat_8hpp_source.shtml#l00043">get_real_calls()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00122">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="aad2c11957a2edf796a2728f2b0bf838e"></a><!-- doxytag: member="FWitchesHat::PeakMean" ref="aad2c11957a2edf796a2728f2b0bf838e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#aad2c11957a2edf796a2728f2b0bf838e">FWitchesHat::PeakMean</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">27</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a94abd4eea4b5e4623446a2688bd8c849"></a><!-- doxytag: member="FWitchesHat::PeakRadius" ref="a94abd4eea4b5e4623446a2688bd8c849" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#a94abd4eea4b5e4623446a2688bd8c849">FWitchesHat::PeakRadius</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">27</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a6bc557f3f9e39384c3273551d599120c"></a><!-- doxytag: member="FWitchesHat::PeakWeight" ref="a6bc557f3f9e39384c3273551d599120c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#a6bc557f3f9e39384c3273551d599120c">FWitchesHat::PeakWeight</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">27</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="aadb3c71d235e5857a08fccb5b6a1ffef"></a><!-- doxytag: member="FWitchesHat::Rtod" ref="aadb3c71d235e5857a08fccb5b6a1ffef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#aadb3c71d235e5857a08fccb5b6a1ffef">FWitchesHat::Rtod</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00027">27</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00048">FWitchesHat()</a>, and <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="adb3a9d40df656e50327d3c40c505fdb6"></a><!-- doxytag: member="FWitchesHat::UniformWeight" ref="adb3a9d40df656e50327d3c40c505fdb6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFWitchesHat.shtml#adb3a9d40df656e50327d3c40c505fdb6">FWitchesHat::UniformWeight</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FWitchesHat_8hpp_source.shtml#l00028">28</a> of file <a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a>.</p>

<p>Referenced by <a class="el" href="FWitchesHat_8cpp_source.shtml#l00091">operator()()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="FWitchesHat_8hpp_source.shtml">FWitchesHat.hpp</a></li>
<li><a class="el" href="FWitchesHat_8cpp_source.shtml">FWitchesHat.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classFWitchesHat.shtml">FWitchesHat</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:25 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
