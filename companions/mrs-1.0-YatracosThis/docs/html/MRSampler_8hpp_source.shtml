<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: MRSampler.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('MRSampler_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">MRSampler.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="MRSampler_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2005, 2006, 2007, 2008, 2009 Raazesh Sainudiin and Thomas York</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00009"></a>00009 <span class="comment"> * your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00026"></a>00026 <span class="preprocessor">#ifndef __MRSAMPLER_HPP__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#define __MRSAMPLER_HPP__</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00036"></a><a class="code" href="classMRSampler.shtml">00036</a> <span class="keyword">class </span><a class="code" href="classMRSampler.shtml" title="The Moore rejection sampler class for trans-dimensional targets over labeled metric spaces...">MRSampler</a>
<a name="l00037"></a>00037 { 
<a name="l00038"></a>00038   <span class="keyword">public</span>:
<a name="l00040"></a>00040     <a class="code" href="classMRSampler.shtml#a6fc8464ae6da9a1721ff3f437e03d8ef" title="Initialised constructor.">MRSampler</a> (<a class="code" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> &amp; <a class="code" href="errorfunc_8cpp.shtml#aacb77b1211a6ca2e2beff1811cf9ecf4">f</a>, <span class="keywordtype">int</span> max_n_boxes, <span class="keywordtype">double</span> Alb, 
<a name="l00041"></a>00041                <span class="keywordtype">unsigned</span> seed = gsl_rng_default_seed, <span class="keywordtype">bool</span> use_f_scale = <span class="keyword">true</span>);
<a name="l00042"></a>00042   
<a name="l00044"></a>00044     <a class="code" href="classMRSampler.shtml#ab7fdfefd1123153f759ae4ceb775a10a" title="Destructor.">~MRSampler</a> ();
<a name="l00045"></a>00045     
<a name="l00047"></a>00047     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#addd59ad1e400adae3c46b562c7ceb80d" title="Return lower bound on the acceptance prob.">getPALB</a> ();
<a name="l00048"></a>00048     
<a name="l00052"></a>00052     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a975802b28786372a0b1ee461184d3b23" title="Do further partitioning until acc. prob. lower bound &gt; Alb, then setup pdf.">Refine</a> (<span class="keywordtype">double</span> Alb);
<a name="l00053"></a>00053     
<a name="l00057"></a>00057     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#ab6456ed49e2b5a903035ae7ef32cc5f2" title="Refine partition by bisections until Desired_N_boxes many boxes is reached, then setup pdf...">RefineUntil</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Desired_N_boxes);
<a name="l00058"></a>00058     
<a name="l00060"></a>00060     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a975802b28786372a0b1ee461184d3b23" title="Do further partitioning until acc. prob. lower bound &gt; Alb, then setup pdf.">Refine</a> (<span class="keywordtype">int</span> Nbisect);
<a name="l00061"></a>00061     
<a name="l00063"></a>00063     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#a30f5c5489a08545226b462ace92dc321" title="Return the number of boxes in RangeDomainSet.">get_n_boxes</a> ();
<a name="l00064"></a>00064     
<a name="l00068"></a>00068     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a92103320447370feb1f9452915534a91" title="Print labeled boxes in domain partition DomainParts [C-XSC output format].">Print_Domain_Partition</a> (std::ostream&amp; out);
<a name="l00069"></a>00069     
<a name="l00073"></a>00073     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a7c1905d15eef55fd405cf6e03550f6c1" title="Print labeled boxes in domain partition DomainParts [naive TAB-delimited numeric only format]...">Output_Domain_Partition</a> (std::ostream&amp; out);
<a name="l00074"></a>00074 
<a name="l00076"></a>00076     std::ostream&amp; <a class="code" href="classMRSampler.shtml#a7142c1478e259ec85354407fccfbfa78" title="Print the RangeDomainSet in tab-delimited numeric only format.">MRSoutput</a>(std::ostream &amp;os, <span class="keyword">const</span> <span class="keywordtype">double</span> eps = 0) <span class="keyword">const</span>;
<a name="l00077"></a>00077 
<a name="l00079"></a>00079     <a class="code" href="classLabPnt.shtml" title="A labeled point class.">LabPnt</a> <a class="code" href="classMRSampler.shtml#a3ab6aa3b0bb466c67c69db97e2dad5f2" title="Return one sample of labeled point via rejection sampling, if possible.">RejectionSampleOnce</a> (<span class="keywordtype">int</span> &amp;tries);
<a name="l00080"></a>00080     
<a name="l00086"></a>00086     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#aac7c2e726a813ad155151c99cbdb7f12" title="Draw nRS many samples of labeled points via rejection sampling, if possible.">RejectionSampleMany</a> (<span class="keywordtype">int</span> nRS, <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> &amp; theSample);
<a name="l00087"></a>00087     
<a name="l00089"></a>00089     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a1e1e42a57421caa0b13b194372d0b067" title="Importance sampling with Quasi random numbers -- [Ignore: experimental].">ImportanceSampleManyQuasi</a> (<span class="keywordtype">int</span> NSamples, <span class="keywordtype">bool</span> residual,
<a name="l00090"></a>00090       <a class="code" href="classISSample.shtml" title="A class for the status of an Importance Sampler.">ISSample</a> &amp; theSample);
<a name="l00091"></a>00091     
<a name="l00093"></a>00093     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a4fc816422109d41053f1171346463b7d" title="Importance sampling with Pseudo/Quasi random numbers.">ImportanceSampleMany</a> (<span class="keywordtype">int</span> NSamples, <span class="keywordtype">bool</span> residual, <span class="keywordtype">bool</span> pseudoRNG,
<a name="l00094"></a>00094       <a class="code" href="classISSample.shtml" title="A class for the status of an Importance Sampler.">ISSample</a> &amp; theSample);
<a name="l00095"></a>00095     
<a name="l00097"></a><a class="code" href="classMRSampler.shtml#a73999a2d6df8b33ddd459b6bcf9696f9">00097</a>     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a73999a2d6df8b33ddd459b6bcf9696f9" title="Importance sampling with Pseudo random numbers.">ImportanceSampleManyPseudo</a> (<span class="keywordtype">int</span> NSamples, <span class="keywordtype">bool</span> residual,
<a name="l00098"></a>00098       <a class="code" href="classISSample.shtml" title="A class for the status of an Importance Sampler.">ISSample</a> &amp; theSample)
<a name="l00099"></a>00099     {
<a name="l00100"></a>00100       <a class="code" href="classMRSampler.shtml#a4fc816422109d41053f1171346463b7d" title="Importance sampling with Pseudo/Quasi random numbers.">ImportanceSampleMany</a> (NSamples, residual, <span class="keyword">true</span>, theSample);
<a name="l00101"></a>00101     }
<a name="l00102"></a>00102     
<a name="l00108"></a>00108     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a25d99bdee1a715fb2a8e2a8068b890db">PrintBoxes</a> (<span class="keywordtype">int</span> Nprint);
<a name="l00109"></a>00109     
<a name="l00110"></a>00110     
<a name="l00111"></a>00111     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a92b7d631e838539d7c9dcd047bd2936c">getIU</a> ();
<a name="l00112"></a>00112     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#aaf6497221623367c28cd9054eb52cbba">getIL</a> ();
<a name="l00113"></a><a class="code" href="classMRSampler.shtml#a8a056b8e90fb8f72ff3923dca3257384">00113</a>     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a8a056b8e90fb8f72ff3923dca3257384">get_unscaled_IU</a> ()
<a name="l00114"></a>00114     {
<a name="l00115"></a>00115       <span class="keywordflow">return</span> _double (Sup (<a class="code" href="classMRSampler.shtml#ada8a56adf645018f986090ca485049f5">Integral</a>));
<a name="l00116"></a>00116     }
<a name="l00117"></a>00117     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a6d1a6fd3218a62ac5e77abe2a00ac84a">getIUminusL</a> ();
<a name="l00118"></a>00118     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#ab663935171c58ac98f0eeee73c02cbc6">getUmax</a> ();
<a name="l00119"></a>00119     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a71c9e4432504b5dcb9591265c4cfba50">getPAest</a> ();
<a name="l00120"></a>00120     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a37146ff923183a8563e57191d3e6bfa4">get_wsum</a> ();
<a name="l00121"></a>00121     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#a281cb5fb693559dcbd4f90e7d5f37d3e">get_nsum</a> ();
<a name="l00122"></a>00122     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#a85b66f54b156a0a742b48afcf2997379">get_wmax</a> ();
<a name="l00123"></a>00123     <span class="keywordtype">double</span> <a class="code" href="classMRSampler.shtml#aa2d8b962208940151e182e6b3ccb3874">get_wmin</a> ();
<a name="l00124"></a>00124     <span class="comment">// double get_f_scale(){ return _double(f_scale); }</span>
<a name="l00125"></a>00125     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a973099a9a64b6e447b196e8fecc121da" title="update Integral using present partition">updateIntegral</a> ();
<a name="l00126"></a>00126     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a7e98b9c2e972668a7df1b1b4853bef6e" title="Updating the upper and lower bounds for the global maximum of target F.">updateUmax</a> ();
<a name="l00127"></a><a class="code" href="classMRSampler.shtml#a0302488b026965e8e6c401037a0c9240">00127</a>     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#a0302488b026965e8e6c401037a0c9240">get_n_topologies</a>(){ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code" href="classMRSampler.shtml#a8497e118c2d180ff59884897ff97ff4d" title="The set of unique integer labels in LabDomainList.">DomainLabelSet</a>.size()); }
<a name="l00128"></a>00128 
<a name="l00129"></a><a class="code" href="classMRSampler.shtml#ab5bb18ce86dcf3e6835084e12ad3caff">00129</a>     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#ab5bb18ce86dcf3e6835084e12ad3caff">get_nonresidual_samples</a> ()
<a name="l00130"></a>00130     {
<a name="l00131"></a>00131       <span class="keywordflow">return</span> <a class="code" href="classMRSampler.shtml#a31a44287b73bf986bbddcf67245d3c9c">nonresidual_samples</a>;
<a name="l00132"></a>00132     }
<a name="l00133"></a>00133   <span class="keyword">private</span>:
<a name="l00134"></a>00134     <span class="comment">// private member functions.</span>
<a name="l00135"></a>00135     
<a name="l00136"></a>00136     <a class="code" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a> <a class="code" href="classMRSampler.shtml#a727ae6c7bafcf46f34c320e902cf43fe">getBoxREInfo</a> (<a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a> LBox);
<a name="l00137"></a>00137     
<a name="l00139"></a>00139     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#acea6f64c0aba88187122af49c5949ddc" title="Initialize pseudo and Quasi Random Number Generators in GSL.">InitRNG</a> (<span class="keywordtype">unsigned</span> seed);
<a name="l00140"></a>00140     
<a name="l00141"></a>00141     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a0de2c0d6196f77662bb11304e3bec13d">FirstBox</a> ();
<a name="l00142"></a>00142     
<a name="l00145"></a>00145     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#ae665da26800e35c295359e0d2dffb489" title="Bisect the box at top of priority queue.">Bisect</a> ();
<a name="l00146"></a>00146     
<a name="l00153"></a>00153     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a68198444d2875642e8ee2cb3f3120419" title="Adaptively partition domain by bisecting the most prioritised labeled box.">AdaptPartition</a> (<span class="keywordtype">double</span> Alb);
<a name="l00154"></a>00154     
<a name="l00155"></a>00155     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a91a20bb1df74b36668d4ea206685246f">SetupPDF</a> ();
<a name="l00156"></a>00156     <span class="comment">// added SetupWalker to separate the gsl_discrete_struct independent </span>
<a name="l00157"></a>00157     <span class="comment">// of SetupPDF to accomodate</span>
<a name="l00158"></a>00158     <span class="comment">// the number_of_samples-dependent residual sampling scheme</span>
<a name="l00159"></a>00159     <span class="keywordtype">void</span> <a class="code" href="classMRSampler.shtml#a4898e0225312caca6bdc53d034b8cd2a">SetupWalker</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> number_of_samples);
<a name="l00160"></a>00160     <span class="comment">// private data members</span>
<a name="l00161"></a><a class="code" href="classMRSampler.shtml#ab836cfbff1570a96b8af9c384226edfc">00161</a>     <a class="code" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> &amp; <a class="code" href="classMRSampler.shtml#ab836cfbff1570a96b8af9c384226edfc">F</a>;
<a name="l00162"></a>00162 
<a name="l00163"></a><a class="code" href="classMRSampler.shtml#ab3c9a0e232b8145574c28989b9d25791">00163</a>     vector &lt; LabBox &gt; <a class="code" href="classMRSampler.shtml#ab3c9a0e232b8145574c28989b9d25791">Domain</a>;
<a name="l00165"></a><a class="code" href="classMRSampler.shtml#a8497e118c2d180ff59884897ff97ff4d">00165</a>     vector&lt;int&gt; <a class="code" href="classMRSampler.shtml#a8497e118c2d180ff59884897ff97ff4d" title="The set of unique integer labels in LabDomainList.">DomainLabelSet</a>;
<a name="l00166"></a>00166     <span class="comment">// n_dim_max is the max dimensionality of all the labelled domains.</span>
<a name="l00167"></a><a class="code" href="classMRSampler.shtml#afa30f614f3bf25d89990256e2e0c38bd">00167</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#afa30f614f3bf25d89990256e2e0c38bd">n_dim_max</a>;
<a name="l00168"></a>00168     <span class="comment">// vector &lt; unsigned int &gt; n_dimensions;</span>
<a name="l00169"></a>00169     <span class="comment">//  map&lt; int, unsigned int &gt; n_dimensions;</span>
<a name="l00170"></a><a class="code" href="classMRSampler.shtml#aa245fc901ea417e5b19f3e26c63cebad">00170</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#aa245fc901ea417e5b19f3e26c63cebad">topologies</a>;
<a name="l00171"></a><a class="code" href="classMRSampler.shtml#adf95f77ac86c63eef71474204ac28efc">00171</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#adf95f77ac86c63eef71474204ac28efc">Max_n_boxes</a>;
<a name="l00172"></a>00172     <span class="comment">// unsigned int Number_Of_Samples;</span>
<a name="l00173"></a><a class="code" href="classMRSampler.shtml#a31a44287b73bf986bbddcf67245d3c9c">00173</a>     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#a31a44287b73bf986bbddcf67245d3c9c">nonresidual_samples</a>;
<a name="l00174"></a><a class="code" href="classMRSampler.shtml#ada8a56adf645018f986090ca485049f5">00174</a>     interval <a class="code" href="classMRSampler.shtml#ada8a56adf645018f986090ca485049f5">Integral</a>;
<a name="l00175"></a>00175 
<a name="l00176"></a><a class="code" href="classMRSampler.shtml#aea43aaf9d80cae23dc971ab12d706ef8">00176</a>     vector &lt; LabBox &gt; <a class="code" href="classMRSampler.shtml#aea43aaf9d80cae23dc971ab12d706ef8">DomainParts</a>;
<a name="l00177"></a><a class="code" href="classMRSampler.shtml#ae15d963eb51af7923bdb0dc4a1784208">00177</a>     rvector <a class="code" href="classMRSampler.shtml#ae15d963eb51af7923bdb0dc4a1784208">UBox</a>;   <span class="comment">// Sup of range enclosure of f  (pi or ln(pi)) in box</span>
<a name="l00178"></a><a class="code" href="classMRSampler.shtml#a541ae11d9bfc46da67065796901740a4">00178</a>     rvector <a class="code" href="classMRSampler.shtml#a541ae11d9bfc46da67065796901740a4">LoBox</a>;  <span class="comment">// Inf of range enclosure of f  (pi or ln(pi)) in box</span>
<a name="l00179"></a>00179 
<a name="l00180"></a><a class="code" href="classMRSampler.shtml#aa569a3c7e50e947daddfe9766e6aa206">00180</a>     real <a class="code" href="classMRSampler.shtml#ad222a996bc96c32c89586628583be8bb">wmin</a>, <a class="code" href="classMRSampler.shtml#af151b4e7e703ba21c87ae895c6b904f4">wmax</a>, <a class="code" href="classMRSampler.shtml#aa569a3c7e50e947daddfe9766e6aa206">wsum</a>;
<a name="l00181"></a><a class="code" href="classMRSampler.shtml#ab82586caa232037dde75eba134f035ae">00181</a>     <span class="keywordtype">int</span> <a class="code" href="classMRSampler.shtml#ab82586caa232037dde75eba134f035ae">nsum</a>;
<a name="l00182"></a>00182     <span class="comment">// Umax is best upper bound to pi or ln(pi) at present; </span>
<a name="l00183"></a>00183     <span class="comment">// Lmax is max of lower bound function (updated every bisection)</span>
<a name="l00184"></a><a class="code" href="classMRSampler.shtml#ac22f171e36cc11caa473d8232e9c0786">00184</a>     real <a class="code" href="classMRSampler.shtml#ac22f171e36cc11caa473d8232e9c0786">Umax</a>, <a class="code" href="classMRSampler.shtml#a977efd8e3ab58d4e88bc647e68460071">Lmax</a>, <a class="code" href="classMRSampler.shtml#a5980112acaced10adc29397c200fa798">fMaxLB</a>;
<a name="l00185"></a>00185 
<a name="l00186"></a><a class="code" href="classMRSampler.shtml#a9c85b485d8d4ed429e23af0e0427cbe8">00186</a>     real <a class="code" href="classMRSampler.shtml#a9c85b485d8d4ed429e23af0e0427cbe8">f_scale</a>;
<a name="l00187"></a>00187                     <span class="comment">// set to true when Umax - fmid_max small enough;</span>
<a name="l00188"></a><a class="code" href="classMRSampler.shtml#aa677251ac24e0083e75a9ba5f4aa02ca">00188</a>     <span class="keywordtype">bool</span> <a class="code" href="classMRSampler.shtml#aa677251ac24e0083e75a9ba5f4aa02ca">f_scaleDone</a>;
<a name="l00189"></a><a class="code" href="classMRSampler.shtml#a64134c93ecebc9f1a53b32c07bc18858">00189</a>     <span class="keywordtype">bool</span> <a class="code" href="classMRSampler.shtml#a64134c93ecebc9f1a53b32c07bc18858">UseFScale</a>;
<a name="l00190"></a><a class="code" href="classMRSampler.shtml#a5f1bfb7fca5ef5a992a9bc812b19bddd">00190</a>     <span class="keywordtype">bool</span> <a class="code" href="classMRSampler.shtml#a5f1bfb7fca5ef5a992a9bc812b19bddd">UsingLogDensity</a>;
<a name="l00191"></a>00191 
<a name="l00192"></a><a class="code" href="classMRSampler.shtml#aa3abc2865eb1f5eed99f3b4017621d04">00192</a>     <span class="keywordtype">bool</span> <a class="code" href="classMRSampler.shtml#aa3abc2865eb1f5eed99f3b4017621d04">own_rng</a>;
<a name="l00193"></a><a class="code" href="classMRSampler.shtml#a83ea740a453f9274eb77909ba0573a97">00193</a>     gsl_rng *<a class="code" href="classMRSampler.shtml#a83ea740a453f9274eb77909ba0573a97">rgsl</a>;
<a name="l00194"></a><a class="code" href="classMRSampler.shtml#a3045790ee467171c7ed5b1a7520457f6">00194</a>     gsl_qrng *<a class="code" href="classMRSampler.shtml#a3045790ee467171c7ed5b1a7520457f6">qrgsl</a>;
<a name="l00195"></a><a class="code" href="classMRSampler.shtml#aeb2b7cd2e8b2459ed444a38b327897fd">00195</a>     gsl_ran_discrete_t *<a class="code" href="classMRSampler.shtml#aeb2b7cd2e8b2459ed444a38b327897fd">gslpdfstruct</a>;
<a name="l00196"></a><a class="code" href="classMRSampler.shtml#a0019552cda42dbc57e0bbf88b661fbce">00196</a>     <span class="keywordtype">double</span> *<a class="code" href="classMRSampler.shtml#a0019552cda42dbc57e0bbf88b661fbce">proposalpmf</a>;
<a name="l00197"></a><a class="code" href="classMRSampler.shtml#adf347c7e241dda4ccd20e8d661da5e72">00197</a>     <span class="keywordtype">double</span> *<a class="code" href="classMRSampler.shtml#adf347c7e241dda4ccd20e8d661da5e72">residual_proposalpmf</a>;
<a name="l00198"></a><a class="code" href="classMRSampler.shtml#ad32ae929145a5d9a1b042aaf4bd34952">00198</a>     <span class="keywordtype">double</span> *<a class="code" href="classMRSampler.shtml#ad32ae929145a5d9a1b042aaf4bd34952">proposalpdf</a>;
<a name="l00199"></a>00199     <span class="comment">// int* nonresiduals;</span>
<a name="l00200"></a><a class="code" href="classMRSampler.shtml#aec967af4872910cd04b49227d843ec66">00200</a>     <a class="code" href="SmallClasses_8hpp.shtml#a620bc30fe4c7a65c0a4cdbaf724bd9e9" title="Sorted associative STL set container for RangedLabBoxes.">RangedLabBoxSet</a> <a class="code" href="classMRSampler.shtml#aec967af4872910cd04b49227d843ec66">RangeDomainSet</a>;
<a name="l00201"></a>00201 };
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 <span class="comment">// non member function for the MRSampler class</span>
<a name="l00204"></a>00204 <span class="comment">// output operatore for MRSampler</span>
<a name="l00205"></a>00205 <span class="comment">// uses MRSoutput public member function</span>
<a name="l00206"></a>00206 std::ostream &amp; <a class="code" href="adaptivehistogram_8cpp.shtml#ae2f172a2081430943222aff00bd4d1e8" title="Output the HistDescription object.">operator&lt;&lt;</a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="classMRSampler.shtml" title="The Moore rejection sampler class for trans-dimensional targets over labeled metric spaces...">MRSampler</a>&amp; mrs);
<a name="l00207"></a>00207 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="MRSampler_8hpp.shtml">MRSampler.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
