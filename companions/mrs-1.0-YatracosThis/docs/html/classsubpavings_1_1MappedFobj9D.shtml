<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: subpavings::MappedFobj9D Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1MappedFobj9D.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">subpavings::MappedFobj9D Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="subpavings::MappedFobj9D" --><!-- doxytag: inherits="subpavings::MappedFobj" -->
<p>An abstract class for target function objects on 10-dimensional real space.  
 <a href="classsubpavings_1_1MappedFobj9D.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="mappedFobj9D_8hpp_source.shtml">mappedFobj9D.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for subpavings::MappedFobj9D:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1MappedFobj9D__inherit__graph.png" border="0" usemap="#subpavings_1_1MappedFobj9D_inherit__map" alt="Inheritance graph"/></div>
<map name="subpavings_1_1MappedFobj9D_inherit__map" id="subpavings_1_1MappedFobj9D_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for subpavings::MappedFobj9D:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1MappedFobj9D__coll__graph.png" border="0" usemap="#subpavings_1_1MappedFobj9D_coll__map" alt="Collaboration graph"/></div>
<map name="subpavings_1_1MappedFobj9D_coll__map" id="subpavings_1_1MappedFobj9D_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classsubpavings_1_1MappedFobj9D-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#a0c9a69f77d14c31397b866582d678989">operator()</a> (const cxsc::ivector &amp;) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a virtual function for interval image of a box  <a href="#a0c9a69f77d14c31397b866582d678989"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#a669736807e7295183f154e2a3a3eff96">operator()</a> (const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;) const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for interval image of an interval pair  <a href="#a669736807e7295183f154e2a3a3eff96"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#afb61ca5bd02d0c1722a8163ec10da8ec">operator()</a> (const cxsc::rvector &amp;) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a virtual function for real image of an rvector  <a href="#afb61ca5bd02d0c1722a8163ec10da8ec"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#a7bf854d96c0308f9c667e6802207c124">operator()</a> (const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;) const =0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for real image of a real pair  <a href="#a7bf854d96c0308f9c667e6802207c124"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#ae6b4df772501834576ace428df64b0ee">imageMid</a> (const cxsc::ivector &amp;) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a virtual function for real image of midpoint of an interval  <a href="#ae6b4df772501834576ace428df64b0ee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#a695343ef72760c3c6d3beea76779d95e">imageMid</a> (const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a virtual function for real image of midpoint of an interval pair  <a href="#a695343ef72760c3c6d3beea76779d95e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#adbf11d42f9a429c912cd83f044e205be">~MappedFobj9D</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#adbf11d42f9a429c912cd83f044e205be"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>An abstract class for target function objects on 10-dimensional real space. </p>
<p>These target functions can be used by MappedSP types. </p>

<p>Definition at line <a class="el" href="mappedFobj9D_8hpp_source.shtml#l00024">24</a> of file <a class="el" href="mappedFobj9D_8hpp_source.shtml">mappedFobj9D.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="adbf11d42f9a429c912cd83f044e205be"></a><!-- doxytag: member="subpavings::MappedFobj9D::~MappedFobj9D" ref="adbf11d42f9a429c912cd83f044e205be" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#adbf11d42f9a429c912cd83f044e205be">subpavings::MappedFobj9D::~MappedFobj9D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

<p>Definition at line <a class="el" href="mappedFobj9D_8hpp_source.shtml#l00061">61</a> of file <a class="el" href="mappedFobj9D_8hpp_source.shtml">mappedFobj9D.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ae6b4df772501834576ace428df64b0ee"></a><!-- doxytag: member="subpavings::MappedFobj9D::imageMid" ref="ae6b4df772501834576ace428df64b0ee" args="(const cxsc::ivector &amp;) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real <a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#ae6b4df772501834576ace428df64b0ee">MappedFobj9D::imageMid</a> </td>
          <td>(</td>
          <td class="paramtype">const cxsc::ivector &amp;&#160;</td>
          <td class="paramname"><em>ivec</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a virtual function for real image of midpoint of an interval </p>

<p>Reimplemented from <a class="el" href="classsubpavings_1_1MappedFobj.shtml#afc045feebc8ad8fc2a84e0532bf0648d">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00043">43</a> of file <a class="el" href="mappedFobj9D_8cpp_source.shtml">mappedFobj9D.cpp</a>.</p>

<p>References <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00015">operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj9D.shtml#a0c9a69f77d14c31397b866582d678989" title="a virtual function for interval image of a box">operator()</a>(
    cxsc::mid(ivec[1]),
    cxsc::mid(ivec[2]),
    cxsc::mid(ivec[3]),
    cxsc::mid(ivec[4]),
    cxsc::mid(ivec[5]),
    cxsc::mid(ivec[6]),
    cxsc::mid(ivec[7]),
    cxsc::mid(ivec[8]),
    cxsc::mid(ivec[9]));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a695343ef72760c3c6d3beea76779d95e"></a><!-- doxytag: member="subpavings::MappedFobj9D::imageMid" ref="a695343ef72760c3c6d3beea76779d95e" args="(const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real <a class="el" href="classsubpavings_1_1MappedFobj9D.shtml#ae6b4df772501834576ace428df64b0ee">MappedFobj9D::imageMid</a> </td>
          <td>(</td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival6</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival7</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival8</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival9</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a virtual function for real image of midpoint of an interval pair </p>

<p>Definition at line <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00057">57</a> of file <a class="el" href="mappedFobj9D_8cpp_source.shtml">mappedFobj9D.cpp</a>.</p>

<p>References <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00015">operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj9D.shtml#a0c9a69f77d14c31397b866582d678989" title="a virtual function for interval image of a box">operator()</a>(
    cxsc::mid(ival1),
    cxsc::mid(ival2),
    cxsc::mid(ival3),
    cxsc::mid(ival4),
    cxsc::mid(ival5),
    cxsc::mid(ival6),
    cxsc::mid(ival7),
    cxsc::mid(ival8),
    cxsc::mid(ival9));
  <span class="comment">/*int ivL = Lb(iv);</span>
<span class="comment">  int ivU = Ub(iv);</span>
<span class="comment">  rvector rv(ivU - ivL +1 );</span>
<span class="comment">  for (int i = ivL; i&lt;=ivU; i++) {</span>
<span class="comment">    rv[i] = mid(iv[i]);</span>
<span class="comment">  }</span>
<span class="comment">  return this-&gt;operator()(rv);</span>
<span class="comment">  */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0c9a69f77d14c31397b866582d678989"></a><!-- doxytag: member="subpavings::MappedFobj9D::operator()" ref="a0c9a69f77d14c31397b866582d678989" args="(const cxsc::ivector &amp;) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::interval MappedFobj9D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::ivector &amp;&#160;</td>
          <td class="paramname"><em>ivec</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a virtual function for interval image of a box </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj.shtml#aad44e53cb112ea94a970a9bf3888fa6b">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00015">15</a> of file <a class="el" href="mappedFobj9D_8cpp_source.shtml">mappedFobj9D.cpp</a>.</p>

<p>Referenced by <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00043">imageMid()</a>, and <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00029">operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj9D.shtml#a0c9a69f77d14c31397b866582d678989" title="a virtual function for interval image of a box">operator()</a>(
    ivec[1],
    ivec[2],
    ivec[3],
    ivec[4],
    ivec[5],
    ivec[6],
    ivec[7],
    ivec[8],
    ivec[9]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a669736807e7295183f154e2a3a3eff96"></a><!-- doxytag: member="subpavings::MappedFobj9D::operator()" ref="a669736807e7295183f154e2a3a3eff96" args="(const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;, const cxsc::interval &amp;) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual cxsc::interval subpavings::MappedFobj9D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for interval image of an interval pair </p>

<p>Implemented in <a class="el" href="classGaussianFobj9D.shtml#a7ccadd3c4d58fb52fa86ce4d709467e2">GaussianFobj9D</a>.</p>

</div>
</div>
<a class="anchor" id="afb61ca5bd02d0c1722a8163ec10da8ec"></a><!-- doxytag: member="subpavings::MappedFobj9D::operator()" ref="afb61ca5bd02d0c1722a8163ec10da8ec" args="(const cxsc::rvector &amp;) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cxsc::real MappedFobj9D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::rvector &amp;&#160;</td>
          <td class="paramname"><em>rv</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a virtual function for real image of an rvector </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj.shtml#aed79714dcf7fb4eb54d0488428909291">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00029">29</a> of file <a class="el" href="mappedFobj9D_8cpp_source.shtml">mappedFobj9D.cpp</a>.</p>

<p>References <a class="el" href="mappedFobj9D_8cpp_source.shtml#l00015">operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj9D.shtml#a0c9a69f77d14c31397b866582d678989" title="a virtual function for interval image of a box">operator()</a>(
    rv[1],
    rv[2],
    rv[3],
    rv[4],
    rv[5],
    rv[6],
    rv[7],
    rv[8],
    rv[9]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7bf854d96c0308f9c667e6802207c124"></a><!-- doxytag: member="subpavings::MappedFobj9D::operator()" ref="a7bf854d96c0308f9c667e6802207c124" args="(const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;, const cxsc::real &amp;) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual cxsc::real subpavings::MappedFobj9D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for real image of a real pair </p>

<p>Implemented in <a class="el" href="classGaussianFobj9D.shtml#a8342007dc63e0cd461aba33dbea2f62e">GaussianFobj9D</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="mappedFobj9D_8hpp_source.shtml">mappedFobj9D.hpp</a></li>
<li><a class="el" href="mappedFobj9D_8cpp_source.shtml">mappedFobj9D.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespacesubpavings.shtml">subpavings</a>      </li>
      <li class="navelem"><a class="el" href="classsubpavings_1_1MappedFobj9D.shtml">MappedFobj9D</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:38 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
