<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: Vec Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classVec.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">Vec Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="Vec" -->
<p><code>#include &lt;<a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>&gt;</code></p>

<p><a href="classVec-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187">Vec</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">no argument constructor  <a href="#aefd6dd5ca241f55cdc5548e4c02dc187"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a857ab87f43484ae8581f021bc2dea0eb">Vec</a> (double uu, double vv, double ww)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">parameterised constructor  <a href="#a857ab87f43484ae8581f021bc2dea0eb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ac252c18437696a2fda6b7427116741a9">Vec</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;other)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#ac252c18437696a2fda6b7427116741a9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a2432e72a4c830d7ae40d36fe843f8fa0">operator=</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#aa5147cd7b8bbfde4d9cfe50c5ef06d0e">operator+=</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a5f46f2a53419e8c985511601643f87ad">operator+</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#adce31c56c9f71357dfea84f44e461d0c">operator-=</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ae7a06f3161cbc8921dace94a0ecb0bfb">operator-</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a92804048dd925bba0d301dd93a28bd8f">operator*=</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVec.shtml">Vec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ab630eb05f7f84ac9ccbb3fbce5e30e62">operator*</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a490ee432f3b43cce76d59e8d1aa6c66f">operator==</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a6c7f02ea2f4ae67c36f0aeb1ac97d027">operator!=</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a48553775073fb23a0427db27b7d9e5cf">operator&gt;</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ac3708104626d0d23e6643d960185deb7">operator&lt;</a> (const <a class="el" href="classVec.shtml">Vec</a> &amp;rhs) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">print</a> (std::ostream &amp;os) const </td></tr>
<tr><td colspan="2"><h2><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a></td></tr>
<tr><td colspan="2"><h2><a name="friends"></a>
Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVec.shtml#ad50f5245c27f0120ffe35834b5bd28d4">operator&lt;&lt;</a> (std::ostream &amp;<a class="el" href="MappedSPSamplingTest_8cpp.shtml#a91337b8216794ab4371528e4d8f07aa2">output</a>, const <a class="el" href="classVec.shtml">Vec</a> &amp;c)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="Vec_8hpp_source.shtml#l00012">12</a> of file <a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aefd6dd5ca241f55cdc5548e4c02dc187"></a><!-- doxytag: member="Vec::Vec" ref="aefd6dd5ca241f55cdc5548e4c02dc187" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187">Vec::Vec</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>no argument constructor </p>

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00026">26</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00089">operator*()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00057">operator+()</a>, and <a class="el" href="Vec_8cpp_source.shtml#l00073">operator-()</a>.</p>
<div class="fragment"><pre class="fragment">: <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>(0.0), <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> (0.0), <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> (0.0) {}
</pre></div>
</div>
</div>
<a class="anchor" id="a857ab87f43484ae8581f021bc2dea0eb"></a><!-- doxytag: member="Vec::Vec" ref="a857ab87f43484ae8581f021bc2dea0eb" args="(double uu, double vv, double ww)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187">Vec::Vec</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>uu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>vv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ww</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>parameterised constructor </p>

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00028">28</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>.</p>
<div class="fragment"><pre class="fragment">                : <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>(uu), <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> (vv), <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> (ww)
{
    <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac252c18437696a2fda6b7427116741a9"></a><!-- doxytag: member="Vec::Vec" ref="ac252c18437696a2fda6b7427116741a9" args="(const Vec &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187">Vec::Vec</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>copy constructor </p>

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00034">34</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>
<div class="fragment"><pre class="fragment">                : <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>(other.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>), <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> (other.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>), <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> (other.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>) {}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="af5ed89da3d66bddb87c55c1d9d70baa4"></a><!-- doxytag: member="Vec::normalise" ref="af5ed89da3d66bddb87c55c1d9d70baa4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">Vec::normalise</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00015">15</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00079">operator*=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00047">operator+=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00063">operator-=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00037">operator=()</a>, and <a class="el" href="Vec_8cpp_source.shtml#l00028">Vec()</a>.</p>
<div class="fragment"><pre class="fragment">{

    <span class="keywordtype">double</span> length = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>*<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>*<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>*<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>, 0.5);
    <span class="keywordflow">if</span> (length &gt; 0.0) {
        <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> /= length;
        <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> /= length;
        <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> /= length;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6c7f02ea2f4ae67c36f0aeb1ac97d027"></a><!-- doxytag: member="Vec::operator!=" ref="a6c7f02ea2f4ae67c36f0aeb1ac97d027" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Vec::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00100">100</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> (*<span class="keyword">this</span> &lt; rhs) || !(*<span class="keyword">this</span> &gt; rhs);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab630eb05f7f84ac9ccbb3fbce5e30e62"></a><!-- doxytag: member="Vec::operator*" ref="ab630eb05f7f84ac9ccbb3fbce5e30e62" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> Vec::operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00089">89</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00026">Vec()</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) *= rhs;

}
</pre></div>
</div>
</div>
<a class="anchor" id="a92804048dd925bba0d301dd93a28bd8f"></a><!-- doxytag: member="Vec::operator*=" ref="a92804048dd925bba0d301dd93a28bd8f" args="(const Vec &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> &amp; Vec::operator*= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00079">79</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> = <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> * rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> - <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> * rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
    <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> = <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> * rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> - <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> * rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
    <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> = <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> * rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> - <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> * rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
    <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();

    <span class="keywordflow">return</span> *<span class="keyword">this</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5f46f2a53419e8c985511601643f87ad"></a><!-- doxytag: member="Vec::operator+" ref="a5f46f2a53419e8c985511601643f87ad" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> Vec::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00057">57</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00026">Vec()</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) += rhs;

}
</pre></div>
</div>
</div>
<a class="anchor" id="aa5147cd7b8bbfde4d9cfe50c5ef06d0e"></a><!-- doxytag: member="Vec::operator+=" ref="aa5147cd7b8bbfde4d9cfe50c5ef06d0e" args="(const Vec &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> &amp; Vec::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00047">47</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> += rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
    <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> += rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
    <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> += rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
    <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();

    <span class="keywordflow">return</span> *<span class="keyword">this</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae7a06f3161cbc8921dace94a0ecb0bfb"></a><!-- doxytag: member="Vec::operator&#45;" ref="ae7a06f3161cbc8921dace94a0ecb0bfb" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> Vec::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00073">73</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00026">Vec()</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) -= rhs;

}
</pre></div>
</div>
</div>
<a class="anchor" id="adce31c56c9f71357dfea84f44e461d0c"></a><!-- doxytag: member="Vec::operator&#45;=" ref="adce31c56c9f71357dfea84f44e461d0c" args="(const Vec &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> &amp; Vec::operator-= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00063">63</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> -= rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
    <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> -= rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
    <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> -= rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
    <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();

    <span class="keywordflow">return</span> *<span class="keyword">this</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac3708104626d0d23e6643d960185deb7"></a><!-- doxytag: member="Vec::operator&lt;" ref="ac3708104626d0d23e6643d960185deb7" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Vec::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00111">111</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
     <span class="keywordflow">return</span> ((<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>) &gt; (rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2432e72a4c830d7ae40d36fe843f8fa0"></a><!-- doxytag: member="Vec::operator=" ref="a2432e72a4c830d7ae40d36fe843f8fa0" args="(const Vec &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVec.shtml">Vec</a> &amp; Vec::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00037">37</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> = rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
    <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> = rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
    <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> = rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
    <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();

    <span class="keywordflow">return</span> *<span class="keyword">this</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a490ee432f3b43cce76d59e8d1aa6c66f"></a><!-- doxytag: member="Vec::operator==" ref="a490ee432f3b43cce76d59e8d1aa6c66f" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Vec::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00095">95</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> !(*this &lt; rhs) &amp;&amp; !(*this &gt; rhs);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a48553775073fb23a0427db27b7d9e5cf"></a><!-- doxytag: member="Vec::operator&gt;" ref="a48553775073fb23a0427db27b7d9e5cf" args="(const Vec &amp;rhs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Vec::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00105">105</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> ((<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>) &lt; (rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>));

}
</pre></div>
</div>
</div>
<a class="anchor" id="ae7b64d21bc832137b2c2bb1e8c30c0b2"></a><!-- doxytag: member="Vec::print" ref="ae7b64d21bc832137b2c2bb1e8c30c0b2" args="(std::ostream &amp;os) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">Vec::print</a> </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00116">116</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>

<p>References <a class="el" href="Vec_8hpp_source.shtml#l00018">u</a>, <a class="el" href="Vec_8hpp_source.shtml#l00019">v</a>, and <a class="el" href="Vec_8hpp_source.shtml#l00020">w</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00125">operator&lt;&lt;()</a>.</p>
<div class="fragment"><pre class="fragment">{

    os &lt;&lt; <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;

}
</pre></div>
</div>
</div>
<hr/><h2>Friends And Related Function Documentation</h2>
<a class="anchor" id="ad50f5245c27f0120ffe35834b5bd28d4"></a><!-- doxytag: member="Vec::operator&lt;&lt;" ref="ad50f5245c27f0120ffe35834b5bd28d4" args="(std::ostream &amp;output, const Vec &amp;c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classVec.shtml">Vec</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [friend]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8cpp_source.shtml#l00125">125</a> of file <a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{

    c.<a class="code" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">print</a>(os);

    <span class="keywordflow">return</span> os;
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a463e55879d386da7c31644446a9aba13"></a><!-- doxytag: member="Vec::u" ref="a463e55879d386da7c31644446a9aba13" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">Vec::u</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8hpp_source.shtml#l00018">18</a> of file <a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00079">operator*=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00047">operator+=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00063">operator-=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00111">operator&lt;()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00037">operator=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00105">operator&gt;()</a>, and <a class="el" href="Vec_8cpp_source.shtml#l00116">print()</a>.</p>

</div>
</div>
<a class="anchor" id="a171bde0822311dc8f9ec69e1e90ba2ff"></a><!-- doxytag: member="Vec::v" ref="a171bde0822311dc8f9ec69e1e90ba2ff" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">Vec::v</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8hpp_source.shtml#l00019">19</a> of file <a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00079">operator*=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00047">operator+=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00063">operator-=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00111">operator&lt;()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00037">operator=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00105">operator&gt;()</a>, and <a class="el" href="Vec_8cpp_source.shtml#l00116">print()</a>.</p>

</div>
</div>
<a class="anchor" id="a4e475b48393d5d8f6e1837e2007454b8"></a><!-- doxytag: member="Vec::w" ref="a4e475b48393d5d8f6e1837e2007454b8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">Vec::w</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="Vec_8hpp_source.shtml#l00020">20</a> of file <a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a>.</p>

<p>Referenced by <a class="el" href="Vec_8cpp_source.shtml#l00015">normalise()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00079">operator*=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00047">operator+=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00063">operator-=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00111">operator&lt;()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00037">operator=()</a>, <a class="el" href="Vec_8cpp_source.shtml#l00105">operator&gt;()</a>, and <a class="el" href="Vec_8cpp_source.shtml#l00116">print()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Vec_8hpp_source.shtml">Vec.hpp</a></li>
<li><a class="el" href="Vec_8cpp_source.shtml">Vec.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classVec.shtml">Vec</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:30 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
