<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: sptools.hpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('sptools_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">sptools.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>General tools for subpavings.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="sptypes_8hpp_source.shtml">sptypes.hpp</a>&quot;</code><br/>
<code>#include &lt;gsl/gsl_rng.h&gt;</code><br/>
</div>
<p><a href="sptools_8hpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml">subpavings</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><p>The namespace subpavings. </p>
<br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ae23d4a36711d5b768cacab3fdb72b609">subpavings::getUniqueFilename</a> (string baseFileName, string suffix=&quot;.txt&quot;)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a unique filename from base and timestamp number.  <a href="#ae23d4a36711d5b768cacab3fdb72b609"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7">subpavings::outputFile</a> (const string &amp;s, const string line, bool append=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a line to a txt file.  <a href="#aa5b5b66715568bc59cafea064eb8b1a7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#afb8564fbbb2536bafcd19a5cc56e6531">subpavings::outputFileStart</a> (const string &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Opening line of a txt log file.  <a href="#afb8564fbbb2536bafcd19a5cc56e6531"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a57aa1d6f86ddd18d459fd36a710ae737">subpavings::outputFile</a> (const std::string &amp;s, RealVec &amp;vals, int i)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a tab delimited list seq of values as a line in log file.  <a href="#a57aa1d6f86ddd18d459fd36a710ae737"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a11f846091a8b802ae4173e061b1b55f2">subpavings::outputFile</a> (const std::string &amp;s, const std::string intro, <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> &amp;vals)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a tab delimited list seq of values as a line in log file.  <a href="#a11f846091a8b802ae4173e061b1b55f2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a577225f9ff8ccb0b27420ff962fc978f">subpavings::outputFile</a> (const std::string &amp;s, std::vector&lt; string &gt; &amp;strings, int i)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a tab delimited list seq of strings as a line in log file.  <a href="#a577225f9ff8ccb0b27420ff962fc978f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a0973b1623e6e12ba060db40d9cceece1">subpavings::parseForGraphDot</a> (string s, string toParse)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse a string to make lines for a dot graph.  <a href="#a0973b1623e6e12ba060db40d9cceece1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#abb4671c14005974aeea8f0dd39600ec6">subpavings::makeDotImage</a> (string s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">make a Dot graph png image given a dot file.  <a href="#abb4671c14005974aeea8f0dd39600ec6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a5928e5a1c7fc26e6df9c5bf9eb4a37a2">subpavings::countLinesInTxt</a> (const string &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Method to count lines in a txt file.  <a href="#a5928e5a1c7fc26e6df9c5bf9eb4a37a2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">IntVec&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a498313e6b9ea0e6fb60d63ea3f2d0128">subpavings::parseSpacings</a> (string line, IntVec &amp;spacings)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">parse a .vtk header line for spacings data.  <a href="#a498313e6b9ea0e6fb60d63ea3f2d0128"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">IntVec&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ab55a3f1bfa1cae218886328f19b2208f">subpavings::getCoordinatesFromVtk</a> (IntVec &amp;Xs, IntVec &amp;Ys, IntVec &amp;Zs, const string &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get coordinates from a .vtk file.  <a href="#ab55a3f1bfa1cae218886328f19b2208f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a19b79319876fc25305936396f24e5a6c">subpavings::volCompare</a> (const ivector &amp;a, const ivector &amp;b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A function for comparing ivectors based on volume.  <a href="#a19b79319876fc25305936396f24e5a6c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ada0daf400b54e571b4f8d83bd32861c5">subpavings::tryExp</a> (real r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Work arround for c-xsc math library for exponentiation of reals.  <a href="#ada0daf400b54e571b4f8d83bd32861c5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">rvector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a6f8c4a15a4428e18b5ef0369782c86ae">subpavings::makeDoubleIntoRvector</a> (const double d)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Make a double into an rvector.  <a href="#a6f8c4a15a4428e18b5ef0369782c86ae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#af62c725dd362922c15d45983e2d8f6cf">subpavings::checkString</a> (const string &amp;s, const int n)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A quick check on a data string: expecting only numbers white space or decimal points.  <a href="#af62c725dd362922c15d45983e2d8f6cf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a4160d2d9f357dddf86d43f70c9bb8063">subpavings::countNumbers</a> (const string &amp;s)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the number of 'blocks' of numbers in a properly formatted string of numbers.  <a href="#a4160d2d9f357dddf86d43f70c9bb8063"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a535c4c5b9e6a042ec418db09ed956cda">subpavings::readOneDimDataFromTxt</a> (RVecData &amp;theData, const string &amp;s, const std::size_t headerlines=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Read in one-dimensional data from a txt file.  <a href="#a535c4c5b9e6a042ec418db09ed956cda"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a7918dddb1a8e32f72835e1e7b4442ca6">subpavings::readRvectorsFromTxt</a> (RVecData &amp;theData, const string &amp;s, const std::size_t headerlines=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Read in rvectors from a txt file.  <a href="#a7918dddb1a8e32f72835e1e7b4442ca6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a211cb10f439ff2bdb92ce92906159792">subpavings::getRvectorsFromRVec</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;data, const <a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;rvec)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get all rvectors from a container of rvectors.  <a href="#a211cb10f439ff2bdb92ce92906159792"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ad2d24521f44422db117d54d6287bc314">subpavings::getSampleRvectorsFromRVec</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;data, gsl_rng *rgsl, size_t samplesize, const <a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;rvec)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a sample of rvectors from an a container.  <a href="#ad2d24521f44422db117d54d6287bc314"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ae988c56fd983d75dd9f60a5ef8f87660">subpavings::getSampleRvectorsFromRSSample</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;data, gsl_rng *rgsl, size_t samplesize, const <a class="el" href="classRSSample.shtml">RSSample</a> &amp;rss, int label)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a sample of rvectors from an <a class="el" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> object.  <a href="#ae988c56fd983d75dd9f60a5ef8f87660"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ad435f1951db3078702d178b718018651">subpavings::getRvectorsFromRSSample</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;data, const <a class="el" href="classRSSample.shtml">RSSample</a> &amp;rss, int label)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get all rvectors from an <a class="el" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> object.  <a href="#ad435f1951db3078702d178b718018651"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ad26b1f7572cd78c11b5f9a423a80a258">subpavings::getRvectorsFromRSSampleForSampling</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;allData, <a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;sampleData, size_t samplesize, const <a class="el" href="classRSSample.shtml">RSSample</a> &amp;rss, int label)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get data from an <a class="el" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> object to take samples from.  <a href="#ad26b1f7572cd78c11b5f9a423a80a258"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a4605f09553766eb8702c7c58b8074cf2">subpavings::getSampleFromContainer</a> (size_t samplesize, gsl_rng *rgsl, const <a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;allData, <a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;sampleData)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a sample from data in a container.  <a href="#a4605f09553766eb8702c7c58b8074cf2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a1e3a19279d328b2178aaac44beaaf2d6">subpavings::pointMassFilter</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;theData, std::map&lt; rvector, size_t, std::less&lt; rvector &gt; &gt; &amp;CountsMap)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Point mass filtering from data in a RVecData container. Takes an RVecData container and sieves through the data to obtain "point mass" data, i.e. data that falls on the same location with precision up to instrument settings or user's definition.  <a href="#a1e3a19279d328b2178aaac44beaaf2d6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#ab434c49dd2b267948d0048075ab0298c">subpavings::labelDataFromFilter</a> (<a class="el" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68">RVecData</a> &amp;theData, <a class="el" href="classRSSample.shtml">RSSample</a> &amp;labData, std::map&lt; rvector, size_t, std::less&lt; rvector &gt; &gt; &amp;CountsMap, std::map&lt; rvector, double, std::less&lt; rvector &gt; &gt; &amp;EMFMap)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Labels an RVecData object and store as an <a class="el" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> object. Takes an RVecData container and its corresponding map to label the points. Point mass data gets label 0 and the rest gets label 1. The labelled data is then stored in an <a class="el" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a> object.  <a href="#ab434c49dd2b267948d0048075ab0298c"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">String representations of collections.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Formatted to have ", " or "," (<em>compact</em> = true) between the elements of the collection.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">vec</td><td>the collection to describe in the output. </td></tr>
    <tr><td class="paramname">compact</td><td>indicator for whether format should be compact. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>string representation of <em>vecints</em>. </dd></dl>
</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesubpavings.shtml#a1c85cfc0ad8721fc6b480d66d51a653d">subpavings::toString</a> (const <a class="el" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e">subpavings::IntVec</a> vec, bool compact=false)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">String representation of an IntVec.  <a href="#a1c85cfc0ad8721fc6b480d66d51a653d"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>General tools for subpavings. </p>

<p>Definition in file <a class="el" href="sptools_8hpp_source.shtml">sptools.hpp</a>.</p>
</div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="sptools_8hpp.shtml">sptools.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:23 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
