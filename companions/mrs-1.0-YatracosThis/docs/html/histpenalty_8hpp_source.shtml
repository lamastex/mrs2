<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: histpenalty.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('histpenalty_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">histpenalty.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="histpenalty_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment">* Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment">*</span>
<a name="l00007"></a>00007 <span class="comment">* mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment">* it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment">* the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment">* your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">* General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">* along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment">*/</span>
<a name="l00021"></a>00021 
<a name="l00026"></a>00026 <span class="preprocessor">#ifndef ___HISTPEN_HPP__</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#define ___HISTPEN_HPP__</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="keywordtype">double</span> <a class="code" href="histpenalty_8hpp.shtml#a1dc9bf6a99daaa6cf7349f16c1e558f5">lCk</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> k);
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="comment">//using namespace std;</span>
<a name="l00032"></a>00032 <span class="comment">//using namespace cxsc;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="keyword">namespace </span>subpavings {
<a name="l00035"></a>00035   
<a name="l00037"></a>00037   <span class="keyword">class </span>AdaptiveHistogram;
<a name="l00038"></a>00038   <span class="keyword">class </span>AdaptiveHistogramValidation;
<a name="l00039"></a>00039   
<a name="l00040"></a>00040   
<a name="l00047"></a><a class="code" href="classsubpavings_1_1PenObj.shtml">00047</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00048"></a>00048   {
<a name="l00049"></a>00049   
<a name="l00050"></a>00050       <span class="keyword">public</span>:
<a name="l00051"></a>00051   
<a name="l00057"></a>00057       <span class="keyword">virtual</span> real <a class="code" href="classsubpavings_1_1PenObj.shtml#a70c7efe90368cd85f0971ef548d678c1" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00058"></a>00058                                   <span class="keywordtype">int</span> deltaLeaf) <span class="keyword">const</span> = 0;
<a name="l00059"></a>00059   };
<a name="l00060"></a>00060   
<a name="l00061"></a>00061   
<a name="l00069"></a>00069   
<a name="l00072"></a><a class="code" href="classsubpavings_1_1PenLeaves.shtml">00072</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenLeaves.shtml" title="Penalty function as number of leaves in histogram.">PenLeaves</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00073"></a>00073   {
<a name="l00074"></a><a class="code" href="classsubpavings_1_1PenLeaves.shtml#ae16bb757e6d5ec3eddfe77d22a8e4b8e">00074</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenLeaves.shtml#ae16bb757e6d5ec3eddfe77d22a8e4b8e">beta</a>;
<a name="l00075"></a>00075   
<a name="l00076"></a>00076       <span class="keyword">public</span>:
<a name="l00077"></a>00077   
<a name="l00078"></a><a class="code" href="classsubpavings_1_1PenLeaves.shtml#ad83ee1278a2039ba43faa98bf763a3c1">00078</a>       <a class="code" href="classsubpavings_1_1PenLeaves.shtml#ad83ee1278a2039ba43faa98bf763a3c1">PenLeaves</a>() : <a class="code" href="classsubpavings_1_1PenLeaves.shtml#ae16bb757e6d5ec3eddfe77d22a8e4b8e">beta</a>(1.0) {}
<a name="l00079"></a><a class="code" href="classsubpavings_1_1PenLeaves.shtml#a4859b114078d536cda235038e65a5933">00079</a>       <a class="code" href="classsubpavings_1_1PenLeaves.shtml#a4859b114078d536cda235038e65a5933">PenLeaves</a>(<span class="keywordtype">double</span> b) : <a class="code" href="classsubpavings_1_1PenLeaves.shtml#ae16bb757e6d5ec3eddfe77d22a8e4b8e">beta</a>(b) {}
<a name="l00080"></a>00080   
<a name="l00081"></a><a class="code" href="classsubpavings_1_1PenLeaves.shtml#a44b8c0386d439fd855c993979dc700b1">00081</a>       real <a class="code" href="classsubpavings_1_1PenLeaves.shtml#a44b8c0386d439fd855c993979dc700b1" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00082"></a>00082       <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00083"></a>00083 <span class="keyword">      </span>{
<a name="l00084"></a>00084           real penalty;
<a name="l00085"></a>00085           penalty = <a class="code" href="classsubpavings_1_1PenLeaves.shtml#ae16bb757e6d5ec3eddfe77d22a8e4b8e">beta</a>*<a class="code" href="namespacesubpavings.shtml#acd777346441d8790899ec09af3b11d61" title="Get the number of leaves of a tree (boxes in the subpaving)">spLeaves</a>(adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#aecbdfe366fa381c0b3f7a7b00447dedb" title="Return a pointer to the SPSnode this manages.">getSubPaving</a>()) + deltaLeaf;
<a name="l00086"></a>00086           <span class="keywordflow">return</span> penalty;
<a name="l00087"></a>00087       }
<a name="l00088"></a>00088   };
<a name="l00089"></a>00089   
<a name="l00092"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml">00092</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenAIC1.shtml" title="Class for penalty function 1 for AIC.">PenAIC1</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00093"></a>00093   {
<a name="l00094"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">00094</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>;
<a name="l00095"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">00095</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">alpha</a>;
<a name="l00096"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#a669d71494e88f57e191d7b07f8dd53fa">00096</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a669d71494e88f57e191d7b07f8dd53fa">r</a>;
<a name="l00097"></a>00097   
<a name="l00098"></a>00098       <span class="keyword">public</span>:
<a name="l00099"></a>00099   
<a name="l00100"></a>00100       <span class="comment">// default constructor has c = 1, alpha = 0.5, r = 2</span>
<a name="l00101"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#af50ef696466df5dd7d0a2af2969f5a34">00101</a>       <a class="code" href="classsubpavings_1_1PenAIC1.shtml#af50ef696466df5dd7d0a2af2969f5a34">PenAIC1</a>() : <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>(1.0), <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">alpha</a> (0.50), <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a669d71494e88f57e191d7b07f8dd53fa">r</a>(2.0) {}
<a name="l00102"></a>00102   
<a name="l00103"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#a127629ff1787f6f756084fd95692dddc">00103</a>       <a class="code" href="classsubpavings_1_1PenAIC1.shtml#af50ef696466df5dd7d0a2af2969f5a34">PenAIC1</a>(<span class="keywordtype">double</span> cc, <span class="keywordtype">double</span> aa, <span class="keywordtype">double</span> rr)
<a name="l00104"></a>00104               : <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>(cc), <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">alpha</a> (aa), <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a669d71494e88f57e191d7b07f8dd53fa">r</a>(rr) {}
<a name="l00105"></a>00105   
<a name="l00106"></a><a class="code" href="classsubpavings_1_1PenAIC1.shtml#a197da85b167c9086bfb90eeab0ec2375">00106</a>       real <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a197da85b167c9086bfb90eeab0ec2375" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00107"></a>00107                                   <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00108"></a>00108 <span class="keyword">      </span>{
<a name="l00109"></a>00109           dotprecision penalty(0.0);
<a name="l00110"></a>00110   
<a name="l00111"></a>00111           <span class="keywordtype">int</span> k = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ae4a71d928009eda0a6332f20fd951e35" title="Gets number of leaf nodes in the root paving.">getRootLeaves</a>() + deltaLeaf - 1; <span class="comment">// leaves-1</span>
<a name="l00112"></a>00112           <span class="keywordtype">double</span> logCatk= <a class="code" href="histpenalty_8hpp.shtml#a1dc9bf6a99daaa6cf7349f16c1e558f5">lCk</a>(k);
<a name="l00113"></a>00113   
<a name="l00114"></a>00114           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>, logCatk); <span class="comment">// pen = c*logCatk</span>
<a name="l00115"></a>00115           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">alpha</a>, k); <span class="comment">// pen = c*logCatk + alpha*k</span>
<a name="l00116"></a>00116           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>*<a class="code" href="classsubpavings_1_1PenAIC1.shtml#a669d71494e88f57e191d7b07f8dd53fa">r</a>, log(k+1.0));
<a name="l00117"></a>00117           <span class="comment">// now pen = c*logCatk + alpha*k + c*r*log(k+1)</span>
<a name="l00118"></a>00118   
<a name="l00119"></a>00119           dotprecision temp(0.0);
<a name="l00120"></a>00120           accumulate(temp, <a class="code" href="classsubpavings_1_1PenAIC1.shtml#a8ee2e73a1cb5a953cd3ec61376a46baf">c</a>*<a class="code" href="classsubpavings_1_1PenAIC1.shtml#a6d32c74620d16440e5e6d91242bb9736">alpha</a>*k, logCatk);
<a name="l00121"></a>00121           accumulate(temp, r, log(k+1.0));
<a name="l00122"></a>00122           <span class="comment">// temp = c*alpha*k*logCatk + r*log(k+1)</span>
<a name="l00123"></a>00123   
<a name="l00124"></a>00124           <span class="keywordflow">return</span> (rnd(penalty) + 2*<a class="code" href="namespacetaylor.shtml#af90786d46d07cc1e02c6011fee55f165">sqrt</a>(rnd(temp)));
<a name="l00125"></a>00125           <span class="comment">// return c*logCatk + alpha*k + c*r*log(k+1)</span>
<a name="l00126"></a>00126           <span class="comment">//                          + 2*sqrt(c*alpha*k*logCatk + r*log(k+1))</span>
<a name="l00127"></a>00127       }
<a name="l00128"></a>00128   };
<a name="l00129"></a>00129   
<a name="l00132"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml">00132</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenAIC2.shtml" title="Class for penalty function 2 for AIC.">PenAIC2</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00133"></a>00133   {
<a name="l00134"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml#ae8ecf3533342ef935f948f0c0ad0d0e3">00134</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC2.shtml#ae8ecf3533342ef935f948f0c0ad0d0e3">c</a>;
<a name="l00135"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml#af9f26869dfdd1bd60470da30fe3d3bf9">00135</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC2.shtml#af9f26869dfdd1bd60470da30fe3d3bf9">alpha</a>;
<a name="l00136"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml#a1be98678a0fc1e824698714fbdc4b679">00136</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC2.shtml#a1be98678a0fc1e824698714fbdc4b679">r</a>;
<a name="l00137"></a>00137   
<a name="l00138"></a>00138       <span class="comment">// default constructor private</span>
<a name="l00139"></a>00139       <a class="code" href="classsubpavings_1_1PenAIC2.shtml#aa3ee29ee43affa38807733d79b4d6555">PenAIC2</a>();
<a name="l00140"></a>00140   
<a name="l00141"></a>00141       <span class="keyword">public</span>:
<a name="l00142"></a>00142   
<a name="l00143"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml#a581cc3e9120ac50e1ef0bf4b8e1d6de4">00143</a>       <a class="code" href="classsubpavings_1_1PenAIC2.shtml#aa3ee29ee43affa38807733d79b4d6555">PenAIC2</a>(<span class="keywordtype">double</span> cc, <span class="keywordtype">double</span> aa, <span class="keywordtype">double</span> rr)
<a name="l00144"></a>00144               : <a class="code" href="classsubpavings_1_1PenAIC2.shtml#ae8ecf3533342ef935f948f0c0ad0d0e3">c</a>(cc), <a class="code" href="classsubpavings_1_1PenAIC2.shtml#af9f26869dfdd1bd60470da30fe3d3bf9">alpha</a> (aa), <a class="code" href="classsubpavings_1_1PenAIC2.shtml#a1be98678a0fc1e824698714fbdc4b679">r</a>(rr) {}
<a name="l00145"></a>00145   
<a name="l00146"></a><a class="code" href="classsubpavings_1_1PenAIC2.shtml#afe8b5949a89a7bf9f4e3e5cd6134ffb0">00146</a>       real <a class="code" href="classsubpavings_1_1PenAIC2.shtml#afe8b5949a89a7bf9f4e3e5cd6134ffb0" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00147"></a>00147                                   <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00148"></a>00148 <span class="keyword">      </span>{
<a name="l00149"></a>00149           dotprecision penalty(0.0);
<a name="l00150"></a>00150           <span class="keywordtype">int</span> k = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ae4a71d928009eda0a6332f20fd951e35" title="Gets number of leaf nodes in the root paving.">getRootLeaves</a>() + deltaLeaf - 1; <span class="comment">// leaves-1</span>
<a name="l00151"></a>00151           <span class="keywordtype">double</span> logCatk= <a class="code" href="histpenalty_8hpp.shtml#a1dc9bf6a99daaa6cf7349f16c1e558f5">lCk</a>(k);
<a name="l00152"></a>00152           <span class="keywordtype">size_t</span> counter = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#a7386f85d1182ae6e3f32766c4a208c11" title="Gets count in the root paving.">getRootCounter</a>(); <span class="comment">// total number points</span>
<a name="l00153"></a>00153           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC2.shtml#ae8ecf3533342ef935f948f0c0ad0d0e3">c</a>, logCatk); <span class="comment">// pen = c*logCatk</span>
<a name="l00154"></a>00154   
<a name="l00155"></a>00155           real s = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ac7f7cb4d5aea17c967afec84e1159f9b" title="Gets the sum of leaf count over volume in root paving.">getRootSumLeafCountOverVol</a>();
<a name="l00156"></a>00156   
<a name="l00157"></a>00157           accumulate(penalty, s/(1.0*counter), <a class="code" href="classsubpavings_1_1PenAIC2.shtml#af9f26869dfdd1bd60470da30fe3d3bf9">alpha</a>);
<a name="l00158"></a>00158           <span class="comment">//now pen = c*logCatk + (alpha/counter)*sum(leaf counts/vols)</span>
<a name="l00159"></a>00159           accumulate(penalty, 2*<a class="code" href="classsubpavings_1_1PenAIC2.shtml#a1be98678a0fc1e824698714fbdc4b679">r</a>, log(k+1));
<a name="l00160"></a>00160           <span class="comment">//now pen = c*logCatk + (alpha/counter)*sum(leaf counts/vols) + 2*r*log(k+1)</span>
<a name="l00161"></a>00161   
<a name="l00162"></a>00162           <span class="keywordflow">return</span> rnd(penalty);
<a name="l00163"></a>00163       }
<a name="l00164"></a>00164   
<a name="l00165"></a>00165   };
<a name="l00166"></a>00166   
<a name="l00171"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml">00171</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenAIC3.shtml" title="Class for penalty function 3 for AIC.">PenAIC3</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00172"></a>00172   {
<a name="l00173"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml#af838fbd8465a2144500c43058c28480d">00173</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC3.shtml#af838fbd8465a2144500c43058c28480d">c</a>;
<a name="l00174"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml#a9a8e54711e178d6fb7c632311739fba7">00174</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a9a8e54711e178d6fb7c632311739fba7">alpha</a>;
<a name="l00175"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml#a39aa74f535a40c4f4611e8fb44d07a96">00175</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a39aa74f535a40c4f4611e8fb44d07a96">r</a>;
<a name="l00176"></a>00176   
<a name="l00177"></a>00177       <span class="comment">// default constructor private</span>
<a name="l00178"></a>00178       <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a129e1d8bfd430e897e81e7a8f76a5d1c">PenAIC3</a>();
<a name="l00179"></a>00179   
<a name="l00180"></a>00180       <span class="keyword">public</span>:
<a name="l00181"></a>00181   
<a name="l00182"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml#acb7df9b142cb25ac50c8ab6129e55ddc">00182</a>       <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a129e1d8bfd430e897e81e7a8f76a5d1c">PenAIC3</a>(<span class="keywordtype">double</span> cc, <span class="keywordtype">double</span> aa, <span class="keywordtype">double</span> rr)
<a name="l00183"></a>00183               : <a class="code" href="classsubpavings_1_1PenAIC3.shtml#af838fbd8465a2144500c43058c28480d">c</a>(cc), <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a9a8e54711e178d6fb7c632311739fba7">alpha</a> (aa), <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a39aa74f535a40c4f4611e8fb44d07a96">r</a>(rr) {}
<a name="l00184"></a>00184   
<a name="l00185"></a><a class="code" href="classsubpavings_1_1PenAIC3.shtml#ae78d7d10ecb8061fd42dbda9bcccb2d4">00185</a>       real <a class="code" href="classsubpavings_1_1PenAIC3.shtml#ae78d7d10ecb8061fd42dbda9bcccb2d4" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00186"></a>00186                                   <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00187"></a>00187 <span class="keyword">      </span>{
<a name="l00188"></a>00188           dotprecision penalty(0.0);
<a name="l00189"></a>00189           <span class="keywordtype">int</span> k = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ae4a71d928009eda0a6332f20fd951e35" title="Gets number of leaf nodes in the root paving.">getRootLeaves</a>() + deltaLeaf - 1; <span class="comment">// leaves-1</span>
<a name="l00190"></a>00190           <span class="keywordtype">double</span> logCatk= <a class="code" href="histpenalty_8hpp.shtml#a1dc9bf6a99daaa6cf7349f16c1e558f5">lCk</a>(k);
<a name="l00191"></a>00191           <span class="keywordtype">size_t</span> counter = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#a7386f85d1182ae6e3f32766c4a208c11" title="Gets count in the root paving.">getRootCounter</a>(); <span class="comment">// total number points</span>
<a name="l00192"></a>00192           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC3.shtml#af838fbd8465a2144500c43058c28480d">c</a>, logCatk); <span class="comment">// pen = c*logCatk</span>
<a name="l00193"></a>00193   
<a name="l00194"></a>00194           real s = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ac7f7cb4d5aea17c967afec84e1159f9b" title="Gets the sum of leaf count over volume in root paving.">getRootSumLeafCountOverVol</a>();
<a name="l00195"></a>00195   
<a name="l00196"></a>00196           accumulate(penalty, s/(1.0*counter), <a class="code" href="classsubpavings_1_1PenAIC3.shtml#a9a8e54711e178d6fb7c632311739fba7">alpha</a>);
<a name="l00197"></a>00197           <span class="comment">//now pen = c*logCatk + (alpha/counter)*sum(leaf counts/vols)</span>
<a name="l00198"></a>00198           accumulate(penalty, 2*<a class="code" href="classsubpavings_1_1PenAIC3.shtml#a39aa74f535a40c4f4611e8fb44d07a96">r</a>, log(k+1));
<a name="l00199"></a>00199           <span class="comment">//now pen = c*logCatk + (alpha/counter)*sum(leaf counts/vols) + 2*r*log(k+1)</span>
<a name="l00200"></a>00200   
<a name="l00201"></a>00201           <span class="keywordflow">return</span> rnd(penalty);
<a name="l00202"></a>00202       }
<a name="l00203"></a>00203   };
<a name="l00204"></a>00204   
<a name="l00211"></a><a class="code" href="classsubpavings_1_1PenAIC4.shtml">00211</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenAIC4.shtml" title="Class for penalty function 4 for AIC.">PenAIC4</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00212"></a>00212   {
<a name="l00213"></a><a class="code" href="classsubpavings_1_1PenAIC4.shtml#a4bc616a39893c9f5bc3c2b3123aa6d1f">00213</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC4.shtml#a4bc616a39893c9f5bc3c2b3123aa6d1f">c</a>;
<a name="l00214"></a>00214   
<a name="l00215"></a>00215       <span class="comment">// default constructor private</span>
<a name="l00216"></a>00216       <a class="code" href="classsubpavings_1_1PenAIC4.shtml#aaaab4eeda6d4bf68577fbb9df32cfc17">PenAIC4</a>();
<a name="l00217"></a>00217   
<a name="l00218"></a>00218       <span class="keyword">public</span>:
<a name="l00219"></a>00219   
<a name="l00220"></a><a class="code" href="classsubpavings_1_1PenAIC4.shtml#aacc4f9e77faa5557de031b32c90463fc">00220</a>       <a class="code" href="classsubpavings_1_1PenAIC4.shtml#aacc4f9e77faa5557de031b32c90463fc">PenAIC4</a>(<span class="keywordtype">double</span> cc) : <a class="code" href="classsubpavings_1_1PenAIC4.shtml#a4bc616a39893c9f5bc3c2b3123aa6d1f">c</a>(cc) {}
<a name="l00221"></a>00221   
<a name="l00222"></a><a class="code" href="classsubpavings_1_1PenAIC4.shtml#a67df57460a12c319e2cb6e87e0b97c5d">00222</a>       real <a class="code" href="classsubpavings_1_1PenAIC4.shtml#a67df57460a12c319e2cb6e87e0b97c5d" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00223"></a>00223                                   <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00224"></a>00224 <span class="keyword">      </span>{
<a name="l00225"></a>00225           dotprecision penalty(0.0);
<a name="l00226"></a>00226   
<a name="l00227"></a>00227           <span class="keywordtype">int</span> k = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ae4a71d928009eda0a6332f20fd951e35" title="Gets number of leaf nodes in the root paving.">getRootLeaves</a>() + deltaLeaf - 1; <span class="comment">// leaves-1</span>
<a name="l00228"></a>00228           <span class="keywordtype">double</span> logCatk= <a class="code" href="histpenalty_8hpp.shtml#a1dc9bf6a99daaa6cf7349f16c1e558f5">lCk</a>(k);
<a name="l00229"></a>00229   
<a name="l00230"></a>00230           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC4.shtml#a4bc616a39893c9f5bc3c2b3123aa6d1f">c</a>, logCatk); <span class="comment">// pen = c*logCatk</span>
<a name="l00231"></a>00231   
<a name="l00232"></a>00232           <span class="keywordflow">return</span> (rnd(penalty));
<a name="l00233"></a>00233           <span class="comment">// return c*logCatk</span>
<a name="l00234"></a>00234       }
<a name="l00235"></a>00235   };
<a name="l00236"></a>00236   
<a name="l00242"></a><a class="code" href="classsubpavings_1_1PenAIC5.shtml">00242</a>   <span class="keyword">class </span><a class="code" href="classsubpavings_1_1PenAIC5.shtml" title="Class for penalty function 5 for AIC.">PenAIC5</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1PenObj.shtml" title="Abstract class for objects with penalty function for histogram fit.">PenObj</a>
<a name="l00243"></a>00243   {
<a name="l00244"></a><a class="code" href="classsubpavings_1_1PenAIC5.shtml#a778ca6554c74be689f388fe3e61c99c7">00244</a>       <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a778ca6554c74be689f388fe3e61c99c7">c</a>;
<a name="l00245"></a>00245   
<a name="l00246"></a>00246       <span class="comment">// default constructor private</span>
<a name="l00247"></a>00247       <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a0a4d730142d97407ad956266c828b683">PenAIC5</a>();
<a name="l00248"></a>00248   
<a name="l00249"></a>00249       <span class="keyword">public</span>:
<a name="l00250"></a>00250   
<a name="l00251"></a><a class="code" href="classsubpavings_1_1PenAIC5.shtml#a2af1dc5c15afa9cce645020ffc915486">00251</a>       <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a2af1dc5c15afa9cce645020ffc915486">PenAIC5</a>(<span class="keywordtype">double</span> cc) : <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a778ca6554c74be689f388fe3e61c99c7">c</a>(cc) {}
<a name="l00252"></a>00252   
<a name="l00253"></a><a class="code" href="classsubpavings_1_1PenAIC5.shtml#a979f8bcd09ee325303b4ca0db5c51d8c">00253</a>       real <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a979f8bcd09ee325303b4ca0db5c51d8c" title="the penalty function.">operator() </a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml" title="A wrapper or manager for an SPSnode aka StatsSubPaving in conjunction with massive amounts of sample ...">AdaptiveHistogram</a> * <span class="keyword">const</span> adh,
<a name="l00254"></a>00254                                   <span class="keywordtype">int</span> deltaLeaf)<span class="keyword"> const</span>
<a name="l00255"></a>00255 <span class="keyword">      </span>{
<a name="l00256"></a>00256           dotprecision penalty(0.0);
<a name="l00257"></a>00257   
<a name="l00258"></a>00258           <span class="keywordtype">int</span> k = adh-&gt;<a class="code" href="classsubpavings_1_1AdaptiveHistogram.shtml#ae4a71d928009eda0a6332f20fd951e35" title="Gets number of leaf nodes in the root paving.">getRootLeaves</a>() + deltaLeaf - 1; <span class="comment">// leaves-1</span>
<a name="l00259"></a>00259   <span class="comment">//        double logCatk= lCk(k);</span>
<a name="l00260"></a>00260   
<a name="l00261"></a>00261           accumulate(penalty, <a class="code" href="classsubpavings_1_1PenAIC5.shtml#a778ca6554c74be689f388fe3e61c99c7">c</a>*k, log(2.0)); <span class="comment">// pen = c*k*log(2)</span>
<a name="l00262"></a>00262   
<a name="l00263"></a>00263           <span class="keywordflow">return</span> (rnd(penalty));
<a name="l00264"></a>00264           <span class="comment">// return c*k*log(2)</span>
<a name="l00265"></a>00265       }
<a name="l00266"></a>00266   };
<a name="l00267"></a>00267   
<a name="l00269"></a>00269   
<a name="l00270"></a>00270 } <span class="comment">// end of namespace subpavings</span>
<a name="l00271"></a>00271   
<a name="l00272"></a>00272 <span class="preprocessor">  #endif</span>
<a name="l00273"></a>00273 <span class="preprocessor"></span>  
<a name="l00274"></a>00274   
<a name="l00275"></a>00275   
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="histpenalty_8hpp.shtml">histpenalty.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:13 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
