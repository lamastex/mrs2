<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: RosenFobj10D Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classRosenFobj10D.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">RosenFobj10D Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="RosenFobj10D" --><!-- doxytag: inherits="subpavings::MappedFobj10D" -->
<p><code>#include &lt;<a class="el" href="RosenFobj10D_8hpp_source.shtml">RosenFobj10D.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for RosenFobj10D:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classRosenFobj10D__inherit__graph.png" border="0" usemap="#RosenFobj10D_inherit__map" alt="Inheritance graph"/></div>
<map name="RosenFobj10D_inherit__map" id="RosenFobj10D_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for RosenFobj10D:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classRosenFobj10D__coll__graph.png" border="0" usemap="#RosenFobj10D_coll__map" alt="Collaboration graph"/></div>
<map name="RosenFobj10D_coll__map" id="RosenFobj10D_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classRosenFobj10D-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRosenFobj10D.shtml#a31f2f0188911fda75d236acc6066d953">RosenFobj10D</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">no argument constructor  <a href="#a31f2f0188911fda75d236acc6066d953"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRosenFobj10D.shtml#a011fef984ec3e8fb5341aac61f820a58">operator()</a> (const cxsc::interval &amp;ival1, const cxsc::interval &amp;ival2, const cxsc::interval &amp;ival3, const cxsc::interval &amp;ival4, const cxsc::interval &amp;ival5, const cxsc::interval &amp;ival6, const cxsc::interval &amp;ival7, const cxsc::interval &amp;ival8, const cxsc::interval &amp;ival9, const cxsc::interval &amp;ival10) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">declare function for interval image of a box  <a href="#a011fef984ec3e8fb5341aac61f820a58"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRosenFobj10D.shtml#a29e49e4b03d8ce5a1f4729457e4df6c7">operator()</a> (const cxsc::real &amp;r1, const cxsc::real &amp;r2, const cxsc::real &amp;r3, const cxsc::real &amp;r4, const cxsc::real &amp;r5, const cxsc::real &amp;r6, const cxsc::real &amp;r7, const cxsc::real &amp;r8, const cxsc::real &amp;r9, const cxsc::real &amp;r10) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">declare function for real image of reals  <a href="#a29e49e4b03d8ce5a1f4729457e4df6c7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRosenFobj10D.shtml#a0062dff32a46b61bdca81e2e5bc15321">~RosenFobj10D</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a0062dff32a46b61bdca81e2e5bc15321"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="RosenFobj10D_8hpp_source.shtml#l00012">12</a> of file <a class="el" href="RosenFobj10D_8hpp_source.shtml">RosenFobj10D.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a31f2f0188911fda75d236acc6066d953"></a><!-- doxytag: member="RosenFobj10D::RosenFobj10D" ref="a31f2f0188911fda75d236acc6066d953" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRosenFobj10D.shtml#a31f2f0188911fda75d236acc6066d953">RosenFobj10D::RosenFobj10D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>no argument constructor </p>

<p>Definition at line <a class="el" href="RosenFobj10D_8hpp_source.shtml#l00017">17</a> of file <a class="el" href="RosenFobj10D_8hpp_source.shtml">RosenFobj10D.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{};
</pre></div>
</div>
</div>
<a class="anchor" id="a0062dff32a46b61bdca81e2e5bc15321"></a><!-- doxytag: member="RosenFobj10D::~RosenFobj10D" ref="a0062dff32a46b61bdca81e2e5bc15321" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRosenFobj10D.shtml#a0062dff32a46b61bdca81e2e5bc15321">RosenFobj10D::~RosenFobj10D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

<p>Definition at line <a class="el" href="RosenFobj10D_8hpp_source.shtml#l00050">50</a> of file <a class="el" href="RosenFobj10D_8hpp_source.shtml">RosenFobj10D.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a011fef984ec3e8fb5341aac61f820a58"></a><!-- doxytag: member="RosenFobj10D::operator()" ref="a011fef984ec3e8fb5341aac61f820a58" args="(const cxsc::interval &amp;ival1, const cxsc::interval &amp;ival2, const cxsc::interval &amp;ival3, const cxsc::interval &amp;ival4, const cxsc::interval &amp;ival5, const cxsc::interval &amp;ival6, const cxsc::interval &amp;ival7, const cxsc::interval &amp;ival8, const cxsc::interval &amp;ival9, const cxsc::interval &amp;ival10) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval RosenFobj10D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival6</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival7</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival8</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival9</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::interval &amp;&#160;</td>
          <td class="paramname"><em>ival10</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>declare function for interval image of a box </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj10D.shtml#a25e6423b5e185f049369f479dc7d26bd">subpavings::MappedFobj10D</a>.</p>

<p>Definition at line <a class="el" href="RosenFobj10D_8cpp_source.shtml#l00017">17</a> of file <a class="el" href="RosenFobj10D_8cpp_source.shtml">RosenFobj10D.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00018">Height</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00592">taylor::sqr()</a>, <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00017">Tinverse</a>, and <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>.</p>
<div class="fragment"><pre class="fragment">{

  real <a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> = 1.0;
  real <a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> = 100.0;
  
  ivector RR(10);
  RR[1] = ival1;
  RR[2] = ival2;
  RR[3] = ival3;
  RR[4] = ival4;
  RR[5] = ival5;
  RR[6] = ival6;
  RR[7] = ival7;
  RR[8] = ival8;
  RR[9] = ival9;
  RR[10] = ival10;
  
  <span class="keywordtype">int</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(RR), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(RR);

  <span class="comment">//cout &lt;&lt; &quot;============\n&quot; &lt;&lt; RR &lt;&lt; endl;</span>


  interval result(0.0);
  
    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = a + 1; i &lt;= z; i++)
    {
      result = result + (Height * <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i] - <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i - 1])) +
        <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i - 1] - 1.0));
    }
 
  <span class="comment">//cout &lt;&lt; result &lt;&lt; endl;</span>
  result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-(Tinverse * result));
  <span class="comment">//cout &lt;&lt; &quot;Result: &quot; &lt;&lt; result &lt;&lt; endl  &lt;&lt; endl;</span>

  <span class="keywordflow">return</span> result;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a29e49e4b03d8ce5a1f4729457e4df6c7"></a><!-- doxytag: member="RosenFobj10D::operator()" ref="a29e49e4b03d8ce5a1f4729457e4df6c7" args="(const cxsc::real &amp;r1, const cxsc::real &amp;r2, const cxsc::real &amp;r3, const cxsc::real &amp;r4, const cxsc::real &amp;r5, const cxsc::real &amp;r6, const cxsc::real &amp;r7, const cxsc::real &amp;r8, const cxsc::real &amp;r9, const cxsc::real &amp;r10) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real RosenFobj10D::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r5</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r6</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r7</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r8</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r9</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cxsc::real &amp;&#160;</td>
          <td class="paramname"><em>r10</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>declare function for real image of reals </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj10D.shtml#ac9bb2848cd33f3fd5d9b934daaf60613">subpavings::MappedFobj10D</a>.</p>

<p>Definition at line <a class="el" href="RosenFobj10D_8cpp_source.shtml#l00066">66</a> of file <a class="el" href="RosenFobj10D_8cpp_source.shtml">RosenFobj10D.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00018">Height</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00592">taylor::sqr()</a>, <a class="el" href="RosenFobj2D_8cpp_source.shtml#l00017">Tinverse</a>, and <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>.</p>
<div class="fragment"><pre class="fragment">{   
   real <a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> = 1.0;
  real <a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> = 100.0;

  real result = 0.0;
  
  <span class="comment">//mrs</span>
  rvector RR(10);
  RR[1] = r1;
  RR[2] = r2;
  RR[3] = r3;
  RR[4] = r4;
  RR[5] = r5;
  RR[6] = r6;
  RR[7] = r7;
  RR[8] = r8;
  RR[9] = r9;
  RR[10] = r10;
  
  cout &lt;&lt; RR &lt;&lt; endl;
  
  <span class="keywordtype">int</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(RR), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(RR);
  
    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = a + 1; i &lt;= z; i++)
    {
      result = result + (Height * <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i] - <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i - 1])) +
        <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (RR[i - 1] - 1.0));
    }
 
  cout &lt;&lt; result &lt;&lt; endl;
  result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-(Tinverse * result));
  cout &lt;&lt; <span class="stringliteral">&quot;Result: &quot;</span> &lt;&lt; result &lt;&lt; endl &lt;&lt; endl;
  cout &lt;&lt; <span class="stringliteral">&quot;=============&quot;</span> &lt;&lt; endl;
  
  <span class="keywordflow">return</span> result;
}
</pre></div>
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="RosenFobj10D_8hpp_source.shtml">RosenFobj10D.hpp</a></li>
<li><a class="el" href="RosenFobj10D_8cpp_source.shtml">RosenFobj10D.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classRosenFobj10D.shtml">RosenFobj10D</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:30 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
