<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: oscFobj1.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('oscFobj1_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">oscFobj1.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="oscFobj1_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;<a class="code" href="oscFobj1_8hpp.shtml" title="Declarations for multivariate oscillating function object class.">oscFobj1.hpp</a>&quot;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;<a class="code" href="cxsc_8hpp.shtml">cxsc.hpp</a>&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;<a class="code" href="toolz_8hpp.shtml" title="Declaration of various tools; functions and structs, for MRS.">toolz.hpp</a>&quot;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="keyword">using namespace </span>cxsc;
<a name="l00014"></a>00014 <span class="keyword">using namespace </span>std;
<a name="l00015"></a>00015 <span class="keyword">using namespace </span>subpavings;
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 
<a name="l00018"></a><a class="code" href="classOscFobj.shtml#a515cee36fbccd4fbe8a2f707bef2c9d6">00018</a> <a class="code" href="classOscFobj.shtml#a515cee36fbccd4fbe8a2f707bef2c9d6" title="Constructor.">OscFobj::OscFobj</a>() :name(<span class="stringliteral">&quot;oscillator&quot;</span>), a(2.0), b(10.0), c(3.0) {}
<a name="l00019"></a>00019 
<a name="l00020"></a><a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">00020</a> cxsc::interval <a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">OscFobj::operator()</a>(<span class="keyword">const</span> cxsc::ivector&amp; ivec)<span class="keyword"> const</span>
<a name="l00021"></a>00021 <span class="keyword"></span>{
<a name="l00022"></a>00022   <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(ivec);
<a name="l00023"></a>00023   <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(ivec);
<a name="l00024"></a>00024   
<a name="l00025"></a>00025   cxsc::interval result = this-&gt;<a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">operator()</a>(ivec[lb]);
<a name="l00026"></a>00026   
<a name="l00027"></a>00027     
<a name="l00028"></a>00028   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb+1; i &lt;= ub; ++i) {
<a name="l00029"></a>00029     
<a name="l00030"></a>00030     
<a name="l00031"></a>00031     result *= this-&gt;<a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">operator()</a>(ivec[i]);
<a name="l00032"></a>00032     
<a name="l00033"></a>00033   }
<a name="l00034"></a>00034   
<a name="l00035"></a>00035   <span class="keywordflow">return</span> result;
<a name="l00036"></a>00036 }
<a name="l00037"></a>00037 
<a name="l00038"></a><a class="code" href="classOscFobj.shtml#abc13936e90daaa530f97eea20cb6b310">00038</a> cxsc::real <a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">OscFobj::operator()</a>(<span class="keyword">const</span> cxsc::rvector&amp; r)<span class="keyword"> const</span>
<a name="l00039"></a>00039 <span class="keyword"></span>{
<a name="l00040"></a>00040   <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(r);
<a name="l00041"></a>00041   <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(r);
<a name="l00042"></a>00042   
<a name="l00043"></a>00043   cxsc::real retr = this-&gt;<a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">operator()</a>(r[lb]);
<a name="l00044"></a>00044   
<a name="l00045"></a>00045   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb+1; i &lt;= ub &amp;&amp; retr &gt; 0.0; ++i) {
<a name="l00046"></a>00046     retr *= (this-&gt;<a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">operator()</a>(r[i]));
<a name="l00047"></a>00047   }
<a name="l00048"></a>00048     <span class="keywordflow">return</span> retr;
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00053"></a><a class="code" href="classOscFobj.shtml#abb34bbb89491d69889dfdbaf59ff97c5">00053</a> cxsc::interval <a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">OscFobj::operator()</a>(<span class="keyword">const</span> cxsc::interval&amp; ival)<span class="keyword"> const</span>
<a name="l00054"></a>00054 <span class="keyword"></span>{
<a name="l00055"></a>00055   cxsc::interval int_a(<a class="code" href="classOscFobj.shtml#a66d7ba153ba87cd3483e4404cf7ffb6a">a</a>, <a class="code" href="classOscFobj.shtml#a66d7ba153ba87cd3483e4404cf7ffb6a">a</a>);
<a name="l00056"></a>00056   cxsc::interval reti = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(ival,int_a) + (ival+1) * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">cxsc::sin</a>(ival*Pi_real*<a class="code" href="classOscFobj.shtml#ab318db22734e335f06d64d72c9c4892c">b</a>),int_a) * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="namespacetaylor.shtml#af7e3108838177d298e5ef3930dd9605f">cxsc::cos</a>(ival*Pi_real*<a class="code" href="classOscFobj.shtml#accc6363665e58cef176c0f0df818d6e7">c</a>),int_a);
<a name="l00057"></a>00057   <span class="keywordflow">if</span> (Inf(ival) &lt; 0 || Sup(ival) &gt; 1) SetInf(reti, 0.0);
<a name="l00058"></a>00058   <span class="keywordflow">return</span> reti;
<a name="l00059"></a>00059 }
<a name="l00060"></a>00060 
<a name="l00061"></a><a class="code" href="classOscFobj.shtml#a2472b4b74b761201ee2bfa7993a33392">00061</a> cxsc::real <a class="code" href="classOscFobj.shtml#a5e2d7abb22cc71e47be2d6f9b5acaa2c">OscFobj::operator()</a>(<span class="keyword">const</span> cxsc::real&amp; r)<span class="keyword"> const</span>
<a name="l00062"></a>00062 <span class="keyword"></span>{
<a name="l00063"></a>00063   
<a name="l00064"></a>00064   cxsc::real retr = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(r,<a class="code" href="classOscFobj.shtml#a66d7ba153ba87cd3483e4404cf7ffb6a">a</a>) + (r+1) * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">cxsc::sin</a>(r*Pi_real*<a class="code" href="classOscFobj.shtml#ab318db22734e335f06d64d72c9c4892c">b</a>),<a class="code" href="classOscFobj.shtml#a66d7ba153ba87cd3483e4404cf7ffb6a">a</a>) * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="namespacetaylor.shtml#af7e3108838177d298e5ef3930dd9605f">cxsc::cos</a>(r*Pi_real*<a class="code" href="classOscFobj.shtml#accc6363665e58cef176c0f0df818d6e7">c</a>),<a class="code" href="classOscFobj.shtml#a66d7ba153ba87cd3483e4404cf7ffb6a">a</a>);
<a name="l00065"></a>00065   <span class="keywordflow">if</span> (r &lt; 0.0 || r &gt; 1.0) {
<a name="l00066"></a>00066      retr = 0.0;
<a name="l00067"></a>00067   
<a name="l00068"></a>00068   }
<a name="l00069"></a>00069   <span class="keywordflow">return</span> retr;
<a name="l00070"></a>00070 }
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="classOscFobj.shtml#a11fc8cb4baeded5b0b1e21d76250d0a4">00072</a> std::string <a class="code" href="classOscFobj.shtml#a11fc8cb4baeded5b0b1e21d76250d0a4" title="a virtual function for the function name">OscFobj::getName</a>()<span class="keyword"> const</span>
<a name="l00073"></a>00073 <span class="keyword"></span>{
<a name="l00074"></a>00074   <span class="keywordflow">return</span> std::string(<span class="stringliteral">&quot;Osc&quot;</span>);
<a name="l00075"></a>00075 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="oscFobj1_8cpp.shtml">oscFobj1.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
