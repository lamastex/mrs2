<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: PhyloPOT.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">GOpt/PhyloPOT/PhyloPOT.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* </span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009 Raazesh Sainudiin </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment"> * </span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment"> * the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment"> * your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> * </span>
<a name="l00012"></a>00012 <span class="comment"> * This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> * </span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;fstream&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;functional&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;numeric&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">//CSXC includes</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;interval.hpp&quot;</span>   <span class="comment">// Include interval arithmetic package</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;imath.hpp&quot;</span>    <span class="comment">// Include interval standard functions</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;rmath.hpp&quot;</span>    <span class="comment">// Include real standard functions</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;intvector.hpp&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;ivector.hpp&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;rvector.hpp&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;imatrix.hpp&quot;</span>
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="toolz_8hpp.shtml" title="Declaration of various tools; functions and structs, for MRS.">toolz.hpp</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="SmallClasses_8hpp.shtml">SmallClasses.hpp</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="Fobj_8hpp.shtml" title="Fobj definition and declaration.">Fobj.hpp</a>&quot;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="FPhyloPOT_8hpp.shtml" title="Declarations for example function class FPhyloPOT (Phylogenetic tree by post order traversal)...">FPhyloPOT.hpp</a>&quot;</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="PhyloTree_8hpp.shtml" title="Declarations for a class of objects to represent Phylogenetic Trees.">PhyloTree.hpp</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;<a class="code" href="GOpt_8hpp.shtml" title="Global Optimisation declarations. Global optimisation using the C++ Toolbox for Verified Computing Se...">GOpt.hpp</a>&quot;</span>
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">using namespace </span>std;
<a name="l00058"></a>00058 <span class="keyword">using namespace </span>cxsc;
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 
<a name="l00062"></a><a class="code" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml#a3c04138a5bfe5d72780bb7e82a18e627">00062</a> <span class="keywordtype">int</span> <a class="code" href="Exm__3__3_8cpp.shtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> (<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)
<a name="l00063"></a>00063 {
<a name="l00064"></a>00064   ios::sync_with_stdio ();  <span class="comment">// call this function so iostream works with stdio</span>
<a name="l00065"></a>00065   cout &lt;&lt; SetPrecision (20, 15);  <span class="comment">// Number of mantissa digits in I/O</span>
<a name="l00066"></a>00066   
<a name="l00067"></a>00067   <span class="comment">// default value</span>
<a name="l00068"></a>00068   <span class="keywordtype">double</span> Alb = 1.0;<span class="comment">// partition until lower bound on Acceptance Prob. is &gt; Alb</span>
<a name="l00069"></a>00069   
<a name="l00070"></a>00070   <span class="comment">// default value</span>
<a name="l00071"></a>00071   <span class="keywordtype">int</span> n_boxes = 500;
<a name="l00072"></a>00072   
<a name="l00073"></a>00073   <span class="comment">// default value</span>
<a name="l00074"></a>00074   <span class="keywordtype">int</span> n_samples = 100;
<a name="l00075"></a>00075   
<a name="l00076"></a>00076   <span class="comment">// default value</span>
<a name="l00077"></a>00077   <span class="keywordtype">unsigned</span> theSeed = 1234;
<a name="l00078"></a>00078   
<a name="l00079"></a>00079   <span class="comment">// default value</span>
<a name="l00080"></a>00080   <span class="keywordtype">bool</span> UseLogPi = <span class="keyword">true</span>;
<a name="l00081"></a>00081   
<a name="l00082"></a>00082   <span class="comment">// default value</span>
<a name="l00083"></a>00083   <span class="keywordtype">bool</span> use_f_scale = <span class="keyword">true</span>;
<a name="l00084"></a>00084   
<a name="l00085"></a>00085   <span class="comment">// default value</span>
<a name="l00086"></a>00086   <span class="keywordtype">int</span> prior_type = 0;
<a name="l00087"></a>00087   
<a name="l00088"></a>00088   <span class="comment">// parameters for FPhyloPOT</span>
<a name="l00089"></a>00089   <span class="comment">// default value</span>
<a name="l00090"></a>00090   interval DomainCFN3(0.0000000001,1);
<a name="l00091"></a>00091   
<a name="l00092"></a>00092   <span class="comment">// default value</span>
<a name="l00093"></a>00093   <span class="keywordtype">int</span> tree_space = 3; <span class="comment">// number of taxa</span>
<a name="l00094"></a>00094   
<a name="l00095"></a>00095   <span class="comment">// check the input </span>
<a name="l00096"></a>00096   <span class="keywordflow">if</span> (argc &gt;= 2)
<a name="l00097"></a>00097   {
<a name="l00098"></a>00098     sscanf (argv[1], <span class="stringliteral">&quot;%i&quot;</span>, &amp;tree_space);
<a name="l00099"></a>00099     cout &lt;&lt; <span class="stringliteral">&quot;# Usage: PhyloPOT &lt;tree_space&gt; &quot;</span>
<a name="l00100"></a>00100                      &lt;&lt; <span class="stringliteral">&quot;extra arguments ignored.\n&quot;</span>;
<a name="l00101"></a>00101   }
<a name="l00102"></a>00102   
<a name="l00103"></a>00103   cout &lt;&lt; <span class="stringliteral">&quot;# tree_space: &quot;</span> &lt;&lt; tree_space  &lt;&lt; endl; 
<a name="l00104"></a>00104   
<a name="l00105"></a>00105   
<a name="l00106"></a>00106   <a class="code" href="classFPhyloPOT.shtml" title="A class to create a function object for trans-dimensional phylogenetic likelihood by post-order trave...">FPhyloPOT</a> FPhylo(tree_space, DomainCFN3, UseLogPi, prior_type);
<a name="l00107"></a>00107   
<a name="l00108"></a>00108   <span class="comment">// ***************** global optimisation ****************</span>
<a name="l00109"></a>00109   
<a name="l00110"></a>00110     
<a name="l00111"></a>00111   <span class="comment">// set up a search box</span>
<a name="l00112"></a>00112   <span class="comment">// get the dimensions of the domain for this first tree</span>
<a name="l00113"></a>00113   <span class="keywordtype">int</span> domain_dim = FPhylo.<a class="code" href="classFobj.shtml#add9a33b412a85fb11102eb4bd5998669" title="Get the dimensions of the list of labeled domains.">getLabeledDomainDim</a>(0); 
<a name="l00114"></a>00114   ivector search (1, domain_dim);
<a name="l00115"></a>00115   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt;= domain_dim; i++)
<a name="l00116"></a>00116   {
<a name="l00117"></a>00117     search[i] = DomainCFN3;     <span class="comment">// note smaller domain used here for gopt</span>
<a name="l00118"></a>00118   }
<a name="l00119"></a>00119   
<a name="l00120"></a>00120   real tolerance; <span class="comment">// set a tolerance</span>
<a name="l00121"></a>00121   tolerance = 1e-8;
<a name="l00122"></a>00122   
<a name="l00123"></a>00123   <span class="comment">// cycle through the trees and do global optimisation for minimums and maximums</span>
<a name="l00124"></a>00124   <span class="keywordtype">int</span> noTrees = FPhylo.<a class="code" href="classFPhyloPOT.shtml#a13940c79064027cec1a2934afde0dbd7" title="Get the number of trees.">getNoTrees</a>();
<a name="l00125"></a>00125   std::cout &lt;&lt; <span class="stringliteral">&quot;Note there are &quot;</span> &lt;&lt; noTrees 
<a name="l00126"></a>00126             &lt;&lt; <span class="stringliteral">&quot; trees for this function object.&quot;</span> &lt;&lt; std::endl &lt;&lt; std::endl;
<a name="l00127"></a>00127   <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; noTrees; i++) {
<a name="l00128"></a>00128     
<a name="l00129"></a>00129     std::cout &lt;&lt; <span class="stringliteral">&quot;Performing global optimisation only on tree number &quot;</span> 
<a name="l00130"></a>00130               &lt;&lt; i &lt;&lt; std::endl;
<a name="l00131"></a>00131         
<a name="l00132"></a>00132     <span class="comment">// Minimums</span>
<a name="l00133"></a>00133     <span class="comment">// call GoptMin with pointer to FPhylo for tree i</span>
<a name="l00134"></a>00134     <a class="code" href="GOpt_8cpp.shtml#aa1ef10e5facfa08af99a235f02dce943" title="This runs the global optimisation procedure AllGOp for global minimums and prints results...">GOptMin</a>(&amp;FPhylo, search, tolerance, i);
<a name="l00135"></a>00135     
<a name="l00136"></a>00136     <span class="comment">// Maximums</span>
<a name="l00137"></a>00137     <span class="comment">// call GoptMax with pointer to FPhylo for tree i</span>
<a name="l00138"></a>00138     <a class="code" href="GOpt_8cpp.shtml#ad4d421e8fe8cd7dc081fbc719c43c8b4" title="This runs the global optimisation procedure AllGOp for global maximums and prints results...">GOptMax</a>(&amp;FPhylo, search, tolerance, i); 
<a name="l00139"></a>00139     
<a name="l00143"></a>00143   }
<a name="l00144"></a>00144   
<a name="l00145"></a>00145   
<a name="l00146"></a>00146   <span class="keywordflow">return</span> 0;     
<a name="l00147"></a>00147 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="GOpt_2PhyloPOT_2PhyloPOT_8cpp.shtml">PhyloPOT.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
