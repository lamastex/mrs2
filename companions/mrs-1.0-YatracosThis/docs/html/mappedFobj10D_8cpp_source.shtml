<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: mappedFobj10D.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('mappedFobj10D_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">mappedFobj10D.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mappedFobj10D_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2010 Jennifer Harlow</span>
<a name="l00003"></a>00003 <span class="comment">*</span>
<a name="l00004"></a>00004 <span class="comment">*/</span>
<a name="l00005"></a>00005 
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;<a class="code" href="mappedFobj10D_8hpp.shtml" title="MappedFobj10D declarations.">mappedFobj10D.hpp</a>&quot;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="keyword">using namespace </span>subpavings;
<a name="l00014"></a>00014 
<a name="l00015"></a><a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff">00015</a> cxsc::interval <a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">MappedFobj10D::operator()</a>(<span class="keyword">const</span> cxsc::ivector&amp; ivec)<span class="keyword"> const</span>
<a name="l00016"></a>00016 <span class="keyword"></span>{
<a name="l00017"></a>00017   <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">operator()</a>(
<a name="l00018"></a>00018     ivec[1],
<a name="l00019"></a>00019     ivec[2],
<a name="l00020"></a>00020     ivec[3],
<a name="l00021"></a>00021     ivec[4],
<a name="l00022"></a>00022     ivec[5],
<a name="l00023"></a>00023     ivec[6],
<a name="l00024"></a>00024     ivec[7],
<a name="l00025"></a>00025     ivec[8],
<a name="l00026"></a>00026     ivec[9],
<a name="l00027"></a>00027     ivec[10]);
<a name="l00028"></a>00028 }
<a name="l00029"></a>00029 
<a name="l00030"></a><a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#ae9424a4d1c8eac86f5b5525f16bed7f7">00030</a> cxsc::real <a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">MappedFobj10D::operator()</a>(<span class="keyword">const</span> cxsc::rvector&amp; rv)<span class="keyword"> const</span>
<a name="l00031"></a>00031 <span class="keyword"></span>{
<a name="l00032"></a>00032   <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">operator()</a>(
<a name="l00033"></a>00033     rv[1],
<a name="l00034"></a>00034     rv[2],
<a name="l00035"></a>00035     rv[3],
<a name="l00036"></a>00036     rv[4],
<a name="l00037"></a>00037     rv[5],
<a name="l00038"></a>00038     rv[6],
<a name="l00039"></a>00039     rv[7],
<a name="l00040"></a>00040     rv[8],
<a name="l00041"></a>00041     rv[9],
<a name="l00042"></a>00042     rv[10]);
<a name="l00043"></a>00043 }
<a name="l00044"></a>00044 
<a name="l00045"></a><a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a741176d9acfa04ca52e203b376326bb5">00045</a> cxsc::real <a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a741176d9acfa04ca52e203b376326bb5" title="a virtual function for real image of midpoint of an interval">MappedFobj10D::imageMid</a>(<span class="keyword">const</span> cxsc::ivector&amp; ivec)<span class="keyword"> const</span>
<a name="l00046"></a>00046 <span class="keyword"></span>{
<a name="l00047"></a>00047   <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">operator()</a>(
<a name="l00048"></a>00048     cxsc::mid(ivec[1]),
<a name="l00049"></a>00049     cxsc::mid(ivec[2]),
<a name="l00050"></a>00050     cxsc::mid(ivec[3]),
<a name="l00051"></a>00051     cxsc::mid(ivec[4]),
<a name="l00052"></a>00052     cxsc::mid(ivec[5]),
<a name="l00053"></a>00053     cxsc::mid(ivec[6]),
<a name="l00054"></a>00054     cxsc::mid(ivec[7]),
<a name="l00055"></a>00055     cxsc::mid(ivec[8]),
<a name="l00056"></a>00056     cxsc::mid(ivec[9]),
<a name="l00057"></a>00057     cxsc::mid(ivec[10]));
<a name="l00058"></a>00058 }
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#af672654516e93483a22144c7aca0b056">00060</a> cxsc::real <a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a741176d9acfa04ca52e203b376326bb5" title="a virtual function for real image of midpoint of an interval">MappedFobj10D::imageMid</a>(
<a name="l00061"></a>00061   <span class="keyword">const</span> cxsc::interval&amp; ival1,
<a name="l00062"></a>00062   <span class="keyword">const</span> cxsc::interval&amp; ival2,
<a name="l00063"></a>00063   <span class="keyword">const</span> cxsc::interval&amp; ival3,
<a name="l00064"></a>00064   <span class="keyword">const</span> cxsc::interval&amp; ival4,
<a name="l00065"></a>00065   <span class="keyword">const</span> cxsc::interval&amp; ival5,
<a name="l00066"></a>00066   <span class="keyword">const</span> cxsc::interval&amp; ival6,
<a name="l00067"></a>00067   <span class="keyword">const</span> cxsc::interval&amp; ival7,
<a name="l00068"></a>00068   <span class="keyword">const</span> cxsc::interval&amp; ival8,
<a name="l00069"></a>00069   <span class="keyword">const</span> cxsc::interval&amp; ival9,
<a name="l00070"></a>00070   <span class="keyword">const</span> cxsc::interval&amp; ival10)<span class="keyword"> const</span>
<a name="l00071"></a>00071 <span class="keyword"></span>{
<a name="l00072"></a>00072   <span class="keywordflow">return</span> this-&gt;<a class="code" href="classsubpavings_1_1MappedFobj10D.shtml#a15cf283e9113b3142224328ae6c8c4ff" title="a virtual function for interval image of a box">operator()</a>(
<a name="l00073"></a>00073     cxsc::mid(ival1),
<a name="l00074"></a>00074     cxsc::mid(ival2),
<a name="l00075"></a>00075     cxsc::mid(ival3),
<a name="l00076"></a>00076     cxsc::mid(ival4),
<a name="l00077"></a>00077     cxsc::mid(ival5),
<a name="l00078"></a>00078     cxsc::mid(ival6),
<a name="l00079"></a>00079     cxsc::mid(ival7),
<a name="l00080"></a>00080     cxsc::mid(ival8),
<a name="l00081"></a>00081     cxsc::mid(ival9),
<a name="l00082"></a>00082     cxsc::mid(ival10));
<a name="l00083"></a>00083   <span class="comment">/*int ivL = Lb(iv);</span>
<a name="l00084"></a>00084 <span class="comment">  int ivU = Ub(iv);</span>
<a name="l00085"></a>00085 <span class="comment">  rvector rv(ivU - ivL +1 );</span>
<a name="l00086"></a>00086 <span class="comment">  for (int i = ivL; i&lt;=ivU; i++) {</span>
<a name="l00087"></a>00087 <span class="comment">    rv[i] = mid(iv[i]);</span>
<a name="l00088"></a>00088 <span class="comment">  }</span>
<a name="l00089"></a>00089 <span class="comment">  return this-&gt;operator()(rv);</span>
<a name="l00090"></a>00090 <span class="comment">  */</span>
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="mappedFobj10D_8cpp.shtml">mappedFobj10D.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:14 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
