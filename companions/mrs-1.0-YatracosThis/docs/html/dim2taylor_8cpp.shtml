<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: dim2taylor.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('dim2taylor_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">dim2taylor.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="dim2taylor_8hpp_source.shtml">dim2taylor.hpp</a>&quot;</code><br/>
</div>
<p><a href="dim2taylor_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml">taylor</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af8a36be36ab6bac844a69a3e14e2cc4d">taylor::init_var</a> (int order, int nr, const interval &amp;value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a2d1667d3b5c500795eb06c586d75c309">taylor::init_const</a> (int order, const interval &amp;value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a23cd9841df525cfac085fbeb62bf52a9">taylor::operator&lt;&lt;</a> (std::ostream &amp;os, dim2taylor &amp;<a class="el" href="errorfunc_8hpp.shtml#ac90353a98ada0c22146b3ea9f0ac7a4d">d2t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6e1382a183bbab0366f7d451aa1d34d3">taylor::operator-</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a729ed4a1540f3e481333c864233cd8ad">taylor::operator-</a> (const dim2taylor &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a21e6c0930f861f85d9bdb26d9c413339">taylor::operator+</a> (const dim2taylor &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a50aeb0816ed5baecbdd1bc3885a2fbb9">taylor::operator*</a> (const dim2taylor &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a19fd6334248ac67ca9af590bf1eef26a">taylor::operator/</a> (const dim2taylor &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6d905ffff19d4d823f32782893096d4a">taylor::operator-</a> (const interval &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a2a26f996b068d51e9ee8d146d0dbcf19">taylor::operator+</a> (const interval &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a773f854b7253664683fcdc3c2c31279a">taylor::operator*</a> (const interval &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac0269d08341f74bef9f161ce04311b99">taylor::operator/</a> (const interval &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a27893615a38a300f3a98f155f97554ab">taylor::operator-</a> (const dim2taylor &amp;s, const interval &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a84b7a1ad831a7d8ff885b7d62c12776c">taylor::operator+</a> (const dim2taylor &amp;s, const interval &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a4cf47e58467d78b59fb31fe7d4a03ec6">taylor::operator*</a> (const dim2taylor &amp;s, const interval &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a20f576697e1b2eb2a4247ffe570c4f69">taylor::operator/</a> (const dim2taylor &amp;s, const interval &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad8414f5a1f2b7470dbac63025f7b60b7">taylor::operator-</a> (const real &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a4cd1e6c0c0f68726e5b5e95dfd562a70">taylor::operator+</a> (const real &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a778ece51c4eb943bcb8fefc1c98c66f4">taylor::operator*</a> (const real &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a627c5d5998ccdab6c81f898f33b3a0a3">taylor::operator/</a> (const real &amp;s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a583320e2035ee35796b1dc51d126a40e">taylor::operator-</a> (const dim2taylor &amp;s, const real &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6aba8d7ae778ad5a8def497a81f93492">taylor::operator+</a> (const dim2taylor &amp;s, const real &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3fab97783f44e1f70ee6a7b8ac7be6b9">taylor::operator*</a> (const dim2taylor &amp;s, const real &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a83601375c928236047d6b8dc3158825c">taylor::operator/</a> (const dim2taylor &amp;s, const real &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a75af8bfdf49bcf4578549a97b6516967">taylor::operator-</a> (int s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a0700323b633a69c7be77f26b66949859">taylor::operator+</a> (int s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a8437d42cd673464c45a80ba9550e6940">taylor::operator*</a> (int s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a7ad8547d33175b25f92470ef452be7e4">taylor::operator/</a> (int s, const dim2taylor &amp;t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa5a95b7e47b25250650f42f3aa9d3804">taylor::operator-</a> (const dim2taylor &amp;s, int t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a59f1aebf6bfff7b2b294cd5d50f11f15">taylor::operator+</a> (const dim2taylor &amp;s, int t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a7c14e8a638ba74fc191880a4eae70174">taylor::operator*</a> (const dim2taylor &amp;s, int t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#afed918a308085255f702c43ce94eb87d">taylor::operator/</a> (const dim2taylor &amp;s, int t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">taylor::sqr</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af90786d46d07cc1e02c6011fee55f165">taylor::sqrt</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a269ca1cb03661bb2b2649b5de7cfb2fe">taylor::sqrt1px2</a> (const dim2taylor &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#adb8c00fba0cd105428efb20583e3eb57">taylor::sqrtx2m1</a> (const dim2taylor &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">taylor::pow</a> (const dim2taylor &amp;s, const interval &amp;alpha)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a09dab31240298a683a7912d43938e0bb">taylor::power</a> (const dim2taylor &amp;s, int n)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">taylor::exp</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">taylor::ln</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3f3028a96916fee45ecb547821e379e7">taylor::lnp1</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a4bc5f46fac7267d44a627cf61276e6c1">taylor::sqrtp1m1</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">taylor::sin</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af7e3108838177d298e5ef3930dd9605f">taylor::cos</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac2888bbea40e7b720c6502639680302a">taylor::tan</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a8bcfd211cb4e124595338a744cdb6384">taylor::cot</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a6f0c4e9743ae662446f65e3c367452b3">taylor::sinh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9a41b2f1f6cfea4f5146f27d8d9ee641">taylor::cosh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#af271b075d149cf3f1a4305bda028d56b">taylor::tanh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aefaa4af7f76ead12f661bc9dba615f13">taylor::coth</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa70b136998e9a89b2d6a27321d8feece">taylor::asin</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a3867edce0982f0a3c9a43dc31482e182">taylor::acos</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a00d9d7639819d35765a178885d274518">taylor::atan</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a0139feef1c89483743115ace4c903cb3">taylor::acot</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#afcdc71ef653789e9ca26967ff46eff8f">taylor::asinh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9f1462a458f207377ed02a451a36ff1f">taylor::acosh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ad1aa16e085966399831df0b1718a7e89">taylor::atanh</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a9af34046db505e67a68ae0d5d279c253">taylor::acoth</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac58758459f916c91fbadcdb56c22c543">taylor::erf</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a7ba8a01793192f1b63febdb1dd9e3da0">taylor::erfc</a> (const dim2taylor &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#aa89cea38f6aff7d86e21c6b63c526e3c">taylor::f_g_u</a> (const dim2taylor &amp;<a class="el" href="errorfunc_8hpp.shtml#aacb77b1211a6ca2e2beff1811cf9ecf4">f</a>, const dim2taylor &amp;g, const dim2taylor &amp;u, int _fkt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">dim2taylor_vector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#ac56dff7aa717d97652479e90f605ab2e">taylor::init_var</a> (int order, ivector &amp;values)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">taylor::Lb</a> (const dim2taylor_vector &amp;<a class="el" href="errorfunc_8hpp.shtml#a40f7b267e7bca7091a0d4b941ebe3495">d2tv</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">taylor::Ub</a> (const dim2taylor_vector &amp;<a class="el" href="errorfunc_8hpp.shtml#a40f7b267e7bca7091a0d4b941ebe3495">d2tv</a>)</td></tr>
</table>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dim2taylor_8cpp.shtml">dim2taylor.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:19 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
