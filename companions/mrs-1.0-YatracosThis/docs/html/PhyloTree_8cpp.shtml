<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: PhyloTree.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('PhyloTree_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">PhyloTree.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation for for a class of objects to represent Phylogenetic Trees.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="PhyloTree_8hpp_source.shtml">PhyloTree.hpp</a>&quot;</code><br/>
</div>
<p><a href="PhyloTree_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#aa9345a2830ad2dc42d513ff3438b51f6">PijofT_JC69R</a> (const real &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.  <a href="#aa9345a2830ad2dc42d513ff3438b51f6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a56808e5beae03768e4d46dc72617f722">PijofT_JC69I</a> (const interval &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.  <a href="#a56808e5beae03768e4d46dc72617f722"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HessType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a2ffe000f93e3429bd11c7921fe152f53">PijofT_JC69H</a> (const HessType &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree.  <a href="#a2ffe000f93e3429bd11c7921fe152f53"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a53c51d97bba89addbb5ebd545b1fdceb">PijofT_CFNR</a> (const real &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">CFN formula for transition from nucleotype i to j with character space 2.  <a href="#a53c51d97bba89addbb5ebd545b1fdceb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a7d42a5b4171b33c9a2eb051860d7b564">PijofT_CFNR</a> (const interval &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">CFN formula for transition from nucleotype i to j with character space 2.  <a href="#a7d42a5b4171b33c9a2eb051860d7b564"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HessType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a5d2cf8b67d0cd86687725e3b4a0cc4c6">PijofT_CFNR</a> (const HessType &amp;t, const int i, const int j)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">CFN formula for transition from nucleotype i to j with character space 2.  <a href="#a5d2cf8b67d0cd86687725e3b4a0cc4c6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#ae36eeec3df01dff75dc04065eb5095f4">realSum</a> (real sumSoFar, const real r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">operator const <a class="el" href="classLabPnt.shtml" title="A labeled point class.">LabPnt</a>&amp; X Utility function to sum reals  <a href="#ae36eeec3df01dff75dc04065eb5095f4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a84ced4c363a59a5168225a9396ce2b84">intervalSum</a> (interval sumSoFar, const interval x)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">operator const <a class="el" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; X Utility function to sum intervals  <a href="#a84ced4c363a59a5168225a9396ce2b84"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HessType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="PhyloTree_8cpp.shtml#a62f64b7d245c1108fa85ec6509952932">hessSum</a> (HessType sumSoFar, const HessType x)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">operator const HTvector&amp; X Utility function to sum HessTypes  <a href="#a62f64b7d245c1108fa85ec6509952932"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Implementation for for a class of objects to represent Phylogenetic Trees. </p>

<p>Definition in file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a62f64b7d245c1108fa85ec6509952932"></a><!-- doxytag: member="PhyloTree.cpp::hessSum" ref="a62f64b7d245c1108fa85ec6509952932" args="(HessType sumSoFar, const HessType x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HessType <a class="el" href="PhyloTree_8hpp.shtml#a62f64b7d245c1108fa85ec6509952932">hessSum</a> </td>
          <td>(</td>
          <td class="paramtype">HessType&#160;</td>
          <td class="paramname"><em>sumSoFar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const HessType&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>operator const HTvector&amp; X Utility function to sum HessTypes </p>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l01073">1073</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>Referenced by <a class="el" href="FPhyloPOT_8cpp_source.shtml#l00305">FPhyloPOT::operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> sumSoFar+x;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a84ced4c363a59a5168225a9396ce2b84"></a><!-- doxytag: member="PhyloTree.cpp::intervalSum" ref="a84ced4c363a59a5168225a9396ce2b84" args="(interval sumSoFar, const interval x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="PhyloTree_8hpp.shtml#a84ced4c363a59a5168225a9396ce2b84">intervalSum</a> </td>
          <td>(</td>
          <td class="paramtype">interval&#160;</td>
          <td class="paramname"><em>sumSoFar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const interval&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>operator const <a class="el" href="classLabBox.shtml" title="A labeled box class.">LabBox</a>&amp; X Utility function to sum intervals </p>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l01067">1067</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>Referenced by <a class="el" href="FPhyloPOT_8cpp_source.shtml#l00162">FPhyloPOT::operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> sumSoFar+x;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a53c51d97bba89addbb5ebd545b1fdceb"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_CFNR" ref="a53c51d97bba89addbb5ebd545b1fdceb" args="(const real &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="PhyloTree_8hpp.shtml#a5d2cf8b67d0cd86687725e3b4a0cc4c6">PijofT_CFNR</a> </td>
          <td>(</td>
          <td class="paramtype">const real &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>CFN formula for transition from nucleotype i to j with character space 2. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as a real </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as a real </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00074">74</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>

<p>Referenced by <a class="el" href="PhyloTree_8cpp_source.shtml#l00310">PhyloTree::fillProbRealCFN()</a>.</p>
<div class="fragment"><pre class="fragment">{
  real p;
  p = (i==j) ? ( (0.5)+(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) ) : 
    ( (0.5)-(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) );
  <span class="keywordflow">return</span> p;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7d42a5b4171b33c9a2eb051860d7b564"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_CFNR" ref="a7d42a5b4171b33c9a2eb051860d7b564" args="(const interval &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="PhyloTree_8hpp.shtml#a5d2cf8b67d0cd86687725e3b4a0cc4c6">PijofT_CFNR</a> </td>
          <td>(</td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>CFN formula for transition from nucleotype i to j with character space 2. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as a interval </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as a interval </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00087">87</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>
<div class="fragment"><pre class="fragment">{
  interval p;
  p = (i==j) ? ( (0.5)+(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) ) : 
    ( (0.5)-(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) );
  <span class="keywordflow">return</span> p;

}
</pre></div>
</div>
</div>
<a class="anchor" id="a5d2cf8b67d0cd86687725e3b4a0cc4c6"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_CFNR" ref="a5d2cf8b67d0cd86687725e3b4a0cc4c6" args="(const HessType &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HessType <a class="el" href="PhyloTree_8hpp.shtml#a5d2cf8b67d0cd86687725e3b4a0cc4c6">PijofT_CFNR</a> </td>
          <td>(</td>
          <td class="paramtype">const HessType &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>CFN formula for transition from nucleotype i to j with character space 2. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as a HessType </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as a HessType </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00101">101</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>
<div class="fragment"><pre class="fragment">{
  HessType p;
  p = (i==j) ? ( (0.5)+(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) ) : 
    ( (0.5)-(0.5 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(1.0/2.0)*t)) );
  <span class="keywordflow">return</span> p;

}
</pre></div>
</div>
</div>
<a class="anchor" id="a2ffe000f93e3429bd11c7921fe152f53"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_JC69H" ref="a2ffe000f93e3429bd11c7921fe152f53" args="(const HessType &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HessType <a class="el" href="PhyloTree_8hpp.shtml#a2ffe000f93e3429bd11c7921fe152f53">PijofT_JC69H</a> </td>
          <td>(</td>
          <td class="paramtype">const HessType &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as a HessType </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as a HessType </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00061">61</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>

<p>Referenced by <a class="el" href="PhyloTree_8cpp_source.shtml#l00276">PhyloTree::fillProbHessJC69()</a>.</p>
<div class="fragment"><pre class="fragment">{
  HessType p;
  p = (i==j) ? ( (0.25)+(0.75 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) ) : 
    ( (0.25)-(0.25 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) );
  <span class="keywordflow">return</span> p;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a56808e5beae03768e4d46dc72617f722"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_JC69I" ref="a56808e5beae03768e4d46dc72617f722" args="(const interval &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="PhyloTree_8hpp.shtml#a56808e5beae03768e4d46dc72617f722">PijofT_JC69I</a> </td>
          <td>(</td>
          <td class="paramtype">const interval &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as an interval </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as an interval </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00048">48</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>

<p>Referenced by <a class="el" href="PhyloTree_8cpp_source.shtml#l00242">PhyloTree::fillProbIntervalJC69()</a>.</p>
<div class="fragment"><pre class="fragment">{
  interval p;
  p = (i==j) ? ( (0.25)+(0.75 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) ) : 
    ( (0.25)-(0.25 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) );
  <span class="keywordflow">return</span> p;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa9345a2830ad2dc42d513ff3438b51f6"></a><!-- doxytag: member="PhyloTree.cpp::PijofT_JC69R" ref="aa9345a2830ad2dc42d513ff3438b51f6" args="(const real &amp;t, const int i, const int j)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="PhyloTree_8hpp.shtml#aa9345a2830ad2dc42d513ff3438b51f6">PijofT_JC69R</a> </td>
          <td>(</td>
          <td class="paramtype">const real &amp;&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Jukes Cantor formula for transition from nucleotype i to j for an unrooted tree. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>is branchlength as a real </td></tr>
    <tr><td class="paramname">i</td><td>represents a nucleoide </td></tr>
    <tr><td class="paramname">j</td><td>represents a nucleotide </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>probability of transition from nucleotide i to j as a real </dd></dl>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l00035">35</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>References <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>.</p>

<p>Referenced by <a class="el" href="PhyloTree_8cpp_source.shtml#l00208">PhyloTree::fillProbRealJC69()</a>.</p>
<div class="fragment"><pre class="fragment">{
  real p;
  p = (i==j) ? ( (0.25)+(0.75 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) ) : 
    ( (0.25)-(0.25 * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-(4.0/3.0)*t)) );
  <span class="keywordflow">return</span> p;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae36eeec3df01dff75dc04065eb5095f4"></a><!-- doxytag: member="PhyloTree.cpp::realSum" ref="ae36eeec3df01dff75dc04065eb5095f4" args="(real sumSoFar, const real r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="PhyloTree_8hpp.shtml#ae36eeec3df01dff75dc04065eb5095f4">realSum</a> </td>
          <td>(</td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>sumSoFar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const real&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>operator const <a class="el" href="classLabPnt.shtml" title="A labeled point class.">LabPnt</a>&amp; X Utility function to sum reals </p>

<p>Definition at line <a class="el" href="PhyloTree_8cpp_source.shtml#l01061">1061</a> of file <a class="el" href="PhyloTree_8cpp_source.shtml">PhyloTree.cpp</a>.</p>

<p>Referenced by <a class="el" href="FPhyloPOT_8cpp_source.shtml#l00233">FPhyloPOT::operator()()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> sumSoFar+r;
}
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="PhyloTree_8cpp.shtml">PhyloTree.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:22 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
