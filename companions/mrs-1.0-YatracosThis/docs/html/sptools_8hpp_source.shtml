<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: sptools.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('sptools_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">sptools.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sptools_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2007, 2008, 2009 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment">* Copyright (C) 2009 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment">*</span>
<a name="l00007"></a>00007 <span class="comment">* mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment">* it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment">* the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment">* your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">* General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">* along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment">*/</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef ___SPTOOLS_HPP__</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define ___SPTOOLS_HPP__</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="sptypes_8hpp.shtml" title="Includes and general typedefs for subpavings.">sptypes.hpp</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;gsl/gsl_rng.h&gt;</span>    <span class="comment">// to use the gsl random number generator</span>
<a name="l00027"></a>00027 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034     <span class="keyword">class </span><a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a>;
<a name="l00035"></a>00035 
<a name="l00041"></a>00041 <span class="keyword">namespace </span>subpavings {
<a name="l00042"></a>00042 
<a name="l00052"></a>00052     <span class="keywordtype">string</span> <a class="code" href="namespacesubpavings.shtml#ae23d4a36711d5b768cacab3fdb72b609" title="Construct a unique filename from base and timestamp number.">getUniqueFilename</a>(<span class="keywordtype">string</span> baseFileName,
<a name="l00053"></a>00053                 <span class="keywordtype">string</span> suffix=<span class="stringliteral">&quot;.txt&quot;</span>);
<a name="l00054"></a>00054 
<a name="l00061"></a>00061     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s, <span class="keyword">const</span> <span class="keywordtype">string</span> line, <span class="keywordtype">bool</span> append = <span class="keyword">true</span>);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 
<a name="l00069"></a>00069     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#afb8564fbbb2536bafcd19a5cc56e6531" title="Opening line of a txt log file.">outputFileStart</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00070"></a>00070 
<a name="l00076"></a>00076     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> std::string&amp; s, <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a>&amp; vals, <span class="keywordtype">int</span> i);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078     
<a name="l00084"></a>00084     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> std::string&amp; s, <span class="keyword">const</span> std::string intro,
<a name="l00085"></a>00085                     <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a>&amp; vals);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087   
<a name="l00093"></a>00093     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> std::string&amp; s, <span class="keyword">const</span> std::string intro,
<a name="l00094"></a>00094           <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a>&amp; vals);
<a name="l00095"></a>00095 
<a name="l00101"></a>00101     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> std::string&amp; s, <span class="keyword">const</span> std::string intro,
<a name="l00102"></a>00102           <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; vals);
<a name="l00103"></a>00103 
<a name="l00109"></a>00109     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#aa5b5b66715568bc59cafea064eb8b1a7" title="Append a line to a txt file.">outputFile</a>(<span class="keyword">const</span> std::string&amp; s, std::vector&lt;string&gt;&amp; strings, <span class="keywordtype">int</span> i);
<a name="l00110"></a>00110 
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 
<a name="l00119"></a>00119     <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a0973b1623e6e12ba060db40d9cceece1" title="Parse a string to make lines for a dot graph.">parseForGraphDot</a>(<span class="keywordtype">string</span> s, <span class="keywordtype">string</span> toParse);
<a name="l00120"></a>00120 
<a name="l00127"></a>00127     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#abb4671c14005974aeea8f0dd39600ec6" title="make a Dot graph png image given a dot file.">makeDotImage</a>(<span class="keywordtype">string</span> s);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 
<a name="l00138"></a>00138     <span class="keywordtype">int</span> <a class="code" href="namespacesubpavings.shtml#a5928e5a1c7fc26e6df9c5bf9eb4a37a2" title="Method to count lines in a txt file.">countLinesInTxt</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 
<a name="l00141"></a>00141 
<a name="l00149"></a>00149     <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a> <a class="code" href="namespacesubpavings.shtml#a498313e6b9ea0e6fb60d63ea3f2d0128" title="parse a .vtk header line for spacings data.">parseSpacings</a>(<span class="keywordtype">string</span> line, <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a>&amp; spacings);
<a name="l00150"></a>00150 
<a name="l00162"></a>00162     <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a> <a class="code" href="namespacesubpavings.shtml#ab55a3f1bfa1cae218886328f19b2208f" title="Get coordinates from a .vtk file.">getCoordinatesFromVtk</a>(<a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a>&amp; Xs, <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a>&amp; Ys, <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">IntVec</a>&amp; Zs,
<a name="l00163"></a>00163                                             <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 
<a name="l00173"></a>00173     <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a19b79319876fc25305936396f24e5a6c" title="A function for comparing ivectors based on volume.">volCompare</a>(<span class="keyword">const</span> ivector &amp;a, <span class="keyword">const</span> ivector &amp;b);
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 
<a name="l00183"></a>00183     real <a class="code" href="namespacesubpavings.shtml#ada0daf400b54e571b4f8d83bd32861c5" title="Work arround for c-xsc math library for exponentiation of reals.">tryExp</a>(real r);
<a name="l00184"></a>00184 
<a name="l00189"></a>00189     rvector <a class="code" href="namespacesubpavings.shtml#a6f8c4a15a4428e18b5ef0369782c86ae" title="Make a double into an rvector.">makeDoubleIntoRvector</a> (<span class="keyword">const</span> <span class="keywordtype">double</span> d);
<a name="l00190"></a>00190 
<a name="l00210"></a>00210     <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#af62c725dd362922c15d45983e2d8f6cf" title="A quick check on a data string: expecting only numbers white space or decimal points.">checkString</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s, <span class="keyword">const</span> <span class="keywordtype">int</span> n);
<a name="l00211"></a>00211 
<a name="l00228"></a>00228     <span class="keywordtype">int</span> <a class="code" href="namespacesubpavings.shtml#a4160d2d9f357dddf86d43f70c9bb8063" title="Find the number of &#39;blocks&#39; of numbers in a properly formatted string of numbers.">countNumbers</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00261"></a>00261     <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a535c4c5b9e6a042ec418db09ed956cda" title="Read in one-dimensional data from a txt file.">readOneDimDataFromTxt</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; theData, 
<a name="l00262"></a>00262                 <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s,
<a name="l00263"></a>00263                 <span class="keyword">const</span> std::size_t headerlines = 0);
<a name="l00264"></a>00264 
<a name="l00265"></a>00265 
<a name="l00306"></a>00306     <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a7918dddb1a8e32f72835e1e7b4442ca6" title="Read in rvectors from a txt file.">readRvectorsFromTxt</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; theData, 
<a name="l00307"></a>00307                 <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; s,
<a name="l00308"></a>00308                 <span class="keyword">const</span> std::size_t headerlines = 0);
<a name="l00309"></a>00309                 
<a name="l00310"></a>00310    
<a name="l00326"></a>00326     <span class="keywordtype">size_t</span> <a class="code" href="namespacesubpavings.shtml#a211cb10f439ff2bdb92ce92906159792" title="Get all rvectors from a container of rvectors.">getRvectorsFromRVec</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; data, <span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; rvec);
<a name="l00327"></a>00327 
<a name="l00340"></a>00340     <span class="keywordtype">size_t</span> <a class="code" href="namespacesubpavings.shtml#ad2d24521f44422db117d54d6287bc314" title="Get a sample of rvectors from an a container.">getSampleRvectorsFromRVec</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; data, gsl_rng * rgsl,
<a name="l00341"></a>00341                 <span class="keywordtype">size_t</span> samplesize, <span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; rvec);
<a name="l00342"></a>00342 
<a name="l00343"></a>00343 
<a name="l00365"></a>00365     <span class="keywordtype">size_t</span> <a class="code" href="namespacesubpavings.shtml#ae988c56fd983d75dd9f60a5ef8f87660" title="Get a sample of rvectors from an RSSample object.">getSampleRvectorsFromRSSample</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; data, gsl_rng * rgsl,
<a name="l00366"></a>00366                     <span class="keywordtype">size_t</span> samplesize, <span class="keyword">const</span> <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a>&amp; rss, <span class="keywordtype">int</span> label);
<a name="l00367"></a>00367 
<a name="l00368"></a>00368 
<a name="l00395"></a>00395     <span class="keywordtype">size_t</span> <a class="code" href="namespacesubpavings.shtml#ad435f1951db3078702d178b718018651" title="Get all rvectors from an RSSample object.">getRvectorsFromRSSample</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; data, <span class="keyword">const</span> <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a>&amp; rss,
<a name="l00396"></a>00396                                 <span class="keywordtype">int</span> label);
<a name="l00397"></a>00397 
<a name="l00398"></a>00398 
<a name="l00399"></a>00399 
<a name="l00411"></a>00411     <span class="keywordtype">size_t</span> <a class="code" href="namespacesubpavings.shtml#ad26b1f7572cd78c11b5f9a423a80a258" title="Get data from an RSSample object to take samples from.">getRvectorsFromRSSampleForSampling</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; allData,
<a name="l00412"></a>00412                     <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; sampleData, <span class="keywordtype">size_t</span> samplesize, <span class="keyword">const</span> <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a>&amp; rss,
<a name="l00413"></a>00413                     <span class="keywordtype">int</span> label);
<a name="l00414"></a>00414 
<a name="l00415"></a>00415 
<a name="l00430"></a>00430     <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#a4605f09553766eb8702c7c58b8074cf2" title="Get a sample from data in a container.">getSampleFromContainer</a>(<span class="keywordtype">size_t</span> samplesize, gsl_rng * rgsl,
<a name="l00431"></a>00431                 <span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; allData, <a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; sampleData);
<a name="l00432"></a>00432    
<a name="l00433"></a>00433 
<a name="l00434"></a>00434   <span class="comment">//gloria&#39;s additions</span>
<a name="l00444"></a>00444 <span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#a1e3a19279d328b2178aaac44beaaf2d6" title="Point mass filtering from data in a RVecData container. Takes an RVecData container and sieves throug...">pointMassFilter</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; theData, 
<a name="l00445"></a>00445             std::map&lt;rvector, <span class="keywordtype">size_t</span>, std::less&lt;rvector&gt; &gt; &amp; CountsMap);
<a name="l00446"></a>00446               
<a name="l00458"></a>00458   <span class="keywordtype">void</span> <a class="code" href="namespacesubpavings.shtml#ab434c49dd2b267948d0048075ab0298c" title="Labels an RVecData object and store as an RSSample object. Takes an RVecData container and its corres...">labelDataFromFilter</a>(<a class="code" href="namespacesubpavings.shtml#a30e15e24c8d81a2160d7422ef3c39d68" title="Define type RVecData as a container for rvectors.">RVecData</a>&amp; theData, <a class="code" href="classRSSample.shtml" title="A class for the status of a Rejection Sampler.">RSSample</a>&amp; labData, 
<a name="l00459"></a>00459             std::map&lt;rvector, <span class="keywordtype">size_t</span>, std::less&lt;rvector&gt; &gt; &amp; CountsMap,
<a name="l00460"></a>00460             std::map&lt;rvector, <span class="keywordtype">double</span>, std::less&lt;rvector&gt; &gt; &amp; EMFMap);
<a name="l00461"></a>00461   
<a name="l00462"></a>00462   
<a name="l00463"></a>00463   <span class="comment">//src_trunk_0701</span>
<a name="l00464"></a>00464   
<a name="l00475"></a>00475   std::string <a class="code" href="namespacesubpavings.shtml#a1c85cfc0ad8721fc6b480d66d51a653d" title="String representation of an IntVec.">toString</a>(<span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#aed8e75b2af342b9c1460431c223dca8e" title="Define type IntVec as a container for ints.">subpavings::IntVec</a> vec,
<a name="l00476"></a>00476                         <span class="keywordtype">bool</span> compact = <span class="keyword">false</span>);
<a name="l00477"></a>00477 
<a name="l00478"></a>00478 
<a name="l00480"></a>00480   std::string <a class="code" href="namespacesubpavings.shtml#a1c85cfc0ad8721fc6b480d66d51a653d" title="String representation of an IntVec.">toString</a>(<span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">subpavings::RealVec</a> vec,
<a name="l00481"></a>00481                         <span class="keywordtype">bool</span> compact = <span class="keyword">false</span>);
<a name="l00482"></a>00482   
<a name="l00484"></a>00484   std::string <a class="code" href="namespacesubpavings.shtml#a1c85cfc0ad8721fc6b480d66d51a653d" title="String representation of an IntVec.">toString</a>(<span class="keyword">const</span> <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">subpavings::VecDbl</a> vec,
<a name="l00485"></a>00485                         <span class="keywordtype">bool</span> compact = <span class="keyword">false</span>);
<a name="l00487"></a>00487 
<a name="l00488"></a>00488   
<a name="l00489"></a>00489 } <span class="comment">// end namespace subpavings</span>
<a name="l00490"></a>00490 
<a name="l00491"></a>00491 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="sptools_8hpp.shtml">sptools.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:17 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
