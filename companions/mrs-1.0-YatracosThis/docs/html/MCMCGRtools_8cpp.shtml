<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: MCMCGRtools.cpp File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('MCMCGRtools_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">MCMCGRtools.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Tools for testing StatsSubPavings (aka SPSnodes) with MCMC with the Gelman-Rubin convergence diagnostics (automated) Jenny's version.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;fstream&gt;</code><br/>
<code>#include &lt;iterator&gt;</code><br/>
<code>#include &lt;stdexcept&gt;</code><br/>
<code>#include &quot;<a class="el" href="MCMCGRtools_8hpp_source.shtml">MCMCGRtools.hpp</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sptools_8hpp_source.shtml">sptools.hpp</a>&quot;</code><br/>
</div>
<p><a href="MCMCGRtools_8cpp_source.shtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="MCMCGRtools_8cpp.shtml#a32af99153a16e8c03195b10d3fcb6a9c">outputToFileVertical</a> (std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> * &gt; &amp;dataPtrs, std::vector&lt; std::string &gt; &amp;colNames, std::string &amp;filename, int prec)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="MCMCGRtools_8cpp.shtml#aeab60d2a0ee499db048aa1ea334582c9">addDataPtrs</a> (std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> * &gt; &amp;container, std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> &gt; &amp;toAdd)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Tools for testing StatsSubPavings (aka SPSnodes) with MCMC with the Gelman-Rubin convergence diagnostics (automated) Jenny's version. </p>

<p>Definition in file <a class="el" href="MCMCGRtools_8cpp_source.shtml">MCMCGRtools.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="aeab60d2a0ee499db048aa1ea334582c9"></a><!-- doxytag: member="MCMCGRtools.cpp::addDataPtrs" ref="aeab60d2a0ee499db048aa1ea334582c9" args="(std::vector&lt; RealVec * &gt; &amp;container, std::vector&lt; RealVec &gt; &amp;toAdd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a>* &gt;&amp; <a class="el" href="MCMCGRtools_8hpp.shtml#ab5ce0fd56591a345c170439c72740f61">addDataPtrs</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>container</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>toAdd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="MCMCGRtools_8cpp_source.shtml#l00113">113</a> of file <a class="el" href="MCMCGRtools_8cpp_source.shtml">MCMCGRtools.cpp</a>.</p>

<p>Referenced by <a class="el" href="AHABCObsMCMCDblHurdle_8cpp_source.shtml#l00140">doMCMCGRAuto()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">for</span> (std::vector &lt; RealVec &gt;::iterator it = toAdd.begin();
          it &lt; toAdd.end();
          ++it) {
    
    container.push_back( &amp;(*it) );
            
  }
  
  <span class="keywordflow">return</span> container;

}
</pre></div>
</div>
</div>
<a class="anchor" id="a32af99153a16e8c03195b10d3fcb6a9c"></a><!-- doxytag: member="MCMCGRtools.cpp::outputToFileVertical" ref="a32af99153a16e8c03195b10d3fcb6a9c" args="(std::vector&lt; RealVec * &gt; &amp;dataPtrs, std::vector&lt; std::string &gt; &amp;colNames, std::string &amp;filename, int prec)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="MCMCGRtools_8hpp.shtml#af7a5f5135a7b7856b5c0f8df4c052577">outputToFileVertical</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f">RealVec</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>dataPtrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>colNames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>prec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="MCMCGRtools_8cpp_source.shtml#l00047">47</a> of file <a class="el" href="MCMCGRtools_8cpp_source.shtml">MCMCGRtools.cpp</a>.</p>

<p>References <a class="el" href="namespacesubpavings.shtml#afb8564fbbb2536bafcd19a5cc56e6531">subpavings::outputFileStart()</a>.</p>

<p>Referenced by <a class="el" href="AHABCObsMCMCDblHurdle_8cpp_source.shtml#l00140">doMCMCGRAuto()</a>.</p>
<div class="fragment"><pre class="fragment">{
  
  <span class="keywordtype">size_t</span> n = colNames.size();
  <span class="keywordflow">if</span> (n != dataPtrs.size()) {
    <span class="keywordflow">throw</span> std::length_error(<span class="stringliteral">&quot;Size of colNames does not match size of dataPtrs&quot;</span>);
  }
  
  <a class="code" href="namespacesubpavings.shtml#afb8564fbbb2536bafcd19a5cc56e6531" title="Opening line of a txt log file.">outputFileStart</a>(filename);
  
  std::ofstream os;
  
  os.open(filename.c_str(), ios::app);         <span class="comment">// append</span>
  

  <span class="keywordflow">if</span> (os.is_open()) {
    
    <span class="comment">// use cxsc manipulators to set the precision for output</span>
    os &lt;&lt; cxsc::Variable;
    os &lt;&lt; cxsc::SetPrecision(prec+2, prec);
    
    <span class="comment">// colNames</span>
    os &lt;&lt; <span class="stringliteral">&quot;line\t&quot;</span>;
    ostream_iterator&lt; std::string &gt; out_s_it (os,<span class="stringliteral">&quot;\t&quot;</span>);
    copy ( colNames.begin(), colNames.end(), out_s_it );
    os &lt;&lt; std::endl;
    
    <span class="comment">// data</span>
    <span class="comment">/* find the longest inner vector, and </span>
<span class="comment">     * make a vector of iterators to the beginning of each inner vector */</span>
    <span class="keywordtype">size_t</span> longest = 0;
    std::vector &lt; RealVecItr &gt; dataIterators;
    <span class="keywordflow">for</span> (std::vector &lt; RealVec* &gt;::iterator it = dataPtrs.begin();
        it &lt; dataPtrs.end(); ++it) {
      dataIterators.push_back( (*it)-&gt;begin() );
      <span class="keywordflow">if</span> ((*it)-&gt;size() &gt; longest) longest = (*it)-&gt;size();
    }
    <span class="comment">// use this to output the data</span>
    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; longest; ++j) {
      os &lt;&lt; j+1;
      <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; n; ++i) {
        <span class="keywordflow">if</span> ( dataIterators[i] &lt; dataPtrs[i]-&gt;end() ) {
          os &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; (*dataIterators[i]);
          dataIterators[i]++;
        }
        <span class="keywordflow">else</span> {
          os &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span>; <span class="comment">// not sure about this - may not be a good idea?</span>
        }
        
      }
      <span class="comment">// if it is not the last row, newline</span>
      <span class="keywordflow">if</span> ( j &lt; longest - 1) os &lt;&lt; std::endl;
    }
    
    os.close();
  }
  <span class="keywordflow">else</span> {
    std::cerr &lt;&lt; <span class="stringliteral">&quot;Error: could not open file named &quot;</span>
    &lt;&lt; filename &lt;&lt; std::endl &lt;&lt; std::endl;
  }
  
}
</pre></div>
</div>
</div>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="MCMCGRtools_8cpp.shtml">MCMCGRtools.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:22 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
