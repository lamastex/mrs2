<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: GaussianFobj.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('GaussianFobj_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">GaussianFobj.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="GaussianFobj_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2012 Jennifer Harlow</span>
<a name="l00003"></a>00003 <span class="comment">*</span>
<a name="l00004"></a>00004 <span class="comment">* This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00005"></a>00005 <span class="comment">*</span>
<a name="l00006"></a>00006 <span class="comment">* mrs is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment">* it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment">* the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00009"></a>00009 <span class="comment">* your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* This program is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment">* WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment">* General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment">*</span>
<a name="l00016"></a>00016 <span class="comment">* You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment">* along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment">* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00019"></a>00019 <span class="comment">*/</span>
<a name="l00020"></a>00020 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="GaussianFobj_8hpp.shtml" title="Declarations for multivariate Gaussian example function object class.">GaussianFobj.hpp</a>&quot;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">using namespace </span>cxsc;
<a name="l00031"></a>00031 <span class="keyword">using namespace </span>std;
<a name="l00032"></a>00032 
<a name="l00033"></a><a class="code" href="classsubpavings_1_1GaussianFobj.shtml#ad9e9d18b2e13476a463bbef168816a9e">00033</a> <a class="code" href="classsubpavings_1_1GaussianFobj.shtml#ad9e9d18b2e13476a463bbef168816a9e" title="constructor">subpavings::GaussianFobj::GaussianFobj</a>(){}
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a0470c3c772783ea453e62675f75a4aa1">00035</a> interval <a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a0470c3c772783ea453e62675f75a4aa1" title="declare function for interval image of a box">subpavings::GaussianFobj::operator()</a>(
<a name="l00036"></a>00036                 <span class="keyword">const</span> cxsc::ivector&amp; ivec)<span class="keyword"> const</span>
<a name="l00037"></a>00037 <span class="keyword"></span>{
<a name="l00038"></a>00038   <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (ivec);
<a name="l00039"></a>00039   <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (ivec);
<a name="l00040"></a>00040   <span class="keywordtype">int</span> dim = ub - lb + 1;
<a name="l00041"></a>00041   
<a name="l00042"></a>00042   cxsc::interval twoPi = interval(2.0)*<a class="code" href="FShiryaev1D_8hpp.shtml#a0c233fcb94ea9f05596b48427095806e">cxsc::Pi</a>();
<a name="l00043"></a>00043   
<a name="l00044"></a>00044   interval a = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">cxsc::pow</a>(twoPi, cxsc::interval(dim/2.0));
<a name="l00045"></a>00045   interval b = <a class="code" href="namespacetaylor.shtml#a09dab31240298a683a7912d43938e0bb">cxsc::power</a>(ivec[lb],2);
<a name="l00046"></a>00046   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb+1; i &lt;= ub; ++i) {
<a name="l00047"></a>00047     b += <a class="code" href="namespacetaylor.shtml#a09dab31240298a683a7912d43938e0bb">cxsc::power</a>(ivec[i],2);
<a name="l00048"></a>00048   }
<a name="l00049"></a>00049   b *= interval(-0.5);
<a name="l00050"></a>00050   
<a name="l00051"></a>00051   interval result = cxsc::interval(1.0)/a * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">cxsc::exp</a>(b);
<a name="l00052"></a>00052   
<a name="l00053"></a>00053   <span class="keywordflow">return</span> result;
<a name="l00054"></a>00054 }
<a name="l00055"></a>00055 
<a name="l00056"></a><a class="code" href="classsubpavings_1_1GaussianFobj.shtml#af865ee5060e1c83d2f484b1b697bc85c">00056</a> real <a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a0470c3c772783ea453e62675f75a4aa1" title="declare function for interval image of a box">subpavings::GaussianFobj::operator()</a>(<span class="keyword">const</span> cxsc::rvector&amp; r)<span class="keyword"> const</span>
<a name="l00057"></a>00057 <span class="keyword"></span>{
<a name="l00058"></a>00058   <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (r);
<a name="l00059"></a>00059   <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (r);
<a name="l00060"></a>00060   <span class="keywordtype">int</span> dim = ub - lb + 1;
<a name="l00061"></a>00061   
<a name="l00062"></a>00062   real a = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">cxsc::pow</a>(cxsc::Pi2_real, cxsc::real(dim/2.0));
<a name="l00063"></a>00063   real b = <a class="code" href="namespacetaylor.shtml#a09dab31240298a683a7912d43938e0bb">cxsc::power</a>(r[lb],2);
<a name="l00064"></a>00064   <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb+1; i &lt;= ub; ++i) {
<a name="l00065"></a>00065     b += <a class="code" href="namespacetaylor.shtml#a09dab31240298a683a7912d43938e0bb">cxsc::power</a>(r[i],2);
<a name="l00066"></a>00066   }
<a name="l00067"></a>00067   
<a name="l00068"></a>00068   b*= real(-0.5);
<a name="l00069"></a>00069   
<a name="l00070"></a>00070   real result = cxsc::real(1.0)/a * <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">cxsc::exp</a>(b);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072   <span class="keywordflow">return</span> result;
<a name="l00073"></a>00073   
<a name="l00074"></a>00074 }
<a name="l00075"></a>00075 
<a name="l00076"></a><a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a1c141bf5ba6b8bdefccfaa3e232a0bcc">00076</a> std::string <a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a1c141bf5ba6b8bdefccfaa3e232a0bcc" title="get the function name.">subpavings::GaussianFobj::getName</a>()<span class="keyword"> const</span>
<a name="l00077"></a>00077 <span class="keyword"></span>{
<a name="l00078"></a>00078   <span class="keywordflow">return</span> std::string(<span class="stringliteral">&quot;Gaussian&quot;</span>);
<a name="l00079"></a>00079 }
<a name="l00080"></a>00080 
<a name="l00081"></a><a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a75f3d496396c90a3b7f55d926fa7c5a7">00081</a> <a class="code" href="classsubpavings_1_1GaussianFobj.shtml#a75f3d496396c90a3b7f55d926fa7c5a7" title="Destructor.">subpavings::GaussianFobj::~GaussianFobj</a>(){}
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="GaussianFobj_8cpp.shtml">GaussianFobj.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:12 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
