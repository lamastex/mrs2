<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: Vec.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('Vec_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Vec.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Vec_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;<a class="code" href="Vec_8hpp.shtml" title="Declarations for Vec class.">Vec.hpp</a>&quot;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00010"></a>00010 
<a name="l00011"></a>00011 <span class="comment">// to use std input/output</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 
<a name="l00015"></a><a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">00015</a> <span class="keywordtype">void</span> <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">Vec::normalise</a>()
<a name="l00016"></a>00016 {
<a name="l00017"></a>00017 
<a name="l00018"></a>00018     <span class="keywordtype">double</span> length = <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a>(<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>*<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>*<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>*<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>, 0.5);
<a name="l00019"></a>00019     <span class="keywordflow">if</span> (length &gt; 0.0) {
<a name="l00020"></a>00020         <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> /= length;
<a name="l00021"></a>00021         <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> /= length;
<a name="l00022"></a>00022         w /= length;
<a name="l00023"></a>00023     }
<a name="l00024"></a>00024 }
<a name="l00025"></a>00025 
<a name="l00026"></a><a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187">00026</a> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec::Vec</a>() : u(0.0), v (0.0), w (0.0) {}
<a name="l00027"></a>00027 
<a name="l00028"></a><a class="code" href="classVec.shtml#a857ab87f43484ae8581f021bc2dea0eb">00028</a> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec::Vec</a>(<span class="keywordtype">double</span> uu, <span class="keywordtype">double</span> vv, <span class="keywordtype">double</span> ww)
<a name="l00029"></a>00029                 : u(uu), v (vv), w (ww)
<a name="l00030"></a>00030 {
<a name="l00031"></a>00031     <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
<a name="l00032"></a>00032 }
<a name="l00033"></a>00033 
<a name="l00034"></a><a class="code" href="classVec.shtml#ac252c18437696a2fda6b7427116741a9">00034</a> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec::Vec</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; other)
<a name="l00035"></a>00035                 : u(other.u), v (other.v), w (other.w) {}
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="classVec.shtml#a2432e72a4c830d7ae40d36fe843f8fa0">00037</a> <a class="code" href="classVec.shtml">Vec</a>&amp; <a class="code" href="classVec.shtml#a2432e72a4c830d7ae40d36fe843f8fa0">Vec::operator=</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039     <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> = rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
<a name="l00040"></a>00040     <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> = rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
<a name="l00041"></a>00041     <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> = rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
<a name="l00042"></a>00042     <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
<a name="l00043"></a>00043 
<a name="l00044"></a>00044     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00045"></a>00045 }
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="classVec.shtml#aa5147cd7b8bbfde4d9cfe50c5ef06d0e">00047</a> <a class="code" href="classVec.shtml">Vec</a>&amp; <a class="code" href="classVec.shtml#aa5147cd7b8bbfde4d9cfe50c5ef06d0e">Vec::operator+=</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049     <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> += rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
<a name="l00050"></a>00050     <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> += rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
<a name="l00051"></a>00051     <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> += rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
<a name="l00052"></a>00052     <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00057"></a><a class="code" href="classVec.shtml#a5f46f2a53419e8c985511601643f87ad">00057</a> <a class="code" href="classVec.shtml">Vec</a> <a class="code" href="classVec.shtml#a5f46f2a53419e8c985511601643f87ad">Vec::operator+</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00058"></a>00058 <span class="keyword"></span>{
<a name="l00059"></a>00059     <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) += rhs;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 }
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="classVec.shtml#adce31c56c9f71357dfea84f44e461d0c">00063</a> <a class="code" href="classVec.shtml">Vec</a>&amp; <a class="code" href="classVec.shtml#adce31c56c9f71357dfea84f44e461d0c">Vec::operator-=</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)
<a name="l00064"></a>00064 {
<a name="l00065"></a>00065     <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> -= rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
<a name="l00066"></a>00066     <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> -= rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
<a name="l00067"></a>00067     <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> -= rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
<a name="l00068"></a>00068     <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
<a name="l00069"></a>00069 
<a name="l00070"></a>00070     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00071"></a>00071 }
<a name="l00072"></a>00072 
<a name="l00073"></a><a class="code" href="classVec.shtml#ae7a06f3161cbc8921dace94a0ecb0bfb">00073</a> <a class="code" href="classVec.shtml">Vec</a> <a class="code" href="classVec.shtml#ae7a06f3161cbc8921dace94a0ecb0bfb">Vec::operator-</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00074"></a>00074 <span class="keyword"></span>{
<a name="l00075"></a>00075     <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) -= rhs;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 }
<a name="l00078"></a>00078 
<a name="l00079"></a><a class="code" href="classVec.shtml#a92804048dd925bba0d301dd93a28bd8f">00079</a> <a class="code" href="classVec.shtml">Vec</a>&amp; <a class="code" href="classVec.shtml#a92804048dd925bba0d301dd93a28bd8f">Vec::operator*=</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)
<a name="l00080"></a>00080 {
<a name="l00081"></a>00081     <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> = <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> * rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> - <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> * rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a>;
<a name="l00082"></a>00082     <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> = <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> * rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> - <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> * rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
<a name="l00083"></a>00083     <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a> = <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> * rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> - <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> * rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a>;
<a name="l00084"></a>00084     <a class="code" href="classVec.shtml#af5ed89da3d66bddb87c55c1d9d70baa4">normalise</a>();
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00087"></a>00087 }
<a name="l00088"></a>00088 
<a name="l00089"></a><a class="code" href="classVec.shtml#ab630eb05f7f84ac9ccbb3fbce5e30e62">00089</a> <a class="code" href="classVec.shtml">Vec</a> <a class="code" href="classVec.shtml#ab630eb05f7f84ac9ccbb3fbce5e30e62">Vec::operator*</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00090"></a>00090 <span class="keyword"></span>{
<a name="l00091"></a>00091     <span class="keywordflow">return</span> <a class="code" href="classVec.shtml#aefd6dd5ca241f55cdc5548e4c02dc187" title="no argument constructor">Vec</a>(*<span class="keyword">this</span>) *= rhs;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 }
<a name="l00094"></a>00094 
<a name="l00095"></a><a class="code" href="classVec.shtml#a490ee432f3b43cce76d59e8d1aa6c66f">00095</a> <span class="keywordtype">bool</span> <a class="code" href="classVec.shtml#a490ee432f3b43cce76d59e8d1aa6c66f">Vec::operator==</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00096"></a>00096 <span class="keyword"></span>{
<a name="l00097"></a>00097     <span class="keywordflow">return</span> !(*this &lt; rhs) &amp;&amp; !(*this &gt; rhs);
<a name="l00098"></a>00098 }
<a name="l00099"></a>00099 
<a name="l00100"></a><a class="code" href="classVec.shtml#a6c7f02ea2f4ae67c36f0aeb1ac97d027">00100</a> <span class="keywordtype">bool</span> <a class="code" href="classVec.shtml#a6c7f02ea2f4ae67c36f0aeb1ac97d027">Vec::operator!=</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00101"></a>00101 <span class="keyword"></span>{
<a name="l00102"></a>00102     <span class="keywordflow">return</span> (*<span class="keyword">this</span> &lt; rhs) || !(*<span class="keyword">this</span> &gt; rhs);
<a name="l00103"></a>00103 }
<a name="l00104"></a>00104 
<a name="l00105"></a><a class="code" href="classVec.shtml#a48553775073fb23a0427db27b7d9e5cf">00105</a> <span class="keywordtype">bool</span> <a class="code" href="classVec.shtml#a48553775073fb23a0427db27b7d9e5cf">Vec::operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00106"></a>00106 <span class="keyword"></span>{
<a name="l00107"></a>00107     <span class="keywordflow">return</span> ((<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>) &lt; (rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>));
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 }
<a name="l00110"></a>00110 
<a name="l00111"></a><a class="code" href="classVec.shtml#ac3708104626d0d23e6643d960185deb7">00111</a> <span class="keywordtype">bool</span> <a class="code" href="classVec.shtml#ac3708104626d0d23e6643d960185deb7">Vec::operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00112"></a>00112 <span class="keyword"></span>{
<a name="l00113"></a>00113      <span class="keywordflow">return</span> ((<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>) &gt; (rhs.<a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> + rhs.<a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> + rhs.<a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>));
<a name="l00114"></a>00114 }
<a name="l00115"></a>00115 
<a name="l00116"></a><a class="code" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">00116</a> <span class="keywordtype">void</span> <a class="code" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">Vec::print</a>(std::ostream&amp; os)<span class="keyword"> const</span>
<a name="l00117"></a>00117 <span class="keyword"></span>{
<a name="l00118"></a>00118 
<a name="l00119"></a>00119     os &lt;&lt; <a class="code" href="classVec.shtml#a463e55879d386da7c31644446a9aba13">u</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classVec.shtml#a171bde0822311dc8f9ec69e1e90ba2ff">v</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classVec.shtml#a4e475b48393d5d8f6e1837e2007454b8">w</a>;
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 }
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 <span class="comment">//friend function</span>
<a name="l00125"></a><a class="code" href="Vec_8cpp.shtml#a9b22c0f744f693c41c72c19845788bbd">00125</a> std::ostream&amp; <a class="code" href="adaptivehistogram_8cpp.shtml#ae2f172a2081430943222aff00bd4d1e8" title="Output the HistDescription object.">operator&lt;&lt;</a>(std::ostream&amp; os, <span class="keyword">const</span> <a class="code" href="classVec.shtml">Vec</a>&amp; c)
<a name="l00126"></a>00126 {
<a name="l00127"></a>00127 
<a name="l00128"></a>00128     c.<a class="code" href="classVec.shtml#ae7b64d21bc832137b2c2bb1e8c30c0b2">print</a>(os);
<a name="l00129"></a>00129 
<a name="l00130"></a>00130     <span class="keywordflow">return</span> os;
<a name="l00131"></a>00131 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="Vec_8cpp.shtml">Vec.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:18 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
