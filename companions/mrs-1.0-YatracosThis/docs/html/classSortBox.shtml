<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: SortBox Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classSortBox.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">SortBox Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="SortBox" -->
<p>A Function Object class for a sorting criterion between one <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a> and another.  
 <a href="classSortBox.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>&gt;</code></p>

<p><a href="classSortBox-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSortBox.shtml#ab3269a31ecf0c23162eb1ea11b007d31">SortBox</a> (bool LogPi=false)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator.  <a href="#ab3269a31ecf0c23162eb1ea11b007d31"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSortBox.shtml#ae1b1f1b6857d51efac4b49789ec442d4">operator()</a> (const <a class="el" href="classRangedLabBox.shtml">RangedLabBox</a> &amp;P1, const <a class="el" href="classRangedLabBox.shtml">RangedLabBox</a> &amp;P2) const </td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSortBox.shtml#a3abbd28beba68a39e80544412e7adc46">UsingLogDensity</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean flag for the natural logarithmic scale for the function.  <a href="#a3abbd28beba68a39e80544412e7adc46"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>A Function Object class for a sorting criterion between one <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a> and another. </p>
<p>Determines a total order between two <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a> es on the basis of the magnitude of the diameter of the interval enclosure of the integral of the function over the labeled box of each <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a>. Thus, <a class="el" href="classSortBox.shtml" title="A Function Object class for a sorting criterion between one RangedLabBox and another.">SortBox</a> is a type that we use as a template argument for an associative container RangedLabBoxSet, a type of STL-bsed set. Read for e.g. Josuttis1999 p. 178, p. 294 for details.</p>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000008">Todo:</a></b></dt><dd>Read Josuttis1999 Sec 8.1.2 to extend and intervene the automatic sorting criterion via Function Objects with more than one internal state at the same time [perhaps also try defining different sorting criterion of the same data type as in p. 178 'As a constructor parameter' with e.g. in P. 191]. Perhaps incorporate alternative sorting criterion into <a class="el" href="classSortBox.shtml" title="A Function Object class for a sorting criterion between one RangedLabBox and another.">SortBox</a>. Older ideas for total order between RangedLabBoxes include: class SortByBoxREDiam { // sort by diameter of range enclosure public: bool operator() ( const <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a>&amp; P1, const <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a>&amp; P2 ) const { return ( diam(P1.BoxRE) &lt;= diam(P2.BoxRE) ); } }; and class SortByBoxVol { // sort by volume of subdomain box public: bool operator() ( const <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a>&amp; P1, const <a class="el" href="classRangedLabBox.shtml" title="A class for `labeled box with range&#39; of a real-valued function over it.">RangedLabBox</a>&amp; P2 ) const { return ( (P1.BoxVol) &lt;= (P2.BoxVol) ); } }; </dd></dl>

<p>Definition at line <a class="el" href="SmallClasses_8hpp_source.shtml#l00192">192</a> of file <a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab3269a31ecf0c23162eb1ea11b007d31"></a><!-- doxytag: member="SortBox::SortBox" ref="ab3269a31ecf0c23162eb1ea11b007d31" args="(bool LogPi=false)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classSortBox.shtml#ab3269a31ecf0c23162eb1ea11b007d31">SortBox::SortBox</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>LogPi</em> = <code>false</code></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Comparison operator. </p>

<p>Definition at line <a class="el" href="SmallClasses_8hpp_source.shtml#l00202">202</a> of file <a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>.</p>
<div class="fragment"><pre class="fragment">:<a class="code" href="classSortBox.shtml#a3abbd28beba68a39e80544412e7adc46" title="Boolean flag for the natural logarithmic scale for the function.">UsingLogDensity</a>(LogPi){}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ae1b1f1b6857d51efac4b49789ec442d4"></a><!-- doxytag: member="SortBox::operator()" ref="ae1b1f1b6857d51efac4b49789ec442d4" args="(const RangedLabBox &amp;P1, const RangedLabBox &amp;P2) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SortBox::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classRangedLabBox.shtml">RangedLabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>P1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classRangedLabBox.shtml">RangedLabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>P2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="SmallClasses_8hpp_source.shtml#l00203">203</a> of file <a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00132">RangedLabBox::BoxPriorIntegral</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00128">RangedLabBox::BoxRE</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, and <a class="el" href="SmallClasses_8hpp_source.shtml#l00199">UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="comment">//  cout &lt;&lt; diam(P1.BoxRE) &lt;&lt; &quot; &quot; &lt;&lt; P1.BoxVol &lt;&lt; &quot; &quot; </span>
      <span class="comment">//       &lt;&lt; diam(P2.BoxRE) &lt;&lt; &quot; &quot; &lt;&lt; P2.BoxVol &lt;&lt; endl;</span>
      <span class="keywordflow">return</span> (<a class="code" href="classSortBox.shtml#a3abbd28beba68a39e80544412e7adc46" title="Boolean flag for the natural logarithmic scale for the function.">UsingLogDensity</a>)?
      (<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(P1.<a class="code" href="classRangedLabBox.shtml#a748168b1418e7a0a4f42a3373be377f2" title="Integral of the prior density over the box.">BoxPriorIntegral</a>)+Sup(P1.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>)+<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(1.0 - <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-diam(P1.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>))) &gt;=
       <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(P2.<a class="code" href="classRangedLabBox.shtml#a748168b1418e7a0a4f42a3373be377f2" title="Integral of the prior density over the box.">BoxPriorIntegral</a>)+Sup(P2.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>)+<a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(1.0 - <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(-diam(P2.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>))) ):
      (diam(P1.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>)*P1.<a class="code" href="classRangedLabBox.shtml#a748168b1418e7a0a4f42a3373be377f2" title="Integral of the prior density over the box.">BoxPriorIntegral</a>&gt;=diam(P2.<a class="code" href="classRangedLabBox.shtml#ae8b300e377bb19858a20929900e56411" title="The interval range enclosure of the function over the labeled box.">BoxRE</a>)*P2.<a class="code" href="classRangedLabBox.shtml#a748168b1418e7a0a4f42a3373be377f2" title="Integral of the prior density over the box.">BoxPriorIntegral</a>);
    }
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a3abbd28beba68a39e80544412e7adc46"></a><!-- doxytag: member="SortBox::UsingLogDensity" ref="a3abbd28beba68a39e80544412e7adc46" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classSortBox.shtml#a3abbd28beba68a39e80544412e7adc46">SortBox::UsingLogDensity</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Boolean flag for the natural logarithmic scale for the function. </p>
<p>Works when target function is a positive density (up to a normalizing constant). </p>

<p>Definition at line <a class="el" href="SmallClasses_8hpp_source.shtml#l00199">199</a> of file <a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a>.</p>

<p>Referenced by <a class="el" href="SmallClasses_8hpp_source.shtml#l00203">operator()()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SmallClasses_8hpp_source.shtml">SmallClasses.hpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classSortBox.shtml">SortBox</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:30 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
