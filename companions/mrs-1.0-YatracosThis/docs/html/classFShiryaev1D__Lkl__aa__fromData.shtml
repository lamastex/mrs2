<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: FShiryaev1D_Lkl_aa_fromData Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classFShiryaev1D__Lkl__aa__fromData.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">FShiryaev1D_Lkl_aa_fromData Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="FShiryaev1D_Lkl_aa_fromData" --><!-- doxytag: inherits="Fobj" -->
<p>one-dimensional Shiryaev likelhood as a function object class  
 <a href="classFShiryaev1D__Lkl__aa__fromData.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for FShiryaev1D_Lkl_aa_fromData:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFShiryaev1D__Lkl__aa__fromData__inherit__graph.png" border="0" usemap="#FShiryaev1D__Lkl__aa__fromData_inherit__map" alt="Inheritance graph"/></div>
<map name="FShiryaev1D__Lkl__aa__fromData_inherit__map" id="FShiryaev1D__Lkl__aa__fromData_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for FShiryaev1D_Lkl_aa_fromData:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classFShiryaev1D__Lkl__aa__fromData__coll__graph.png" border="0" usemap="#FShiryaev1D__Lkl__aa__fromData_coll__map" alt="Collaboration graph"/></div>
<map name="FShiryaev1D__Lkl__aa__fromData_coll__map" id="FShiryaev1D__Lkl__aa__fromData_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classFShiryaev1D__Lkl__aa__fromData-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#aef5ea1fbdc387780a35129766d3ffeb1">FShiryaev1D_Lkl_aa_fromData</a> (<a class="el" href="classRSSample.shtml">RSSample</a> &amp;d, real <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21">cc</a>, interval DomainInterval, bool LogPi, int Prior)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#ac3ef0d8ca7ece7015c1c79af2a85e261">operator()</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;A) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#ac3ef0d8ca7ece7015c1c79af2a85e261"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#aa14358629387c248e96ccc8183fa9353">operator()</a> (const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;A) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a>  <a href="#aa14358629387c248e96ccc8183fa9353"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#ace0761a116e45f3f924903e355742486">LabBoxVolume</a> (const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;LB)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">a defined pure virtual function for default Lebesgue measure (volume) of a labelled box  <a href="#ace0761a116e45f3f924903e355742486"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#af64393de70c67faba8af5f5e8aade1cb">get_interval_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of interval function calls.  <a href="#af64393de70c67faba8af5f5e8aade1cb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1b055fdade523cb5df05994c9a565f2f">get_real_calls</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get number of real function calls.  <a href="#a1b055fdade523cb5df05994c9a565f2f"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classRSSample.shtml">RSSample</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337">Data</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Store the data to estimate parameter aa.  <a href="#a63bdd5ba904fa6775561cdd28176b337"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21">cc</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">cc is assumed to be known  <a href="#a1790f5e4dfc6d207371994c04e154c21"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a306213ac1c465cf9d2bd6d1e502fcce2">CC</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a7c759aeef9b7dbe5223ea3a564c60124">n_interval_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of interval function calls.  <a href="#a7c759aeef9b7dbe5223ea3a564c60124"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1a371cc6b90e1b0a1975d1ddbcdac4eb">n_real_calls</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Track number of real function calls.  <a href="#a1a371cc6b90e1b0a1975d1ddbcdac4eb"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>one-dimensional Shiryaev likelhood as a function object class </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00062">62</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aef5ea1fbdc387780a35129766d3ffeb1"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::FShiryaev1D_Lkl_aa_fromData" ref="aef5ea1fbdc387780a35129766d3ffeb1" args="(RSSample &amp;d, real cc, interval DomainInterval, bool LogPi, int Prior)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#aef5ea1fbdc387780a35129766d3ffeb1">FShiryaev1D_Lkl_aa_fromData::FShiryaev1D_Lkl_aa_fromData</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classRSSample.shtml">RSSample</a> &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">real&#160;</td>
          <td class="paramname"><em>cc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">interval&#160;</td>
          <td class="paramname"><em>DomainInterval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>LogPi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>Prior</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00104">104</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00065">cc</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00066">CC</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00077">LabBox::L</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00052">Fobj::LabDomainList</a>, <a class="el" href="Fobj_8hpp_source.shtml#l00058">Fobj::PriorType</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00190">Fobj::setUsingLogDensity()</a>.</p>
<div class="fragment"><pre class="fragment">:
<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a> (d), 
<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21" title="cc is assumed to be known">cc</a>(E)
{
  <a class="code" href="classFobj.shtml#a809ddeff11d2485c9baef63217cf8ec5" title="set the target scale to natural logarithm">setUsingLogDensity</a> (LogPi);
  <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a> = Prior;
  <span class="keywordflow">if</span>(<a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>!=0)
  {
    cerr &lt;&lt; <span class="stringliteral">&quot;Only uniform prior defined here... Reset to Uniform Prior\n&quot;</span>;
    <a class="code" href="classFobj.shtml#aa58fc4a0d73e6ece446db9a87a633820" title="To specify a type of prior density: uniform, exponential, user_defined.">PriorType</a>=0;
  }
  <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a306213ac1c465cf9d2bd6d1e502fcce2">CC</a> = _interval(<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21" title="cc is assumed to be known">cc</a>);
                    <span class="comment">//domain for the alpha parameter in the likelihood</span>
  ivector domain (1, 1);
  <a class="code" href="classLabBox.shtml" title="A labeled box class.">LabBox</a> Ldomain;
  domain[1] = DomainInterval;
  Ldomain.<a class="code" href="classLabBox.shtml#a65253d570e3236bde747ddfabc7c6849" title="specifies the box as cxsc::ivector Box of the labeled box LabBox">Box</a> = domain;
  Ldomain.<a class="code" href="classLabBox.shtml#a4f0197d8aaeb58676d6c50f0f229a63b" title="specifies the label L of the labeled box LabBox">L</a> = 0;
  <a class="code" href="classFobj.shtml#a7d5297f74590a7bf95aa65d37a72fdff" title="The initial collection of labelled domain boxes -- prior support.">LabDomainList</a>.push_back (Ldomain);
}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="af64393de70c67faba8af5f5e8aade1cb"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::get_interval_calls" ref="af64393de70c67faba8af5f5e8aade1cb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#af64393de70c67faba8af5f5e8aade1cb">FShiryaev1D_Lkl_aa_fromData::get_interval_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of interval function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a541c0edbb08855d1e3cdbb45b0aa26af">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00078">78</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00068">n_interval_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a7c759aeef9b7dbe5223ea3a564c60124" title="Track number of interval function calls.">n_interval_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a1b055fdade523cb5df05994c9a565f2f"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::get_real_calls" ref="a1b055fdade523cb5df05994c9a565f2f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1b055fdade523cb5df05994c9a565f2f">FShiryaev1D_Lkl_aa_fromData::get_real_calls</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get number of real function calls. </p>

<p>Implements <a class="el" href="classFobj.shtml#a63df2521571faeb43663613a9a4611e7">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00083">83</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00070">n_real_calls</a>.</p>
<div class="fragment"><pre class="fragment">    {
      <span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1a371cc6b90e1b0a1975d1ddbcdac4eb" title="Track number of real function calls.">n_real_calls</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="ace0761a116e45f3f924903e355742486"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::LabBoxVolume" ref="ace0761a116e45f3f924903e355742486" args="(const LabBox &amp;LB)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual real <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#ace0761a116e45f3f924903e355742486">FShiryaev1D_Lkl_aa_fromData::LabBoxVolume</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a defined pure virtual function for default Lebesgue measure (volume) of a labelled box </p>
<p>get the default volume (Lebesgue) of a labeled box</p>
<p>derived classes inherit interface and default behavior see [Item 34,P.166, Meyers, Effective C++]</p>
<p>an inline definition of the pure virtual function for default Lebesgue measure (volume) of a labeled box </p>

<p>Implements <a class="el" href="classFobj.shtml#a8da39e1c8780124d6826742cdf21aaf5">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00076">76</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>
<div class="fragment"><pre class="fragment">{<span class="keywordflow">return</span> <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#ace0761a116e45f3f924903e355742486" title="a defined pure virtual function for default Lebesgue measure (volume) of a labelled box...">Fobj::LabBoxVolume</a>(LB);}
</pre></div>
</div>
</div>
<a class="anchor" id="ac3ef0d8ca7ece7015c1c79af2a85e261"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::operator()" ref="ac3ef0d8ca7ece7015c1c79af2a85e261" args="(const LabBox &amp;A) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval FShiryaev1D_Lkl_aa_fromData::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabBox.shtml">LabBox</a> &amp;&#160;</td>
          <td class="paramname"><em>LB</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for interval image of boxes under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>
<p>Derived classes inherit interface only see [Item 34,P.162, Meyers, Effective C++] </p>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000020">Todo:</a></b></dt><dd>use dotprec accumulator here instead </dd></dl>

<p>Implements <a class="el" href="classFobj.shtml#acf5ccd1fd7b302c8a1c77081b606a6ad">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00128">128</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00028">BB</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00075">LabBox::Box</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00066">CC</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00064">Data</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00030">GAMMA1PLUS1OVERBB</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00068">n_interval_calls</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00024">PI</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00241">RSSample::Samples</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01008">taylor::sin()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01095">taylor::tan()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a7c759aeef9b7dbe5223ea3a564c60124" title="Track number of interval function calls.">n_interval_calls</a>++;
                    <span class="comment">//, z=Ub(Box);</span>
  <span class="keywordtype">size_t</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (X.Box);
  <span class="comment">// the logarithm of data-independent term in the product likelihood</span>
  interval lnNc = _real(<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.size()) * 
                  <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (X.Box[a], 1.0 / <a class="code" href="FShiryaev1D_8hpp.shtml#ad91fa5bb7926a489c6e63eb6f6ca4a19">BB</a>) / <a class="code" href="FShiryaev1D_8hpp.shtml#abca812365443438840de4561c84b2c49">GAMMA1PLUS1OVERBB</a> );
  
  interval result = lnNc;
  vector&lt;LabPnt&gt;::const_iterator it = <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.begin();
  <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i0=<a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(it-&gt;Pnt); it!=<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.end(); it++)
  {
    interval aXtoL = X.Box[a] * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (_interval(it-&gt;Pnt[i0]), <a class="code" href="FShiryaev1D_8hpp.shtml#ad91fa5bb7926a489c6e63eb6f6ca4a19">BB</a>);
    result += ( (-aXtoL) + <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(1.0 + (<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a306213ac1c465cf9d2bd6d1e502fcce2">CC</a> * <a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">sin</a> (aXtoL * <a class="code" href="namespacetaylor.shtml#ac2888bbea40e7b720c6502639680302a">tan</a> (<a class="code" href="FShiryaev1D_8hpp.shtml#ad91fa5bb7926a489c6e63eb6f6ca4a19">BB</a> * <a class="code" href="FShiryaev1D_8hpp.shtml#a598a3330b3c21701223ee0ca14316eca">PI</a>)))) );
  }
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? (result) : <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(result);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa14358629387c248e96ccc8183fa9353"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::operator()" ref="aa14358629387c248e96ccc8183fa9353" args="(const LabPnt &amp;A) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real FShiryaev1D_Lkl_aa_fromData::operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classLabPnt.shtml">LabPnt</a> &amp;&#160;</td>
          <td class="paramname"><em>LP</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a pure virtual function for real image of real points under <a class="el" href="classFobj.shtml" title="An abstract class for target function objects.">Fobj</a> </p>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000021">Todo:</a></b></dt><dd>use dotprec accumulator here instead </dd></dl>

<p>Implements <a class="el" href="classFobj.shtml#a7e89aa4918cf8e40683dde607257d1ee">Fobj</a>.</p>

<p>Definition at line <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00148">148</a> of file <a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a>.</p>

<p>References <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00029">bb</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00065">cc</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00064">Data</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00923">taylor::exp()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00031">Gamma1plus1overbb</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00960">taylor::ln()</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00070">n_real_calls</a>, <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00025">Pi</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00033">LabPnt::Pnt</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l00815">taylor::pow()</a>, <a class="el" href="SmallClasses_8hpp_source.shtml#l00241">RSSample::Samples</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01008">taylor::sin()</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01095">taylor::tan()</a>, and <a class="el" href="Fobj_8hpp_source.shtml#l00049">Fobj::UsingLogDensity</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1a371cc6b90e1b0a1975d1ddbcdac4eb" title="Track number of real function calls.">n_real_calls</a>++;
  <span class="keywordtype">size_t</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (X.Pnt);
  <span class="comment">// the logarithm of data-independent term in the product likelihood</span>
  real lnNc = _real(<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.size()) * 
              <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>( <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (X.Pnt[a], 1.0 / <a class="code" href="FShiryaev1D_8hpp.shtml#afe4fb267f5fd876bc5f069b0a76054e4">bb</a>) / <a class="code" href="FShiryaev1D_8hpp.shtml#a69136b13d995adc5cbd3e951eaa6da60">Gamma1plus1overbb</a> );
  real result = lnNc;
  vector&lt;LabPnt&gt;::const_iterator it = <a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.begin();
  <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i0=<a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(it-&gt;Pnt); it!=<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337" title="Store the data to estimate parameter aa.">Data</a>.<a class="code" href="classRSSample.shtml#a16622505cb282b5ebe608479fc026c12" title="An STL vector container to store accepted samples of labeled points.">Samples</a>.end(); it++)
  {
    real aXtoL = X.Pnt[a] * <a class="code" href="namespacetaylor.shtml#a769606a4634cc75e25da1a652cf19b14">pow</a> (it-&gt;Pnt[i0], <a class="code" href="FShiryaev1D_8hpp.shtml#afe4fb267f5fd876bc5f069b0a76054e4">bb</a>);
    result += ( (-aXtoL) + <a class="code" href="namespacetaylor.shtml#a41b79fca8d7b9a92dee56066fe632560">ln</a>(1.0 + (<a class="code" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21" title="cc is assumed to be known">cc</a> * <a class="code" href="namespacetaylor.shtml#ae72c8b625cbb6c9d852c823755ea5299">sin</a> (aXtoL * <a class="code" href="namespacetaylor.shtml#ac2888bbea40e7b720c6502639680302a">tan</a> (<a class="code" href="FShiryaev1D_8hpp.shtml#afe4fb267f5fd876bc5f069b0a76054e4">bb</a> * <a class="code" href="FShiryaev1D_8hpp.shtml#a0c233fcb94ea9f05596b48427095806e">Pi</a>)))) );
  }
  <span class="keywordflow">return</span> (<a class="code" href="classFobj.shtml#acf1d6b659549cea75e54582668ea7c3b" title="a flag for working on the log(target shape) scale">UsingLogDensity</a>) ? (result) : <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a>(result);
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a1790f5e4dfc6d207371994c04e154c21"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::cc" ref="a1790f5e4dfc6d207371994c04e154c21" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1790f5e4dfc6d207371994c04e154c21">FShiryaev1D_Lkl_aa_fromData::cc</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>cc is assumed to be known </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00065">65</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00104">FShiryaev1D_Lkl_aa_fromData()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00148">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a306213ac1c465cf9d2bd6d1e502fcce2"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::CC" ref="a306213ac1c465cf9d2bd6d1e502fcce2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a306213ac1c465cf9d2bd6d1e502fcce2">FShiryaev1D_Lkl_aa_fromData::CC</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00066">66</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00104">FShiryaev1D_Lkl_aa_fromData()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00128">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a63bdd5ba904fa6775561cdd28176b337"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::Data" ref="a63bdd5ba904fa6775561cdd28176b337" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classRSSample.shtml">RSSample</a>&amp; <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a63bdd5ba904fa6775561cdd28176b337">FShiryaev1D_Lkl_aa_fromData::Data</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Store the data to estimate parameter aa. </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00064">64</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00128">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a7c759aeef9b7dbe5223ea3a564c60124"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::n_interval_calls" ref="a7c759aeef9b7dbe5223ea3a564c60124" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a7c759aeef9b7dbe5223ea3a564c60124">FShiryaev1D_Lkl_aa_fromData::n_interval_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of interval function calls. </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00068">68</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00078">get_interval_calls()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00128">operator()()</a>.</p>

</div>
</div>
<a class="anchor" id="a1a371cc6b90e1b0a1975d1ddbcdac4eb"></a><!-- doxytag: member="FShiryaev1D_Lkl_aa_fromData::n_real_calls" ref="a1a371cc6b90e1b0a1975d1ddbcdac4eb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml#a1a371cc6b90e1b0a1975d1ddbcdac4eb">FShiryaev1D_Lkl_aa_fromData::n_real_calls</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Track number of real function calls. </p>

<p>Definition at line <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00070">70</a> of file <a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a>.</p>

<p>Referenced by <a class="el" href="FShiryaev1D_8hpp_source.shtml#l00083">get_real_calls()</a>, and <a class="el" href="FShiryaev1D_8cpp_source.shtml#l00148">operator()()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="FShiryaev1D_8hpp_source.shtml">FShiryaev1D.hpp</a></li>
<li><a class="el" href="FShiryaev1D_8cpp_source.shtml">FShiryaev1D.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classFShiryaev1D__Lkl__aa__fromData.shtml">FShiryaev1D_Lkl_aa_fromData</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:25 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
