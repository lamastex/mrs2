<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: RosenFobj2D.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('RosenFobj2D_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">RosenFobj2D.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="RosenFobj2D_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;<a class="code" href="RosenFobj2D_8hpp.shtml" title="Declarations for MappedSPnode 1-d example function object class.">RosenFobj2D.hpp</a>&quot;</span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &lt;cmath&gt;</span> <span class="comment">//to use M_PI</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00011"></a>00011 <span class="comment">//#include &quot;cxsc.hpp&quot;</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="keyword">using namespace </span>cxsc;
<a name="l00014"></a>00014 <span class="keyword">using namespace </span>std;
<a name="l00015"></a>00015 <span class="keyword">using namespace </span>subpavings;
<a name="l00016"></a>00016 
<a name="l00017"></a><a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">00017</a> real <a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> = 1.0;
<a name="l00018"></a><a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">00018</a> real <a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> = 100.0;
<a name="l00019"></a>00019 
<a name="l00020"></a><a class="code" href="classRosenFobj2D.shtml#a8ffb3da4785817edc98ac43b67c4d0ee">00020</a> interval <a class="code" href="classRosenFobj2D.shtml#a8ffb3da4785817edc98ac43b67c4d0ee" title="declare function for interval image of a box">RosenFobj2D::operator()</a>(<span class="keyword">const</span> cxsc::interval&amp; ival1,
<a name="l00021"></a>00021                               <span class="keyword">const</span> cxsc::interval&amp; ival2)<span class="keyword"> const</span>
<a name="l00022"></a>00022 <span class="keyword"></span>{
<a name="l00023"></a>00023 <span class="comment">//  cout &lt;&lt; &quot;=======int=========&quot; &lt;&lt; endl;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025   ivector ival(2);
<a name="l00026"></a>00026   ival[1] = ival1;
<a name="l00027"></a>00027   ival[2] = ival2;
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="comment">//  cout &lt;&lt; ival &lt;&lt; endl;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031   interval result(0.0, 0.0);
<a name="l00032"></a>00032   
<a name="l00033"></a>00033   <span class="keywordtype">int</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(ival), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(ival);
<a name="l00034"></a>00034   
<a name="l00035"></a>00035   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = a + 1; i &lt;= z; i++)
<a name="l00036"></a>00036     {
<a name="l00037"></a>00037       result = result + (<a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> * <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (ival[i] - <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (ival[i - 1])) +
<a name="l00038"></a>00038         <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (ival[i - 1] - 1.0));
<a name="l00039"></a>00039     }
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="comment">//  cout &lt;&lt; result &lt;&lt; endl;</span>
<a name="l00042"></a>00042 
<a name="l00043"></a>00043   result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-(<a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> * result));
<a name="l00044"></a>00044   
<a name="l00045"></a>00045 <span class="comment">//  cout &lt;&lt; &quot;Result: &quot; &lt;&lt; result &lt;&lt; endl ;</span>
<a name="l00046"></a>00046 <span class="comment">//  cout &lt;&lt; &quot;=======int=========&quot; &lt;&lt; endl;</span>
<a name="l00047"></a>00047   
<a name="l00048"></a>00048   <span class="keywordflow">return</span> result;
<a name="l00049"></a>00049   
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00053"></a><a class="code" href="classRosenFobj2D.shtml#aa3b4b73aa5f8cfa9776b86b8df641c15">00053</a> real <a class="code" href="classRosenFobj2D.shtml#a8ffb3da4785817edc98ac43b67c4d0ee" title="declare function for interval image of a box">RosenFobj2D::operator()</a>(<span class="keyword">const</span> cxsc::real&amp; r1,<span class="keyword">const</span> cxsc::real&amp; r2)<span class="keyword"> const</span>
<a name="l00054"></a>00054 <span class="keyword"></span>{   
<a name="l00055"></a>00055   real result = 0.0;
<a name="l00056"></a>00056    
<a name="l00057"></a>00057    rvector r(2);
<a name="l00058"></a>00058    r[1] = r1;
<a name="l00059"></a>00059    r[2] = r2;
<a name="l00060"></a>00060    
<a name="l00061"></a>00061   <span class="comment">// cout &lt;&lt; &quot;=======real=========&quot; &lt;&lt; endl;</span>
<a name="l00062"></a>00062   <span class="comment">// cout &lt;&lt; r &lt;&lt; endl;</span>
<a name="l00063"></a>00063    
<a name="l00064"></a>00064     <span class="keywordtype">int</span> a = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a>(r), z = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a>(r);
<a name="l00065"></a>00065    
<a name="l00066"></a>00066     <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = a + 1; i &lt;= z; i++)
<a name="l00067"></a>00067     {
<a name="l00068"></a>00068       result = result + (<a class="code" href="RosenFobj2D_8cpp.shtml#ab0eb64c1a8d085bcf238d947f3fa839f">Height</a> * <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (r[i] - <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (r[i - 1])) +
<a name="l00069"></a>00069         <a class="code" href="namespacetaylor.shtml#ad814819d656f5760e836bfa130f1d3a4">sqr</a> (r[i - 1] - 1.0));
<a name="l00070"></a>00070     }
<a name="l00071"></a>00071    
<a name="l00072"></a>00072    <span class="comment">//cout &lt;&lt; result &lt;&lt; endl;</span>
<a name="l00073"></a>00073    
<a name="l00074"></a>00074   result = <a class="code" href="namespacetaylor.shtml#a478ad7631859d3793d8fc867cbd813d6">exp</a> (-(<a class="code" href="RosenFobj2D_8cpp.shtml#aec5c4d9798cfa73539577e4a2206ab1a">Tinverse</a> * result));
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="comment">//  cout &lt;&lt; &quot;Result: &quot; &lt;&lt; result &lt;&lt; endl; </span>
<a name="l00077"></a>00077 <span class="comment">//  cout &lt;&lt; &quot;=======real=========&quot; &lt;&lt; endl;</span>
<a name="l00078"></a>00078 
<a name="l00079"></a>00079    <span class="keywordflow">return</span> result;
<a name="l00080"></a>00080 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="RosenFobj2D_8cpp.shtml">RosenFobj2D.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:17 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
