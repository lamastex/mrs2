<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: RGBColour.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('RGBColour_8cpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">RGBColour.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="RGBColour_8cpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;<a class="code" href="RGBColour_8hpp.shtml" title="Declarations for RGBColour class.">RGBColour.hpp</a>&quot;</span>
<a name="l00009"></a>00009 <span class="comment">//#include &quot;cxsc.hpp&quot;</span>
<a name="l00010"></a>00010 
<a name="l00011"></a>00011 <span class="comment">// to use std input/output</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 
<a name="l00015"></a><a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">00015</a> <span class="keywordtype">void</span> <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">RGBColour::normalise</a>()
<a name="l00016"></a>00016 {
<a name="l00017"></a>00017 
<a name="l00018"></a>00018     <span class="keywordflow">if</span> (<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> &gt; 1.0 || <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> &gt; 1.0 || <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> &gt; 1.0) {
<a name="l00019"></a>00019         <span class="keywordtype">double</span> total = <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> + <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> + <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00020"></a>00020         <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> /= total;
<a name="l00021"></a>00021         <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> /= total;
<a name="l00022"></a>00022         blue /= total;
<a name="l00023"></a>00023     }
<a name="l00024"></a>00024 }
<a name="l00025"></a>00025 
<a name="l00026"></a><a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9">00026</a> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour::RGBColour</a>() : red(0.0), green (0.0), blue (0.0) {}
<a name="l00027"></a>00027 
<a name="l00028"></a><a class="code" href="classRGBColour.shtml#ae19ea292a3754c4af6972f643e86dd5e">00028</a> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour::RGBColour</a>(<span class="keywordtype">double</span> r, <span class="keywordtype">double</span> g, <span class="keywordtype">double</span> b)
<a name="l00029"></a>00029                 : red(r), green (g), blue (b)
<a name="l00030"></a>00030 {
<a name="l00031"></a>00031     <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00032"></a>00032 }
<a name="l00033"></a>00033 
<a name="l00034"></a><a class="code" href="classRGBColour.shtml#aff6468f7598680fbcccc7430de435961">00034</a> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour::RGBColour</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; other)
<a name="l00035"></a>00035                 : red(other.red), green (other.green), blue (other.blue) {}
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="classRGBColour.shtml#a12d83c5eafe55b9aab5c62cc47c4d495">00037</a> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; <a class="code" href="classRGBColour.shtml#a12d83c5eafe55b9aab5c62cc47c4d495">RGBColour::operator=</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039     <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> = rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a>;
<a name="l00040"></a>00040     <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> = rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a>;
<a name="l00041"></a>00041     <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> = rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00042"></a>00042     <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00043"></a>00043 
<a name="l00044"></a>00044     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00045"></a>00045 }
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="classRGBColour.shtml#a7bc8965e22d903453aaff8a7aa05c107">00047</a> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; <a class="code" href="classRGBColour.shtml#a7bc8965e22d903453aaff8a7aa05c107">RGBColour::operator+=</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049     <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> += rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a>;
<a name="l00050"></a>00050     <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> += rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a>;
<a name="l00051"></a>00051     <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> += rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00052"></a>00052     <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00057"></a><a class="code" href="classRGBColour.shtml#a713238eb960ab76b5be90d9052e6decd">00057</a> <a class="code" href="classRGBColour.shtml">RGBColour</a> <a class="code" href="classRGBColour.shtml#a713238eb960ab76b5be90d9052e6decd">RGBColour::operator+</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00058"></a>00058 <span class="keyword"></span>{
<a name="l00059"></a>00059     <span class="keywordflow">return</span> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour</a>(*<span class="keyword">this</span>) += rhs;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 }
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="classRGBColour.shtml#aef34c776d78d25b97c12f53010fdb383">00063</a> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; <a class="code" href="classRGBColour.shtml#aef34c776d78d25b97c12f53010fdb383">RGBColour::operator-=</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)
<a name="l00064"></a>00064 {
<a name="l00065"></a>00065     <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> &gt; rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> ? <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> -= rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> : 0.0;
<a name="l00066"></a>00066     <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> &gt; rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> ? <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> -= rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> : 0.0;
<a name="l00067"></a>00067     <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> &gt; rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> ? <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> -= rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> : 0.0;
<a name="l00068"></a>00068     <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00069"></a>00069 
<a name="l00070"></a>00070     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00071"></a>00071 }
<a name="l00072"></a>00072 
<a name="l00073"></a><a class="code" href="classRGBColour.shtml#a1269d240b66c9981ab0ff605b6b3483b">00073</a> <a class="code" href="classRGBColour.shtml">RGBColour</a> <a class="code" href="classRGBColour.shtml#a1269d240b66c9981ab0ff605b6b3483b">RGBColour::operator-</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00074"></a>00074 <span class="keyword"></span>{
<a name="l00075"></a>00075     <span class="keywordflow">return</span> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour</a>(*<span class="keyword">this</span>) -= rhs;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 }
<a name="l00078"></a>00078 
<a name="l00079"></a><a class="code" href="classRGBColour.shtml#aafad94bdb3150ed9878bb892bdb03930">00079</a> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; <a class="code" href="classRGBColour.shtml#aafad94bdb3150ed9878bb892bdb03930">RGBColour::operator*=</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)
<a name="l00080"></a>00080 {
<a name="l00081"></a>00081     <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> = <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> * rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a>;
<a name="l00082"></a>00082     <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> = <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> * rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a>;
<a name="l00083"></a>00083     <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> = <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> * rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00084"></a>00084     <a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00087"></a>00087 }
<a name="l00088"></a>00088 
<a name="l00089"></a><a class="code" href="classRGBColour.shtml#acd5eabcef1f0adedabf00d1353d3e14a">00089</a> <a class="code" href="classRGBColour.shtml">RGBColour</a> <a class="code" href="classRGBColour.shtml#acd5eabcef1f0adedabf00d1353d3e14a">RGBColour::operator*</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00090"></a>00090 <span class="keyword"></span>{
<a name="l00091"></a>00091     <span class="keywordflow">return</span> <a class="code" href="classRGBColour.shtml#ac7560f6df5568511e29da518f20960b9" title="no argument constructor">RGBColour</a>(*<span class="keyword">this</span>) *= rhs;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 }
<a name="l00094"></a>00094 
<a name="l00095"></a><a class="code" href="classRGBColour.shtml#a3d7f923865e6584ec5c543ab253b0a64">00095</a> <span class="keywordtype">bool</span> <a class="code" href="classRGBColour.shtml#a3d7f923865e6584ec5c543ab253b0a64">RGBColour::operator==</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00096"></a>00096 <span class="keyword"></span>{
<a name="l00097"></a>00097     <span class="keywordflow">return</span> !(*this &lt; rhs) &amp;&amp; !(*this &gt; rhs);
<a name="l00098"></a>00098 }
<a name="l00099"></a>00099 
<a name="l00100"></a><a class="code" href="classRGBColour.shtml#a3154f056ae4dace6a72abb09fa414ce1">00100</a> <span class="keywordtype">bool</span> <a class="code" href="classRGBColour.shtml#a3154f056ae4dace6a72abb09fa414ce1">RGBColour::operator!=</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00101"></a>00101 <span class="keyword"></span>{
<a name="l00102"></a>00102     <span class="keywordflow">return</span> (*<span class="keyword">this</span> &lt; rhs) || !(*<span class="keyword">this</span> &gt; rhs);
<a name="l00103"></a>00103 }
<a name="l00104"></a>00104 
<a name="l00105"></a><a class="code" href="classRGBColour.shtml#a1f18a409ee0f924d92705a8489b68a8d">00105</a> <span class="keywordtype">bool</span> <a class="code" href="classRGBColour.shtml#a1f18a409ee0f924d92705a8489b68a8d">RGBColour::operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00106"></a>00106 <span class="keyword"></span>{
<a name="l00107"></a>00107     <span class="keywordflow">return</span> ((<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> + <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> + <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>) &lt; (rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> + rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> + rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>));
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 }
<a name="l00110"></a>00110 
<a name="l00111"></a><a class="code" href="classRGBColour.shtml#a8ba92041934e0d967034870dba3d694c">00111</a> <span class="keywordtype">bool</span> <a class="code" href="classRGBColour.shtml#a8ba92041934e0d967034870dba3d694c">RGBColour::operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00112"></a>00112 <span class="keyword"></span>{
<a name="l00113"></a>00113      <span class="keywordflow">return</span> ((<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> + <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> + <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>) &gt; (rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> + rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> + rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>));
<a name="l00114"></a>00114 }
<a name="l00115"></a>00115 
<a name="l00116"></a><a class="code" href="classRGBColour.shtml#ab90fbbf0cdd95bea8a3ded697a251ec8">00116</a> <a class="code" href="classRGBColour.shtml">RGBColour</a> <a class="code" href="classRGBColour.shtml#ab90fbbf0cdd95bea8a3ded697a251ec8">RGBColour::operator|</a>(<span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; rhs)<span class="keyword"> const</span>
<a name="l00117"></a>00117 <span class="keyword"></span>{
<a name="l00118"></a>00118     <a class="code" href="classRGBColour.shtml">RGBColour</a> newColour(*<span class="keyword">this</span>);
<a name="l00119"></a>00119     <span class="keywordflow">if</span> (rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> &gt; newColour.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a>) newColour.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> = rhs.<a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a>;
<a name="l00120"></a>00120     <span class="keywordflow">if</span> (rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> &gt; newColour.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a>) newColour.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> = rhs.<a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a>;
<a name="l00121"></a>00121     <span class="keywordflow">if</span> (rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> &gt; newColour.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>) newColour.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a> = rhs.<a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00122"></a>00122     newColour.<a class="code" href="classRGBColour.shtml#a6c3021deda4ea0283b3e19bf57629ee8">normalise</a>();
<a name="l00123"></a>00123 
<a name="l00124"></a>00124     <span class="keywordflow">return</span> newColour;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 }
<a name="l00127"></a>00127 
<a name="l00128"></a><a class="code" href="classRGBColour.shtml#aca18467cf41ca1c718d14d505955f316">00128</a> <span class="keywordtype">void</span> <a class="code" href="classRGBColour.shtml#aca18467cf41ca1c718d14d505955f316">RGBColour::print</a>(std::ostream&amp; os)<span class="keyword"> const</span>
<a name="l00129"></a>00129 <span class="keyword"></span>{
<a name="l00130"></a>00130 
<a name="l00131"></a>00131     os &lt;&lt; <a class="code" href="classRGBColour.shtml#a459ad477ba571d1749e68c5d57869913">red</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classRGBColour.shtml#a5530e8f8b209d95c3b2c3127c62676e1">green</a> &lt;&lt; <span class="charliteral">&#39;\t&#39;</span> &lt;&lt; <a class="code" href="classRGBColour.shtml#a60f32f30efb99da74e903b3876b6f161">blue</a>;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 <span class="comment">//friend function</span>
<a name="l00137"></a><a class="code" href="RGBColour_8cpp.shtml#a6e6a3cd8dafbcde19eecfd77007dff42">00137</a> std::ostream&amp; <a class="code" href="adaptivehistogram_8cpp.shtml#ae2f172a2081430943222aff00bd4d1e8" title="Output the HistDescription object.">operator&lt;&lt;</a>(std::ostream&amp; os, <span class="keyword">const</span> <a class="code" href="classRGBColour.shtml">RGBColour</a>&amp; c)
<a name="l00138"></a>00138 {
<a name="l00139"></a>00139 
<a name="l00140"></a>00140     c.<a class="code" href="classRGBColour.shtml#aca18467cf41ca1c718d14d505955f316">print</a>(os);
<a name="l00141"></a>00141 
<a name="l00142"></a>00142     <span class="keywordflow">return</span> os;
<a name="l00143"></a>00143 }
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="RGBColour_8cpp.shtml">RGBColour.cpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:16 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
