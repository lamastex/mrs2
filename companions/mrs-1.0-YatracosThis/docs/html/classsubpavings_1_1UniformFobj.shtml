<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: subpavings::UniformFobj Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1UniformFobj.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">subpavings::UniformFobj Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="subpavings::UniformFobj" --><!-- doxytag: inherits="subpavings::MappedFobj" -->
<p><code>#include &lt;<a class="el" href="UniformFobj_8hpp_source.shtml">UniformFobj.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for subpavings::UniformFobj:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1UniformFobj__inherit__graph.png" border="0" usemap="#subpavings_1_1UniformFobj_inherit__map" alt="Inheritance graph"/></div>
<map name="subpavings_1_1UniformFobj_inherit__map" id="subpavings_1_1UniformFobj_inherit__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for subpavings::UniformFobj:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1UniformFobj__coll__graph.png" border="0" usemap="#subpavings_1_1UniformFobj_coll__map" alt="Collaboration graph"/></div>
<map name="subpavings_1_1UniformFobj_coll__map" id="subpavings_1_1UniformFobj_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classsubpavings_1_1UniformFobj-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a14ee239616478202d0787cbc92e26dd8">UniformFobj</a> (const cxsc::ivector &amp;ivec)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor  <a href="#a14ee239616478202d0787cbc92e26dd8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::interval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a109f9345700d9ddc134e06051ae41d3e">operator()</a> (const cxsc::ivector &amp;ivec) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">declare function for interval image of a box  <a href="#a109f9345700d9ddc134e06051ae41d3e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual cxsc::real&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a61875542e031ba76f2fe680ad690fc63">operator()</a> (const cxsc::rvector &amp;r) const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">declare function for real image of reals  <a href="#a61875542e031ba76f2fe680ad690fc63"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#ad6329a3137c929e7089b9235934e885a">getName</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">get the function name.  <a href="#ad6329a3137c929e7089b9235934e885a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a98f1449ee0a0fa6ca353dc19ed42a9af">~UniformFobj</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a98f1449ee0a0fa6ca353dc19ed42a9af"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#acc4e1905a8e4410db48794bf630364f5">UniformFobj</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const cxsc::ivector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="UniformFobj_8hpp_source.shtml#l00033">33</a> of file <a class="el" href="UniformFobj_8hpp_source.shtml">UniformFobj.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a14ee239616478202d0787cbc92e26dd8"></a><!-- doxytag: member="subpavings::UniformFobj::UniformFobj" ref="a14ee239616478202d0787cbc92e26dd8" args="(const cxsc::ivector &amp;ivec)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a14ee239616478202d0787cbc92e26dd8">subpavings::UniformFobj::UniformFobj</a> </td>
          <td>(</td>
          <td class="paramtype">const cxsc::ivector &amp;&#160;</td>
          <td class="paramname"><em>ivec</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>constructor </p>

<p>Definition at line <a class="el" href="UniformFobj_8cpp_source.shtml#l00034">34</a> of file <a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a>.</p>
<div class="fragment"><pre class="fragment">  : <a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>( ivec ) {}
</pre></div>
</div>
</div>
<a class="anchor" id="a98f1449ee0a0fa6ca353dc19ed42a9af"></a><!-- doxytag: member="subpavings::UniformFobj::~UniformFobj" ref="a98f1449ee0a0fa6ca353dc19ed42a9af" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a98f1449ee0a0fa6ca353dc19ed42a9af">subpavings::UniformFobj::~UniformFobj</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

<p>Definition at line <a class="el" href="UniformFobj_8cpp_source.shtml#l00081">81</a> of file <a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{}
</pre></div>
</div>
</div>
<a class="anchor" id="acc4e1905a8e4410db48794bf630364f5"></a><!-- doxytag: member="subpavings::UniformFobj::UniformFobj" ref="acc4e1905a8e4410db48794bf630364f5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1UniformFobj.shtml#a14ee239616478202d0787cbc92e26dd8">subpavings::UniformFobj::UniformFobj</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="ad6329a3137c929e7089b9235934e885a"></a><!-- doxytag: member="subpavings::UniformFobj::getName" ref="ad6329a3137c929e7089b9235934e885a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classsubpavings_1_1UniformFobj.shtml#ad6329a3137c929e7089b9235934e885a">subpavings::UniformFobj::getName</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>get the function name. </p>

<p>Reimplemented from <a class="el" href="classsubpavings_1_1MappedFobj.shtml#a852f7fc0282f2e331f4c10f459dc96ae">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="UniformFobj_8cpp_source.shtml#l00076">76</a> of file <a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> std::string(<span class="stringliteral">&quot;Uniform&quot;</span>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a109f9345700d9ddc134e06051ae41d3e"></a><!-- doxytag: member="subpavings::UniformFobj::operator()" ref="a109f9345700d9ddc134e06051ae41d3e" args="(const cxsc::ivector &amp;ivec) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">interval subpavings::UniformFobj::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::ivector &amp;&#160;</td>
          <td class="paramname"><em>ivec</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>declare function for interval image of a box </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj.shtml#aad44e53cb112ea94a970a9bf3888fa6b">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="UniformFobj_8cpp_source.shtml#l00037">37</a> of file <a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a>.</p>

<p>References <a class="el" href="UniformFobj_8hpp_source.shtml#l00059">domain</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="toolz_8cpp_source.shtml#l00285">realVolume()</a>, and <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (ivec);
  <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (ivec);
  <span class="keywordtype">int</span> dim = ub - lb + 1;
  
  cxsc::interval result = 1.0/interval( <a class="code" href="toolz_8cpp.shtml#acdd3d20a2f2c8114e1195f5e6baa078f" title="Return the volume of box x as a real.">realVolume</a>(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>) );
  
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb; i &lt;= ub; ++i) {
    <span class="keywordflow">if</span> (Inf(ivec[i]) &lt; Inf(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) || Sup(ivec[i]) &gt; Sup(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) )
      SetInf(result, 0.0);
    <span class="keywordflow">if</span> (Inf(ivec[i]) &gt; Sup(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) || Sup(ivec[i]) &lt; Inf(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) )
      SetSup(result, 0.0);
    
  }
  
  <span class="keywordflow">return</span> result;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61875542e031ba76f2fe680ad690fc63"></a><!-- doxytag: member="subpavings::UniformFobj::operator()" ref="a61875542e031ba76f2fe680ad690fc63" args="(const cxsc::rvector &amp;r) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">real subpavings::UniformFobj::operator() </td>
          <td>(</td>
          <td class="paramtype">const cxsc::rvector &amp;&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>declare function for real image of reals </p>

<p>Implements <a class="el" href="classsubpavings_1_1MappedFobj.shtml#aed79714dcf7fb4eb54d0488428909291">subpavings::MappedFobj</a>.</p>

<p>Definition at line <a class="el" href="UniformFobj_8cpp_source.shtml#l00057">57</a> of file <a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a>.</p>

<p>References <a class="el" href="UniformFobj_8hpp_source.shtml#l00059">domain</a>, <a class="el" href="dim2taylor_8cpp_source.shtml#l01624">taylor::Lb()</a>, <a class="el" href="toolz_8cpp_source.shtml#l00285">realVolume()</a>, and <a class="el" href="dim2taylor_8cpp_source.shtml#l01629">taylor::Ub()</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> lb = <a class="code" href="namespacetaylor.shtml#a2bb1593763f084acddd2e1a1e1efaa11">Lb</a> (r);
  <span class="keywordtype">int</span> ub = <a class="code" href="namespacetaylor.shtml#a38b201904beee95d9528b9d656430c07">Ub</a> (r);
  <span class="keywordtype">int</span> dim = ub - lb + 1;
  
  cxsc::real result = 1.0/<a class="code" href="toolz_8cpp.shtml#acdd3d20a2f2c8114e1195f5e6baa078f" title="Return the volume of box x as a real.">realVolume</a>(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>);
  
  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = lb; i &lt;= ub &amp;&amp; (result != 0.0); ++i) {
    <span class="keywordflow">if</span> (r[i] &lt; Inf(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) || r[i] &gt; Sup(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) )
      result = 0.0;
    <span class="keywordflow">if</span> (r[i] &gt; Sup(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) || r[i] &lt; Inf(<a class="code" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">domain</a>[i]) )
      result = 0.0;
    
  }
  <span class="keywordflow">return</span> result;
  
}
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="add106ff804e87898e5a6416ad0a72913"></a><!-- doxytag: member="subpavings::UniformFobj::domain" ref="add106ff804e87898e5a6416ad0a72913" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const cxsc::ivector <a class="el" href="classsubpavings_1_1UniformFobj.shtml#add106ff804e87898e5a6416ad0a72913">subpavings::UniformFobj::domain</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="UniformFobj_8hpp_source.shtml#l00059">59</a> of file <a class="el" href="UniformFobj_8hpp_source.shtml">UniformFobj.hpp</a>.</p>

<p>Referenced by <a class="el" href="UniformFobj_8cpp_source.shtml#l00037">operator()()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="UniformFobj_8hpp_source.shtml">UniformFobj.hpp</a></li>
<li><a class="el" href="UniformFobj_8cpp_source.shtml">UniformFobj.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespacesubpavings.shtml">subpavings</a>      </li>
      <li class="navelem"><a class="el" href="classsubpavings_1_1UniformFobj.shtml">UniformFobj</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:42 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
