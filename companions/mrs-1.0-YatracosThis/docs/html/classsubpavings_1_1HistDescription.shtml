<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: subpavings::HistDescription Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classsubpavings_1_1HistDescription.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">subpavings::HistDescription Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="subpavings::HistDescription" -->
<p>A class for the histogram description.  
 <a href="classsubpavings_1_1HistDescription.shtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for subpavings::HistDescription:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><img src="classsubpavings_1_1HistDescription__coll__graph.png" border="0" usemap="#subpavings_1_1HistDescription_coll__map" alt="Collaboration graph"/></div>
<map name="subpavings_1_1HistDescription_coll__map" id="subpavings_1_1HistDescription_coll__map">
</map>
<center><span class="legend">[<a target="top" href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classsubpavings_1_1HistDescription-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#aa037991228f9fc3595310b7d9a645a6b">HistDescription</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#aa037991228f9fc3595310b7d9a645a6b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#adacde2a48f78ab90db0bdd251f0d13ab">HistDescription</a> (std::string str)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor from string.  <a href="#adacde2a48f78ab90db0bdd251f0d13ab"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a132244f2567c62a6b481ec3fa93ebe5e">HistDescription</a> (const <a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp;other)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a132244f2567c62a6b481ec3fa93ebe5e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a6982d4933571625373952ffe5f7e9d4f">operator=</a> (const <a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp;rhs)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a6982d4933571625373952ffe5f7e9d4f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#ade9e4041c1ca6de14b2b82ff7c7465e1">setIsGood</a> (bool b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the good string flag.  <a href="#ade9e4041c1ca6de14b2b82ff7c7465e1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a8f53638ba1ddc56e63174d18510d92af">peekFirst</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first level in the description.  <a href="#a8f53638ba1ddc56e63174d18510d92af"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a493c821ce318a6a4d950ea73c1f7ff11">popFirst</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Strip off the first level in the description.  <a href="#a493c821ce318a6a4d950ea73c1f7ff11"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a4c48acd03fc56cb6e8b3d2645ee35c31">getIsGood</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the goodstring flag.  <a href="#a4c48acd03fc56cb6e8b3d2645ee35c31"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a35a0b15e904f1987b6603c7ffeb22f75">getDepthString</a> () const </td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the depthString.  <a href="#a35a0b15e904f1987b6603c7ffeb22f75"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>A class for the histogram description. </p>
<p>Describes a histogram as a ordered collection of leaf node depths. Root has depth 0.</p>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000001">Todo:</a></b></dt><dd>complete this class and use instead of strings in describing histograms.</dd></dl>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02008">2008</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa037991228f9fc3595310b7d9a645a6b"></a><!-- doxytag: member="subpavings::HistDescription::HistDescription" ref="aa037991228f9fc3595310b7d9a645a6b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1HistDescription.shtml#aa037991228f9fc3595310b7d9a645a6b">subpavings::HistDescription::HistDescription</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Default constructor. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02022">2022</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
<div class="fragment"><pre class="fragment">: <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>(<span class="stringliteral">&quot;&quot;</span>), <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>(<span class="keyword">true</span>) {}
</pre></div>
</div>
</div>
<a class="anchor" id="adacde2a48f78ab90db0bdd251f0d13ab"></a><!-- doxytag: member="subpavings::HistDescription::HistDescription" ref="adacde2a48f78ab90db0bdd251f0d13ab" args="(std::string str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1HistDescription.shtml#aa037991228f9fc3595310b7d9a645a6b">subpavings::HistDescription::HistDescription</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td><code> [inline, explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor from string. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02026">2026</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
<div class="fragment"><pre class="fragment">                                            : <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>(str),
                                                <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>(<span class="keyword">true</span>) {}
</pre></div>
</div>
</div>
<a class="anchor" id="a132244f2567c62a6b481ec3fa93ebe5e"></a><!-- doxytag: member="subpavings::HistDescription::HistDescription" ref="a132244f2567c62a6b481ec3fa93ebe5e" args="(const HistDescription &amp;other)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1HistDescription.shtml#aa037991228f9fc3595310b7d9a645a6b">subpavings::HistDescription::HistDescription</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td><code> [inline, explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy constructor. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02031">2031</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
<div class="fragment"><pre class="fragment">                : <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>(other.<a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>),
                  <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>(other.<a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>) {}
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a35a0b15e904f1987b6603c7ffeb22f75"></a><!-- doxytag: member="subpavings::HistDescription::getDepthString" ref="a35a0b15e904f1987b6603c7ffeb22f75" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classsubpavings_1_1HistDescription.shtml#a35a0b15e904f1987b6603c7ffeb22f75">subpavings::HistDescription::getDepthString</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the depthString. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02059">2059</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>

<p>Referenced by <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05890">subpavings::operator&lt;()</a>, and <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05882">subpavings::operator&lt;&lt;()</a>.</p>
<div class="fragment"><pre class="fragment">    { <span class="keywordflow">return</span> <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>; }
</pre></div>
</div>
</div>
<a class="anchor" id="a4c48acd03fc56cb6e8b3d2645ee35c31"></a><!-- doxytag: member="subpavings::HistDescription::getIsGood" ref="a4c48acd03fc56cb6e8b3d2645ee35c31" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1HistDescription.shtml#a4c48acd03fc56cb6e8b3d2645ee35c31">subpavings::HistDescription::getIsGood</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the goodstring flag. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02054">2054</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
<div class="fragment"><pre class="fragment">    { <span class="keywordflow">return</span> <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>; }
</pre></div>
</div>
</div>
<a class="anchor" id="a6982d4933571625373952ffe5f7e9d4f"></a><!-- doxytag: member="subpavings::HistDescription::operator=" ref="a6982d4933571625373952ffe5f7e9d4f" args="(const HistDescription &amp;rhs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp; HistDescription::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy assignment operator. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05818">5818</a> of file <a class="el" href="adaptivehistogram_8cpp_source.shtml">adaptivehistogram.cpp</a>.</p>

<p>References <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02012">depthString</a>, and <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02016">goodString</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a> = rhs.<a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>;
    <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a> = rhs.<a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a>;
    <span class="keywordflow">return</span> *<span class="keyword">this</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8f53638ba1ddc56e63174d18510d92af"></a><!-- doxytag: member="subpavings::HistDescription::peekFirst" ref="a8f53638ba1ddc56e63174d18510d92af" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classsubpavings_1_1HistDescription.shtml#a8f53638ba1ddc56e63174d18510d92af">HistDescription::peekFirst</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the first level in the description. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05826">5826</a> of file <a class="el" href="adaptivehistogram_8cpp_source.shtml">adaptivehistogram.cpp</a>.</p>

<p>References <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02012">depthString</a>, and <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02016">goodString</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="comment">// parse string to get first level out</span>
    std::string sep = <span class="stringliteral">&quot;, &quot;</span>;
    <span class="keywordtype">size_t</span> startpos = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.find_first_not_of(sep);
    <span class="keywordtype">size_t</span> endpos = std::string::npos;
    <span class="keywordtype">size_t</span> newstartpos = std::string::npos;
    <span class="keywordtype">int</span> depth = 0;
    std::string str = <span class="stringliteral">&quot;&quot;</span>;
    <span class="keywordflow">if</span> (startpos != std::string::npos) {
        endpos = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.find_first_of(sep, startpos);
        <span class="comment">//not the last digit</span>
        <span class="keywordflow">if</span> (endpos != std::string::npos) {
            str = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.substr(startpos, endpos-startpos);
        }
        <span class="comment">//last digit</span>
        <span class="keywordflow">else</span> {
            str = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.substr(startpos);
        }
    }
    depth = atoi(str.c_str()); <span class="comment">// 0 if not valid integer</span>
    <span class="keywordflow">if</span> (depth == 0) {
        <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a> = <span class="keyword">false</span>;
    }

    <span class="keywordflow">return</span> depth; <span class="comment">// 0 if not valid integer</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a493c821ce318a6a4d950ea73c1f7ff11"></a><!-- doxytag: member="subpavings::HistDescription::popFirst" ref="a493c821ce318a6a4d950ea73c1f7ff11" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1HistDescription.shtml#a493c821ce318a6a4d950ea73c1f7ff11">HistDescription::popFirst</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Strip off the first level in the description. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05855">5855</a> of file <a class="el" href="adaptivehistogram_8cpp_source.shtml">adaptivehistogram.cpp</a>.</p>

<p>References <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02012">depthString</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordtype">bool</span> stripped = <span class="keyword">false</span>;
    <span class="comment">// parse string to get first level out</span>
    std::string sep = <span class="stringliteral">&quot;, &quot;</span>;
    <span class="keywordtype">size_t</span> startpos = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.find_first_not_of(sep);
    <span class="keywordtype">size_t</span> endpos = std::string::npos;
    <span class="keywordtype">size_t</span> newstartpos = std::string::npos;
    <span class="keywordflow">if</span> (startpos != std::string::npos) {
        endpos = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.find_first_of(sep, startpos);
        <span class="comment">//not the last digit</span>
        <span class="keywordflow">if</span> (endpos != std::string::npos) {
            newstartpos = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.find_first_not_of(sep,
                                                    endpos + 1);
        }

        <span class="keywordflow">if</span> (newstartpos != std::string::npos) {
            <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a> = <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a>.substr(newstartpos);
        }
        <span class="keywordflow">else</span> <a class="code" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">depthString</a> = <span class="stringliteral">&quot;&quot;</span>;
        stripped = <span class="keyword">true</span>;
    }

    <span class="keywordflow">return</span> stripped;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ade9e4041c1ca6de14b2b82ff7c7465e1"></a><!-- doxytag: member="subpavings::HistDescription::setIsGood" ref="ade9e4041c1ca6de14b2b82ff7c7465e1" args="(bool b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsubpavings_1_1HistDescription.shtml#ade9e4041c1ca6de14b2b82ff7c7465e1">subpavings::HistDescription::setIsGood</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the good string flag. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02041">2041</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>
<div class="fragment"><pre class="fragment">    { <a class="code" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">goodString</a> = b; }
</pre></div>
</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a05dabb27d7e43834ac9a8a99d8237538"></a><!-- doxytag: member="subpavings::HistDescription::depthString" ref="a05dabb27d7e43834ac9a8a99d8237538" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classsubpavings_1_1HistDescription.shtml#a05dabb27d7e43834ac9a8a99d8237538">subpavings::HistDescription::depthString</a><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The depth string, a string of comma separated levels. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02012">2012</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>

<p>Referenced by <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05818">operator=()</a>, <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05826">peekFirst()</a>, and <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05855">popFirst()</a>.</p>

</div>
</div>
<a class="anchor" id="a3f246c1b82fb69929ec3761480c934b9"></a><!-- doxytag: member="subpavings::HistDescription::goodString" ref="a3f246c1b82fb69929ec3761480c934b9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsubpavings_1_1HistDescription.shtml#a3f246c1b82fb69929ec3761480c934b9">subpavings::HistDescription::goodString</a><code> [mutable, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>A flag for whether the instruction string is good. </p>

<p>Definition at line <a class="el" href="adaptivehistogram_8hpp_source.shtml#l02016">2016</a> of file <a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a>.</p>

<p>Referenced by <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05818">operator=()</a>, and <a class="el" href="adaptivehistogram_8cpp_source.shtml#l05826">peekFirst()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="adaptivehistogram_8hpp_source.shtml">adaptivehistogram.hpp</a></li>
<li><a class="el" href="adaptivehistogram_8cpp_source.shtml">adaptivehistogram.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespacesubpavings.shtml">subpavings</a>      </li>
      <li class="navelem"><a class="el" href="classsubpavings_1_1HistDescription.shtml">HistDescription</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:32 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
