<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>MRS: A C++ Class Library for Statistical Set Processing: collatorspnode.hpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">MRS: A C++ Class Library for Statistical Set Processing
   &#160;<span id="projectnumber">0.1.2-beta1300</span>
   </div>
   
  </td>
  
  
  
   
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript" src="dynsections.js"></script>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('collatorspnode_8hpp.shtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">collatorspnode.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="collatorspnode_8hpp.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">* Copyright (C) 2007, 2008, 2009, 2010, 2011 Raazesh Sainudiin</span>
<a name="l00003"></a>00003 <span class="comment">* Copyright (C) 2009, 2010 Jennifer Harlow</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* This file is part of mrs, a C++ class library for statistical set processing.</span>
<a name="l00006"></a>00006 <span class="comment">*</span>
<a name="l00007"></a>00007 <span class="comment">* mrs is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment">* it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment">* the Free Software Foundation; either version 3 of the License, or (at</span>
<a name="l00010"></a>00010 <span class="comment">* your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* This program is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">* General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">* along with this program; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>
<a name="l00020"></a>00020 <span class="comment">*/</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef ___COLLATORSPNODE_HPP__</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define ___COLLATORSPNODE_HPP__</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="rangecollection__hist_8hpp.shtml" title="RangeCollectionHist declarations.">rangecollection_hist.hpp</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="spnode_8hpp.shtml" title="SPnode (SubPaving) and associated non-member functions declarations.">spnode.hpp</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00039"></a>00039 <span class="keyword">namespace </span>subpavings {
<a name="l00040"></a>00040 
<a name="l00065"></a><a class="code" href="classsubpavings_1_1CollatorSPnode.shtml">00065</a>     <span class="keyword">class </span><a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> : <span class="keyword">public</span> <a class="code" href="classsubpavings_1_1SPnode.shtml" title="SPnodes are nodes in the representation of a subpaving as a binary tree.">SPnode</a> {
<a name="l00066"></a>00066     <span class="keyword">private</span>:
<a name="l00067"></a>00067         <span class="comment">/* theBox, dimension, label, parent, leftChild,</span>
<a name="l00068"></a>00068 <span class="comment">        rightChild and nodeName are inherited from base class.</span>
<a name="l00069"></a>00069 <span class="comment">        */</span>
<a name="l00070"></a>00070 
<a name="l00073"></a><a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#abecd2f87f50d84f2c3d04e6b0b15a5ec">00073</a>         <span class="keyword">mutable</span> <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#abecd2f87f50d84f2c3d04e6b0b15a5ec" title="A container of summary values from the collated subpavings.">summary</a>;
<a name="l00074"></a>00074 
<a name="l00083"></a>00083         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6f444e76ad6e0c65535e6278dbd775e5" title="default constructor,">CollatorSPnode</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1SPSnode.shtml" title="A derived class based on SPnode for processing sample data.">SPSnode</a> * <span class="keyword">const</span> spn, <span class="keywordtype">size_t</span> bigN);
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 
<a name="l00088"></a>00088         <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a3ba268993642c1fd5c702966a4fd4fba" title="Negates the summary for every node in tree rooted at this.">nodeNegate</a>(<span class="keywordtype">double</span> c);
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 
<a name="l00105"></a>00105         std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a9fe7256f1a62884e4bb8599a63abbbdf" title="Output for a node in a binary tree, tab-delimited.">leafAverageOutputTabs</a>(
<a name="l00106"></a>00106                             std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 
<a name="l00115"></a>00115         <a class="code" href="namespacesubpavings.shtml#ad8f0a077ee1c4678bcd1868f3aecd605" title="Define type VecDotPrec as a container of cxsc dotprecision variables.">VecDotPrec</a>&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ac0b072587e955a451fab739dcb538c37" title="Get the accumulations of absolute areas for leaf nodes.">getLeafNodeAbsAreaAccumulations</a>(<a class="code" href="namespacesubpavings.shtml#ad8f0a077ee1c4678bcd1868f3aecd605" title="Define type VecDotPrec as a container of cxsc dotprecision variables.">VecDotPrec</a>&amp; areaAcc) <span class="keyword">const</span>;
<a name="l00116"></a>00116 
<a name="l00128"></a>00128         real <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a0afe525dbddf958078e9a8eac6ea88a3" title="Get the total accumulated value of absolute areas for leaf nodes.">getLeafNodeAbsAreaAccumulationTotal</a>() <span class="keyword">const</span>;
<a name="l00129"></a>00129     
<a name="l00130"></a>00130 
<a name="l00137"></a>00137         <a class="code" href="namespacesubpavings.shtml#ad8f0a077ee1c4678bcd1868f3aecd605" title="Define type VecDotPrec as a container of cxsc dotprecision variables.">VecDotPrec</a>&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a8c566a24d35898fb54133cf310276468" title="Get the accumulations of summary values for leaf nodes.">getLeafNodeSummaryAccumulations</a>(<a class="code" href="namespacesubpavings.shtml#ad8f0a077ee1c4678bcd1868f3aecd605" title="Define type VecDotPrec as a container of cxsc dotprecision variables.">VecDotPrec</a>&amp; summAcc) <span class="keyword">const</span>;
<a name="l00138"></a>00138         
<a name="l00139"></a>00139         
<a name="l00145"></a>00145         <span class="keyword">static</span> <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a>&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a3a0733086ac4a95e954da0cd8f0e1dfa">dotDifferenceSummary</a>(<a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a>&amp; lhsSummary,
<a name="l00146"></a>00146                                 <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a>&amp; rhsSummary);
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 
<a name="l00158"></a>00158         <span class="keywordtype">bool</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a66a1a3e5a8c9c81e4f3b307360c2c495" title="make this the root of a tree representing summary differences">dotDiffPaving</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> spn);
<a name="l00159"></a>00159         
<a name="l00160"></a>00160         
<a name="l00161"></a>00161     <span class="keyword">public</span>:
<a name="l00162"></a>00162 
<a name="l00165"></a>00165         <span class="keyword">explicit</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6f444e76ad6e0c65535e6278dbd775e5" title="default constructor,">CollatorSPnode</a>();
<a name="l00166"></a>00166 
<a name="l00174"></a>00174         <span class="keyword">explicit</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6f444e76ad6e0c65535e6278dbd775e5" title="default constructor,">CollatorSPnode</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1SPSnode.shtml" title="A derived class based on SPnode for processing sample data.">SPSnode</a> * <span class="keyword">const</span> spn);
<a name="l00175"></a>00175 
<a name="l00180"></a>00180         <span class="keyword">explicit</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6f444e76ad6e0c65535e6278dbd775e5" title="default constructor,">CollatorSPnode</a>(ivector&amp; v, <span class="keywordtype">int</span> lab, <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a> summ);
<a name="l00181"></a>00181 
<a name="l00184"></a>00184         <span class="keyword">explicit</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6f444e76ad6e0c65535e6278dbd775e5" title="default constructor,">CollatorSPnode</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>&amp; other);
<a name="l00185"></a>00185 
<a name="l00188"></a>00188         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a01020423e529685b484b95a73b6432ee" title="Copy assignment operator.">operator=</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>&amp; rhs);
<a name="l00189"></a>00189 
<a name="l00190"></a>00190 
<a name="l00193"></a>00193         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ac71288d7ccff2a3ddf1509f5b3a54930">makeAverageCollation</a>() <span class="keyword">const</span>;
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 
<a name="l00196"></a>00196         <span class="comment">// Use base class destructor.</span>
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 
<a name="l00220"></a>00220         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aed3cb2aceae3c384eed427a404a6c8f6" title="Accessor for the parent of a node.">getParent</a>() <span class="keyword">const</span>;
<a name="l00221"></a>00221 
<a name="l00226"></a>00226         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a5e1b32d7fffa9cfc7865b384c2e89a82" title="Accessor for the left child of a node.">getLeftChild</a>() <span class="keyword">const</span>;
<a name="l00227"></a>00227 
<a name="l00232"></a>00232         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ab93823657d610d99e885317c2cf2e8f6" title="Accessor for the right child of a node.">getRightChild</a>() <span class="keyword">const</span>;
<a name="l00234"></a>00234 
<a name="l00237"></a>00237         <a class="code" href="namespacesubpavings.shtml#a6b4d2e61b2f0b65cacc9c9322d89bc37" title="Define type VecDbl as a container of doubles.">VecDbl</a> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aecf22d39cbb7289355a08cec62749800" title="Accessor for the summary.">getSummary</a>() <span class="keyword">const</span>;
<a name="l00238"></a>00238 
<a name="l00241"></a>00241         <span class="keywordtype">size_t</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a6470a98dd502247ca9e86582b3c422eb" title="Get number of subpavings summarised.">getNumberSummarised</a>() <span class="keyword">const</span>;
<a name="l00242"></a>00242 
<a name="l00243"></a>00243 
<a name="l00255"></a>00255         <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ac0b072587e955a451fab739dcb538c37" title="Get the accumulations of absolute areas for leaf nodes.">getLeafNodeAbsAreaAccumulations</a>() <span class="keyword">const</span>;
<a name="l00256"></a>00256 
<a name="l00262"></a>00262         <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a8c566a24d35898fb54133cf310276468" title="Get the accumulations of summary values for leaf nodes.">getLeafNodeSummaryAccumulations</a>() <span class="keyword">const</span>;
<a name="l00263"></a>00263         
<a name="l00264"></a>00264     
<a name="l00270"></a>00270         <span class="keyword">virtual</span> std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ab58b8d4c3a8a879930da943dbe2dd62d" title="Output the details of a specific node.">nodePrint</a>(std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00271"></a>00271 
<a name="l00272"></a>00272 
<a name="l00287"></a>00287         <span class="keyword">virtual</span> std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ab2e1cd11ef3dd4424cf491e529ed0fd8" title="Output for a node in a binary tree, tab-delimited.">leafOutputTabs</a>(
<a name="l00288"></a>00288                             std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00289"></a>00289 
<a name="l00290"></a>00290 
<a name="l00291"></a>00291 
<a name="l00299"></a>00299         <span class="keyword">virtual</span> std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ad54a1befc9cff87c02237caeabe84ea5" title="Output for for all leaves of a binary tree.">leavesOutputTabs</a>(
<a name="l00300"></a>00300         std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00301"></a>00301 
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 
<a name="l00311"></a>00311         std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a0f37c9801d51df76b2acf7ea4c45e122" title="Output for for all leaves of a binary tree.">leavesAverageOutputTabs</a>(std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00312"></a>00312 
<a name="l00313"></a>00313 
<a name="l00321"></a>00321         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ad54fcce3c5c904f7ecf0f5042515e1a5" title="Expand leaf node to make two more leaves as children and copy summary down to the children...">nodeExpand</a>(<span class="keywordtype">int</span> comp);
<a name="l00322"></a>00322 
<a name="l00329"></a>00329         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ad54fcce3c5c904f7ecf0f5042515e1a5" title="Expand leaf node to make two more leaves as children and copy summary down to the children...">nodeExpand</a>();
<a name="l00330"></a>00330 
<a name="l00357"></a>00357         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ace8192ce1536f578c73c7aa12bb49e35" title="Try to reunite nodes to form one leaf.">nodeReunite</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> *lChild,
<a name="l00358"></a>00358                                 <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* rChild);
<a name="l00359"></a>00359 
<a name="l00364"></a>00364         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aca275f3faaa0170c0612f368bae4acdf" title="Builds a higher level of a tree from existing nodes. This adopts a left child rather than attempting ...">nodeAdoptLeft</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> *lChild);
<a name="l00365"></a>00365 
<a name="l00371"></a>00371         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a324588afd881d4e695f42f4a286b33a7" title="Builds a higher level of a tree from existing nodes.">nodeAdoptRight</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> *rChild);
<a name="l00372"></a>00372 
<a name="l00373"></a>00373 
<a name="l00383"></a>00383         <span class="keyword">static</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a66a0f1bc3a886c904f8192774b531437" title="Add two collator subpavings together.">addPavings</a>(
<a name="l00384"></a>00384                     <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> lhs,
<a name="l00385"></a>00385                     <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs);
<a name="l00386"></a>00386 
<a name="l00387"></a>00387 
<a name="l00399"></a>00399         <span class="keyword">static</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a79e263c5e6b22baeb2f4e543f33f6d5e" title="Subtract one collator subpavings from another together.">subtractPavings</a>(
<a name="l00400"></a>00400                     <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> lhs,
<a name="l00401"></a>00401                     <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs, <span class="keywordtype">double</span> c);
<a name="l00402"></a>00402 
<a name="l00403"></a>00403 
<a name="l00412"></a>00412         <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ac1d9ea49286eb953b7bc71f89c15f8ec" title="Make a tree which holds differences of this to avg over this.">makeDifferencesToAveragePaving</a>() <span class="keyword">const</span>;
<a name="l00413"></a>00413 
<a name="l00414"></a>00414     
<a name="l00427"></a>00427         real <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a700f585b2b61663330b999f459045822" title="Sum of variances of a scalar value.">getSumVarsAreaScalar</a>() <span class="keyword">const</span>;
<a name="l00428"></a>00428         
<a name="l00429"></a>00429         
<a name="l00442"></a>00442         real <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a4c623e6456d3ced424aebba699c33fd9" title="Sum of variances of a scalar value.">getSumVarsTotalSummarisedValueScalar</a>() <span class="keyword">const</span>;
<a name="l00443"></a>00443 
<a name="l00444"></a>00444 
<a name="l00459"></a>00459         <span class="keywordtype">bool</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ab32959b197c529211921f3dab4e28177" title="Incorporate a Collator subpaving to this summmary.">addPaving</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> spn);
<a name="l00460"></a>00460 
<a name="l00461"></a>00461 
<a name="l00462"></a>00462 
<a name="l00477"></a>00477         <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a48244aa234b59b624ec681eaf966cfe4" title="Incorporate negation of a Collator subpaving to this summmary.">addNegatedPaving</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> spn, <span class="keywordtype">double</span> c);
<a name="l00478"></a>00478       
<a name="l00479"></a>00479      <span class="comment">//--removed then re-inserted</span>
<a name="l00488"></a>00488 <span class="comment"></span>        std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a406e23c3f85680631bd30897fb1cfdc2" title="Output for for all leaves of a binary tree.">leavesAccumulationOutputTabs</a>(
<a name="l00489"></a>00489                                             std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00490"></a>00490                               
<a name="l00491"></a>00491                               
<a name="l00492"></a>00492       
<a name="l00509"></a>00509         std::ostream&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a0ea530d232bf3bb09e6cf44eeeadbfde" title="Output for a node in a binary tree, tab-delimited.">leafAccumulationOutputTabs</a>(
<a name="l00510"></a>00510                             std::ostream &amp;os) <span class="keyword">const</span>;
<a name="l00511"></a>00511     
<a name="l00516"></a>00516         real <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a812d98c784af382c4a697555a7b0445f">nodeAccumulation</a>() <span class="keyword">const</span>;      
<a name="l00517"></a>00517       
<a name="l00520"></a>00520      <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#acdad2b87cf5f979fb24a7aef392a5895">leafMakeNewFhat</a>(<span class="keywordtype">double</span> wt, std::vector&lt;double&gt; &amp; fhatNew);
<a name="l00521"></a>00521      
<a name="l00524"></a>00524       <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a236e44d75b1cf0988a014f7ae33c55b6">leavesMakeNewFhat</a>(<span class="keywordtype">double</span> wt, std::vector&lt;double&gt;  &amp;fhatNew);  
<a name="l00525"></a>00525     
<a name="l00528"></a>00528     std::vector&lt;CollatorSPnode*&gt;&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a827a6e8b21b3c6e8e8f8e9aeca4b622b">getLeaves</a>(std::vector&lt;CollatorSPnode*&gt;&amp; leaves) <span class="keyword">const</span>;
<a name="l00529"></a>00529     
<a name="l00532"></a>00532     std::vector&lt;CollatorSPnode*&gt;&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a7fa06e6f1d278157e7c5c6a9d44e2c07">getAllNodes</a>(std::vector&lt;CollatorSPnode*&gt;&amp; allNodes) <span class="keyword">const</span>;
<a name="l00533"></a>00533     
<a name="l00534"></a>00534     
<a name="l00539"></a>00539     <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a0e8574a8a951a2716cbb29b8e1fbbc33" title="Total the summaries from this node downwards.">totaliseSummaries</a>();
<a name="l00540"></a>00540     
<a name="l00553"></a>00553     <span class="keyword">static</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ae156be7c91a97c25628edc6fcf00e1f9" title="Make a marginalised version of a given node.">_marginalise</a>(
<a name="l00554"></a>00554       <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs,
<a name="l00555"></a>00555       <span class="keyword">const</span> std::vector&lt;int&gt;&amp; outDims);
<a name="l00556"></a>00556       
<a name="l00575"></a>00575     <span class="keyword">static</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>* <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aec7d6bcee79660a09914100f9b878611" title="Make a marginalised version of subpaving with root node rhs.">marginalise</a>(
<a name="l00576"></a>00576         <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs,
<a name="l00577"></a>00577         <span class="keyword">const</span> std::vector&lt;int&gt;&amp; reqDims);
<a name="l00578"></a>00578     
<a name="l00579"></a>00579     
<a name="l00587"></a>00587     <span class="keywordtype">int</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#ab374777116b7e0af8e7100f303e1f97b" title="Find the dimension a node split on.">getSplitDim</a>() <span class="keyword">const</span>;
<a name="l00588"></a>00588    
<a name="l00591"></a>00591     <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a77e75118f31767497377790cd87e3869">getTotalSummary</a>() <span class="keyword">const</span>;
<a name="l00592"></a>00592     
<a name="l00595"></a>00595     <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a8c48fd024a9e569830168a3f301d798e">getTotalSummaryAv</a>() <span class="keyword">const</span>;
<a name="l00596"></a>00596 
<a name="l00597"></a>00597 
<a name="l00598"></a>00598     <span class="comment">// Jenny addition for Gloria&#39;s convergence work</span>
<a name="l00599"></a>00599     <span class="comment">// take a container and return the same container, which has been</span>
<a name="l00600"></a>00600     <span class="comment">// cleared (if necessary) and re-filled with </span>
<a name="l00601"></a>00601     <span class="comment">// L1-distances-to-average, one for each histogram in collation</span>
<a name="l00602"></a>00602     <a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a>&amp; <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a944e27bc584e24e630411e787456ffe0">getL1DistancesToAverage</a>(<a class="code" href="namespacesubpavings.shtml#af2d57bb6e12f4a73169f2e496d6a641f" title="Define type RealVec as a container for reals.">RealVec</a>&amp; container) <span class="keyword">const</span>;
<a name="l00603"></a>00603     
<a name="l00604"></a>00604     <span class="comment">//gat41</span>
<a name="l00611"></a>00611 <span class="comment"></span>       <span class="keywordtype">bool</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#af089a7955e0dd12ef33af3ec4bfc6627" title="Find the node that fulfills the Yatracos condition by comparing the rows of the growing Yatracos matr...">nodeCheckRowSummary</a>(<span class="keywordtype">int</span> theta, <span class="keywordtype">int</span> k);
<a name="l00612"></a>00612 
<a name="l00619"></a>00619        <span class="keywordtype">bool</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aeb5549c6c555a65ee6cf71e779873b67" title="Find the node that fulfills the Yatracos condition by comparing the columns of the growing Yatracos m...">nodeCheckColSummary</a>(<span class="keywordtype">int</span> theta, <span class="keywordtype">int</span> k);
<a name="l00620"></a>00620 
<a name="l00621"></a>00621     
<a name="l00622"></a>00622     <span class="comment">//gat41</span>
<a name="l00630"></a>00630 <span class="comment"></span>      <span class="keywordtype">double</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a72b47c222d49deba3753259d94d730c3" title="Get the delta value for a specific theta.">getNodeDelta</a>(<span class="keywordtype">int</span> thisTheta, <span class="keywordtype">size_t</span> sizeColl);
<a name="l00631"></a>00631       
<a name="l00632"></a>00632       <span class="comment">//gat41</span>
<a name="l00634"></a>00634 <span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#aaf5207af98f7fac37ffe63ab3aec15b9" title="Get the Yatracos set for a particular pair.">getYatSet</a>(
<a name="l00635"></a>00635          std::set&lt;<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>*, std::less&lt;CollatorSPnode*&gt; &gt; &amp; YatSetRow,
<a name="l00636"></a>00636           std::set&lt;<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>*, std::less&lt;CollatorSPnode*&gt; &gt; &amp; YatSetCol,
<a name="l00637"></a>00637           <span class="keywordtype">size_t</span> cand1, <span class="keywordtype">size_t</span> cand2);
<a name="l00638"></a>00638     
<a name="l00639"></a>00639     <span class="comment">//gat41</span>
<a name="l00646"></a>00646 <span class="comment"></span>       <span class="keywordtype">bool</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a9509d8f49407c1b14148f80758f02646" title="Find the node that fulfills the Scheffe set, f_theta1 &gt; f_theta2 for candidates f_theta1 and f_theta2...">getScheffeNode</a>(<span class="keywordtype">int</span> theta1, <span class="keywordtype">int</span> theta2);
<a name="l00647"></a>00647        
<a name="l00648"></a>00648     <span class="comment">//gat41</span>
<a name="l00650"></a>00650 <span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a3c3d4df6f965a2eee9b4c517eb045246" title="Get the Scheffe set for a particular pair.">getScheffeSet</a>(
<a name="l00651"></a>00651          std::set&lt;<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>*, std::less&lt;CollatorSPnode*&gt; &gt; &amp; ScheffeSet,
<a name="l00652"></a>00652           <span class="keywordtype">size_t</span> cand1, <span class="keywordtype">size_t</span> cand2);
<a name="l00653"></a>00653           
<a name="l00654"></a>00654        <span class="comment">//src_trunk_0701</span>
<a name="l00663"></a>00663 <span class="comment"></span>      <span class="keywordtype">void</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml#a3b6cd985321d1ecae0a856ab881d6e62" title="Swap this and another node.">swapCollator</a>(<a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>&amp; spn); <span class="comment">//throw()</span>
<a name="l00664"></a>00664 
<a name="l00665"></a>00665 };
<a name="l00666"></a>00666     <span class="comment">// end of CollatorSPnode class derived from SPnode class</span>
<a name="l00667"></a>00667 
<a name="l00670"></a>00670 std::ostream &amp; <a class="code" href="namespacesubpavings.shtml#a7b0c2cba5230c058d175234c14d4f3af" title="Output the HistDescription object.">operator&lt;&lt;</a>(std::ostream &amp;os,
<a name="l00671"></a>00671                         <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a>&amp; spn);
<a name="l00672"></a>00672 
<a name="l00673"></a>00673 
<a name="l00676"></a>00676 <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a31f92daeace87913f55ad41125368359" title="Comparison of CollatorSPnodes using total of summaries.">nodeCompTotalSummary</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> lhs,
<a name="l00677"></a>00677                             <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs);
<a name="l00678"></a>00678   
<a name="l00682"></a>00682 <span class="keywordtype">bool</span> <a class="code" href="namespacesubpavings.shtml#a3580c30693d7d662e28a0fa26f45f837" title="Comparison of CollatorSPnodes using the average of the total of summaries.">nodeCompTotalSummaryAv</a>(<span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> lhs,
<a name="l00683"></a>00683                             <span class="keyword">const</span> <a class="code" href="classsubpavings_1_1CollatorSPnode.shtml" title="A derived class based on SPnode for creating summaries.">CollatorSPnode</a> * <span class="keyword">const</span> rhs);
<a name="l00684"></a>00684   
<a name="l00685"></a>00685 
<a name="l00686"></a>00686 
<a name="l00687"></a>00687 } <span class="comment">// end namespace subpavings</span>
<a name="l00688"></a>00688 
<a name="l00690"></a>00690 <span class="comment">/*namespace std</span>
<a name="l00691"></a>00691 <span class="comment">{</span>
<a name="l00692"></a>00692 <span class="comment">  template &lt;&gt;</span>
<a name="l00693"></a>00693 <span class="comment">  void swap (CollatorSPnode &amp; s1, </span>
<a name="l00694"></a>00694 <span class="comment">      CollatorSPnode &amp; s2);</span>
<a name="l00695"></a>00695 <span class="comment">}*/</span>
<a name="l00696"></a>00696 
<a name="l00697"></a>00697 <span class="preprocessor">#endif</span>
<a name="l00698"></a>00698 <span class="preprocessor"></span>
</pre></div></div><!-- contents -->
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="collatorspnode_8hpp.shtml">collatorspnode.hpp</a>      </li>

    <li class="footer">Generated on Mon Sep 28 2015 15:58:11 for MRS: A C++ Class Library for Statistical Set Processing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
