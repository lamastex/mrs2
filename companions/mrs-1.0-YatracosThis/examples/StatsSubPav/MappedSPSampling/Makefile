# Makefile.in generated by automake 1.11.3 from Makefile.am.
# examples/StatsSubPav/MappedSPSampling/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/mrs
pkgincludedir = $(includedir)/mrs
pkglibdir = $(libdir)/mrs
pkglibexecdir = $(libexecdir)/mrs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
noinst_PROGRAMS = MappedSPSamplingGaussian$(EXEEXT) \
	MappedSPSamplingTest$(EXEEXT)
subdir = examples/StatsSubPav/MappedSPSampling
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_MappedSPSamplingGaussian_OBJECTS =  \
	MappedSPSamplingGaussian-MappedSPSamplingGaussian.$(OBJEXT) \
	MappedSPSamplingGaussian-GaussianFobj1D.$(OBJEXT) \
	MappedSPSamplingGaussian-GaussianFobj2D.$(OBJEXT) \
	MappedSPSamplingGaussian-GaussianFobj9D.$(OBJEXT) \
	MappedSPSamplingGaussian-GaussianFobj10D.$(OBJEXT) \
	MappedSPSamplingGaussian-GaussianFobj100D.$(OBJEXT) \
	MappedSPSamplingGaussian-RosenFobj2D.$(OBJEXT) \
	MappedSPSamplingGaussian-RosenFobj10D.$(OBJEXT) \
	../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.$(OBJEXT) \
	../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.$(OBJEXT)
MappedSPSamplingGaussian_OBJECTS =  \
	$(am_MappedSPSamplingGaussian_OBJECTS)
MappedSPSamplingGaussian_DEPENDENCIES =  \
	${top_builddir}/srcGloria/libmrs.a
am_MappedSPSamplingTest_OBJECTS =  \
	MappedSPSamplingTest-MappedSPSamplingTest.$(OBJEXT) \
	MappedSPSamplingTest-GaussianFobj1D.$(OBJEXT) \
	MappedSPSamplingTest-GaussianFobj2D.$(OBJEXT) \
	MappedSPSamplingTest-GaussianFobj10D.$(OBJEXT) \
	MappedSPSamplingTest-GaussianFobj9D.$(OBJEXT) \
	MappedSPSamplingTest-GaussianFobj100D.$(OBJEXT) \
	MappedSPSamplingTest-RosenFobj2D.$(OBJEXT) \
	MappedSPSamplingTest-RosenFobj10D.$(OBJEXT) \
	../MCMCGRSims/MappedSPSamplingTest-auto_tools.$(OBJEXT) \
	../MCMCGR/MappedSPSamplingTest-MCMCGRtools.$(OBJEXT)
MappedSPSamplingTest_OBJECTS = $(am_MappedSPSamplingTest_OBJECTS)
MappedSPSamplingTest_DEPENDENCIES =  \
	${top_builddir}/srcGloria/libmrs.a
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(MappedSPSamplingGaussian_SOURCES) \
	$(MappedSPSamplingTest_SOURCES)
DIST_SOURCES = $(MappedSPSamplingGaussian_SOURCES) \
	$(MappedSPSamplingTest_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/home/gat41/cxsc/include
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DX_CONFIG = Doxyfile
DX_DOCDIR = doxygen-doc
DX_DOT = /usr/bin/dot
DX_DOXYGEN = /usr/bin/doxygen
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='mrs' DOCDIR='doxygen-doc' VERSION='2.0' PERL_PATH='/usr/bin/perl' HAVE_DOT='YES' DOT_PATH='/usr/bin' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='YES' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 1
DX_FLAG_dot = 1
DX_FLAG_html = 1
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = mrs
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L/home/gat41/cxsc/lib
LIBOBJS = 
LIBS = -lcxsc -lgsl -lgslcblas -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = mrs
PACKAGE_BUGREPORT = raazesh.sainudiin@gmail.com
PACKAGE_NAME = mrs
PACKAGE_STRING = mrs 2.0
PACKAGE_TARNAME = mrs
PACKAGE_URL = 
PACKAGE_VERSION = 2.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 2.0
abs_builddir = /home/gat41/mrs-1-YatracosThis/examples/StatsSubPav/MappedSPSampling
abs_srcdir = /home/gat41/mrs-1-YatracosThis/examples/StatsSubPav/MappedSPSampling
abs_top_builddir = /home/gat41/mrs-1-YatracosThis
abs_top_srcdir = /home/gat41/mrs-1-YatracosThis
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gat41/mrs-1-YatracosThis/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/gat41/mrs
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
MappedSPSamplingGaussian_SOURCES = MappedSPSamplingGaussian.cpp \
GaussianFobj1D.cpp GaussianFobj1D.hpp GaussianFobj2D.cpp GaussianFobj2D.hpp \
GaussianFobj9D.cpp GaussianFobj9D.hpp \
GaussianFobj10D.cpp GaussianFobj10D.hpp \
GaussianFobj100D.cpp GaussianFobj100D.hpp \
RosenFobj2D.cpp RosenFobj2D.hpp \
RosenFobj10D.cpp RosenFobj10D.hpp \
../MCMCGRSims/auto_tools.hpp ../MCMCGRSims/auto_tools.cpp \
../BivGaussian/dataprep.hpp ../MCMCGR/MCMCGRtools.cpp ../MCMCGR/MCMCGRtools.hpp

MappedSPSamplingTest_SOURCES = MappedSPSamplingTest.cpp \
GaussianFobj1D.cpp GaussianFobj1D.hpp GaussianFobj2D.cpp GaussianFobj2D.hpp \
GaussianFobj10D.cpp GaussianFobj10D.hpp \
GaussianFobj9D.cpp GaussianFobj9D.hpp \
GaussianFobj100D.cpp GaussianFobj100D.hpp \
RosenFobj2D.cpp RosenFobj2D.hpp \
RosenFobj10D.cpp RosenFobj10D.hpp \
../MCMCGRSims/auto_tools.hpp ../MCMCGRSims/auto_tools.cpp \
../BivGaussian/dataprep.hpp ../MCMCGR/MCMCGRtools.cpp ../MCMCGR/MCMCGRtools.hpp


#EXTRA_DIST =
MappedSPSamplingGaussian_CPPFLAGS = -I${top_builddir}/srcGloria -I../BivGaussian -I../MCMCGR \
-I${top_builddir}/srcGloria -I../../targets -I../BivGaussian -I../MCMCGRSims

MappedSPSamplingGaussian_LDADD = -lcxsc ${top_builddir}/srcGloria/libmrs.a
MappedSPSamplingTest_CPPFLAGS = -I${top_builddir}/srcGloria -I../BivGaussian -I../MCMCGR \
-I${top_builddir}/srcGloria -I../../targets -I../BivGaussian -I../MCMCGRSims

MappedSPSamplingTest_LDADD = -lcxsc ${top_builddir}/srcGloria/libmrs.a
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu examples/StatsSubPav/MappedSPSampling/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu examples/StatsSubPav/MappedSPSampling/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
../MCMCGRSims/$(am__dirstamp):
	@$(MKDIR_P) ../MCMCGRSims
	@: > ../MCMCGRSims/$(am__dirstamp)
../MCMCGRSims/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../MCMCGRSims/$(DEPDIR)
	@: > ../MCMCGRSims/$(DEPDIR)/$(am__dirstamp)
../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.$(OBJEXT):  \
	../MCMCGRSims/$(am__dirstamp) \
	../MCMCGRSims/$(DEPDIR)/$(am__dirstamp)
../MCMCGR/$(am__dirstamp):
	@$(MKDIR_P) ../MCMCGR
	@: > ../MCMCGR/$(am__dirstamp)
../MCMCGR/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../MCMCGR/$(DEPDIR)
	@: > ../MCMCGR/$(DEPDIR)/$(am__dirstamp)
../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.$(OBJEXT):  \
	../MCMCGR/$(am__dirstamp) ../MCMCGR/$(DEPDIR)/$(am__dirstamp)
MappedSPSamplingGaussian$(EXEEXT): $(MappedSPSamplingGaussian_OBJECTS) $(MappedSPSamplingGaussian_DEPENDENCIES) $(EXTRA_MappedSPSamplingGaussian_DEPENDENCIES) 
	@rm -f MappedSPSamplingGaussian$(EXEEXT)
	$(CXXLINK) $(MappedSPSamplingGaussian_OBJECTS) $(MappedSPSamplingGaussian_LDADD) $(LIBS)
../MCMCGRSims/MappedSPSamplingTest-auto_tools.$(OBJEXT):  \
	../MCMCGRSims/$(am__dirstamp) \
	../MCMCGRSims/$(DEPDIR)/$(am__dirstamp)
../MCMCGR/MappedSPSamplingTest-MCMCGRtools.$(OBJEXT):  \
	../MCMCGR/$(am__dirstamp) ../MCMCGR/$(DEPDIR)/$(am__dirstamp)
MappedSPSamplingTest$(EXEEXT): $(MappedSPSamplingTest_OBJECTS) $(MappedSPSamplingTest_DEPENDENCIES) $(EXTRA_MappedSPSamplingTest_DEPENDENCIES) 
	@rm -f MappedSPSamplingTest$(EXEEXT)
	$(CXXLINK) $(MappedSPSamplingTest_OBJECTS) $(MappedSPSamplingTest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.$(OBJEXT)
	-rm -f ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.$(OBJEXT)
	-rm -f ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.$(OBJEXT)
	-rm -f ../MCMCGRSims/MappedSPSamplingTest-auto_tools.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Po
include ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Po
include ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Po
include ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Po
include ./$(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Po
include ./$(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Po
include ./$(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Po

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

MappedSPSamplingGaussian-MappedSPSamplingGaussian.o: MappedSPSamplingGaussian.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-MappedSPSamplingGaussian.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Tpo -c -o MappedSPSamplingGaussian-MappedSPSamplingGaussian.o `test -f 'MappedSPSamplingGaussian.cpp' || echo '$(srcdir)/'`MappedSPSamplingGaussian.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Tpo $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Po
#	source='MappedSPSamplingGaussian.cpp' object='MappedSPSamplingGaussian-MappedSPSamplingGaussian.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-MappedSPSamplingGaussian.o `test -f 'MappedSPSamplingGaussian.cpp' || echo '$(srcdir)/'`MappedSPSamplingGaussian.cpp

MappedSPSamplingGaussian-MappedSPSamplingGaussian.obj: MappedSPSamplingGaussian.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-MappedSPSamplingGaussian.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Tpo -c -o MappedSPSamplingGaussian-MappedSPSamplingGaussian.obj `if test -f 'MappedSPSamplingGaussian.cpp'; then $(CYGPATH_W) 'MappedSPSamplingGaussian.cpp'; else $(CYGPATH_W) '$(srcdir)/MappedSPSamplingGaussian.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Tpo $(DEPDIR)/MappedSPSamplingGaussian-MappedSPSamplingGaussian.Po
#	source='MappedSPSamplingGaussian.cpp' object='MappedSPSamplingGaussian-MappedSPSamplingGaussian.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-MappedSPSamplingGaussian.obj `if test -f 'MappedSPSamplingGaussian.cpp'; then $(CYGPATH_W) 'MappedSPSamplingGaussian.cpp'; else $(CYGPATH_W) '$(srcdir)/MappedSPSamplingGaussian.cpp'; fi`

MappedSPSamplingGaussian-GaussianFobj1D.o: GaussianFobj1D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj1D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj1D.o `test -f 'GaussianFobj1D.cpp' || echo '$(srcdir)/'`GaussianFobj1D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Po
#	source='GaussianFobj1D.cpp' object='MappedSPSamplingGaussian-GaussianFobj1D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj1D.o `test -f 'GaussianFobj1D.cpp' || echo '$(srcdir)/'`GaussianFobj1D.cpp

MappedSPSamplingGaussian-GaussianFobj1D.obj: GaussianFobj1D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj1D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj1D.obj `if test -f 'GaussianFobj1D.cpp'; then $(CYGPATH_W) 'GaussianFobj1D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj1D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj1D.Po
#	source='GaussianFobj1D.cpp' object='MappedSPSamplingGaussian-GaussianFobj1D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj1D.obj `if test -f 'GaussianFobj1D.cpp'; then $(CYGPATH_W) 'GaussianFobj1D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj1D.cpp'; fi`

MappedSPSamplingGaussian-GaussianFobj2D.o: GaussianFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj2D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj2D.o `test -f 'GaussianFobj2D.cpp' || echo '$(srcdir)/'`GaussianFobj2D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Po
#	source='GaussianFobj2D.cpp' object='MappedSPSamplingGaussian-GaussianFobj2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj2D.o `test -f 'GaussianFobj2D.cpp' || echo '$(srcdir)/'`GaussianFobj2D.cpp

MappedSPSamplingGaussian-GaussianFobj2D.obj: GaussianFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj2D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj2D.obj `if test -f 'GaussianFobj2D.cpp'; then $(CYGPATH_W) 'GaussianFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj2D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj2D.Po
#	source='GaussianFobj2D.cpp' object='MappedSPSamplingGaussian-GaussianFobj2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj2D.obj `if test -f 'GaussianFobj2D.cpp'; then $(CYGPATH_W) 'GaussianFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj2D.cpp'; fi`

MappedSPSamplingGaussian-GaussianFobj9D.o: GaussianFobj9D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj9D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj9D.o `test -f 'GaussianFobj9D.cpp' || echo '$(srcdir)/'`GaussianFobj9D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Po
#	source='GaussianFobj9D.cpp' object='MappedSPSamplingGaussian-GaussianFobj9D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj9D.o `test -f 'GaussianFobj9D.cpp' || echo '$(srcdir)/'`GaussianFobj9D.cpp

MappedSPSamplingGaussian-GaussianFobj9D.obj: GaussianFobj9D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj9D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj9D.obj `if test -f 'GaussianFobj9D.cpp'; then $(CYGPATH_W) 'GaussianFobj9D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj9D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj9D.Po
#	source='GaussianFobj9D.cpp' object='MappedSPSamplingGaussian-GaussianFobj9D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj9D.obj `if test -f 'GaussianFobj9D.cpp'; then $(CYGPATH_W) 'GaussianFobj9D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj9D.cpp'; fi`

MappedSPSamplingGaussian-GaussianFobj10D.o: GaussianFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj10D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj10D.o `test -f 'GaussianFobj10D.cpp' || echo '$(srcdir)/'`GaussianFobj10D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Po
#	source='GaussianFobj10D.cpp' object='MappedSPSamplingGaussian-GaussianFobj10D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj10D.o `test -f 'GaussianFobj10D.cpp' || echo '$(srcdir)/'`GaussianFobj10D.cpp

MappedSPSamplingGaussian-GaussianFobj10D.obj: GaussianFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj10D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj10D.obj `if test -f 'GaussianFobj10D.cpp'; then $(CYGPATH_W) 'GaussianFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj10D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj10D.Po
#	source='GaussianFobj10D.cpp' object='MappedSPSamplingGaussian-GaussianFobj10D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj10D.obj `if test -f 'GaussianFobj10D.cpp'; then $(CYGPATH_W) 'GaussianFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj10D.cpp'; fi`

MappedSPSamplingGaussian-GaussianFobj100D.o: GaussianFobj100D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj100D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj100D.o `test -f 'GaussianFobj100D.cpp' || echo '$(srcdir)/'`GaussianFobj100D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Po
#	source='GaussianFobj100D.cpp' object='MappedSPSamplingGaussian-GaussianFobj100D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj100D.o `test -f 'GaussianFobj100D.cpp' || echo '$(srcdir)/'`GaussianFobj100D.cpp

MappedSPSamplingGaussian-GaussianFobj100D.obj: GaussianFobj100D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-GaussianFobj100D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Tpo -c -o MappedSPSamplingGaussian-GaussianFobj100D.obj `if test -f 'GaussianFobj100D.cpp'; then $(CYGPATH_W) 'GaussianFobj100D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj100D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-GaussianFobj100D.Po
#	source='GaussianFobj100D.cpp' object='MappedSPSamplingGaussian-GaussianFobj100D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-GaussianFobj100D.obj `if test -f 'GaussianFobj100D.cpp'; then $(CYGPATH_W) 'GaussianFobj100D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj100D.cpp'; fi`

MappedSPSamplingGaussian-RosenFobj2D.o: RosenFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-RosenFobj2D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Tpo -c -o MappedSPSamplingGaussian-RosenFobj2D.o `test -f 'RosenFobj2D.cpp' || echo '$(srcdir)/'`RosenFobj2D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Po
#	source='RosenFobj2D.cpp' object='MappedSPSamplingGaussian-RosenFobj2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-RosenFobj2D.o `test -f 'RosenFobj2D.cpp' || echo '$(srcdir)/'`RosenFobj2D.cpp

MappedSPSamplingGaussian-RosenFobj2D.obj: RosenFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-RosenFobj2D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Tpo -c -o MappedSPSamplingGaussian-RosenFobj2D.obj `if test -f 'RosenFobj2D.cpp'; then $(CYGPATH_W) 'RosenFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj2D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj2D.Po
#	source='RosenFobj2D.cpp' object='MappedSPSamplingGaussian-RosenFobj2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-RosenFobj2D.obj `if test -f 'RosenFobj2D.cpp'; then $(CYGPATH_W) 'RosenFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj2D.cpp'; fi`

MappedSPSamplingGaussian-RosenFobj10D.o: RosenFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-RosenFobj10D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Tpo -c -o MappedSPSamplingGaussian-RosenFobj10D.o `test -f 'RosenFobj10D.cpp' || echo '$(srcdir)/'`RosenFobj10D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Po
#	source='RosenFobj10D.cpp' object='MappedSPSamplingGaussian-RosenFobj10D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-RosenFobj10D.o `test -f 'RosenFobj10D.cpp' || echo '$(srcdir)/'`RosenFobj10D.cpp

MappedSPSamplingGaussian-RosenFobj10D.obj: RosenFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingGaussian-RosenFobj10D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Tpo -c -o MappedSPSamplingGaussian-RosenFobj10D.obj `if test -f 'RosenFobj10D.cpp'; then $(CYGPATH_W) 'RosenFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj10D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Tpo $(DEPDIR)/MappedSPSamplingGaussian-RosenFobj10D.Po
#	source='RosenFobj10D.cpp' object='MappedSPSamplingGaussian-RosenFobj10D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingGaussian-RosenFobj10D.obj `if test -f 'RosenFobj10D.cpp'; then $(CYGPATH_W) 'RosenFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj10D.cpp'; fi`

../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.o: ../MCMCGRSims/auto_tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.o -MD -MP -MF ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Tpo -c -o ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.o `test -f '../MCMCGRSims/auto_tools.cpp' || echo '$(srcdir)/'`../MCMCGRSims/auto_tools.cpp
	$(am__mv) ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Tpo ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Po
#	source='../MCMCGRSims/auto_tools.cpp' object='../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.o `test -f '../MCMCGRSims/auto_tools.cpp' || echo '$(srcdir)/'`../MCMCGRSims/auto_tools.cpp

../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.obj: ../MCMCGRSims/auto_tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.obj -MD -MP -MF ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Tpo -c -o ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.obj `if test -f '../MCMCGRSims/auto_tools.cpp'; then $(CYGPATH_W) '../MCMCGRSims/auto_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGRSims/auto_tools.cpp'; fi`
	$(am__mv) ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Tpo ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingGaussian-auto_tools.Po
#	source='../MCMCGRSims/auto_tools.cpp' object='../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGRSims/MappedSPSamplingGaussian-auto_tools.obj `if test -f '../MCMCGRSims/auto_tools.cpp'; then $(CYGPATH_W) '../MCMCGRSims/auto_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGRSims/auto_tools.cpp'; fi`

../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.o: ../MCMCGR/MCMCGRtools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.o -MD -MP -MF ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Tpo -c -o ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.o `test -f '../MCMCGR/MCMCGRtools.cpp' || echo '$(srcdir)/'`../MCMCGR/MCMCGRtools.cpp
	$(am__mv) ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Tpo ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Po
#	source='../MCMCGR/MCMCGRtools.cpp' object='../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.o `test -f '../MCMCGR/MCMCGRtools.cpp' || echo '$(srcdir)/'`../MCMCGR/MCMCGRtools.cpp

../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.obj: ../MCMCGR/MCMCGRtools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.obj -MD -MP -MF ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Tpo -c -o ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.obj `if test -f '../MCMCGR/MCMCGRtools.cpp'; then $(CYGPATH_W) '../MCMCGR/MCMCGRtools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGR/MCMCGRtools.cpp'; fi`
	$(am__mv) ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Tpo ../MCMCGR/$(DEPDIR)/MappedSPSamplingGaussian-MCMCGRtools.Po
#	source='../MCMCGR/MCMCGRtools.cpp' object='../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingGaussian_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGR/MappedSPSamplingGaussian-MCMCGRtools.obj `if test -f '../MCMCGR/MCMCGRtools.cpp'; then $(CYGPATH_W) '../MCMCGR/MCMCGRtools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGR/MCMCGRtools.cpp'; fi`

MappedSPSamplingTest-MappedSPSamplingTest.o: MappedSPSamplingTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-MappedSPSamplingTest.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Tpo -c -o MappedSPSamplingTest-MappedSPSamplingTest.o `test -f 'MappedSPSamplingTest.cpp' || echo '$(srcdir)/'`MappedSPSamplingTest.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Tpo $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Po
#	source='MappedSPSamplingTest.cpp' object='MappedSPSamplingTest-MappedSPSamplingTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-MappedSPSamplingTest.o `test -f 'MappedSPSamplingTest.cpp' || echo '$(srcdir)/'`MappedSPSamplingTest.cpp

MappedSPSamplingTest-MappedSPSamplingTest.obj: MappedSPSamplingTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-MappedSPSamplingTest.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Tpo -c -o MappedSPSamplingTest-MappedSPSamplingTest.obj `if test -f 'MappedSPSamplingTest.cpp'; then $(CYGPATH_W) 'MappedSPSamplingTest.cpp'; else $(CYGPATH_W) '$(srcdir)/MappedSPSamplingTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Tpo $(DEPDIR)/MappedSPSamplingTest-MappedSPSamplingTest.Po
#	source='MappedSPSamplingTest.cpp' object='MappedSPSamplingTest-MappedSPSamplingTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-MappedSPSamplingTest.obj `if test -f 'MappedSPSamplingTest.cpp'; then $(CYGPATH_W) 'MappedSPSamplingTest.cpp'; else $(CYGPATH_W) '$(srcdir)/MappedSPSamplingTest.cpp'; fi`

MappedSPSamplingTest-GaussianFobj1D.o: GaussianFobj1D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj1D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Tpo -c -o MappedSPSamplingTest-GaussianFobj1D.o `test -f 'GaussianFobj1D.cpp' || echo '$(srcdir)/'`GaussianFobj1D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Po
#	source='GaussianFobj1D.cpp' object='MappedSPSamplingTest-GaussianFobj1D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj1D.o `test -f 'GaussianFobj1D.cpp' || echo '$(srcdir)/'`GaussianFobj1D.cpp

MappedSPSamplingTest-GaussianFobj1D.obj: GaussianFobj1D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj1D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Tpo -c -o MappedSPSamplingTest-GaussianFobj1D.obj `if test -f 'GaussianFobj1D.cpp'; then $(CYGPATH_W) 'GaussianFobj1D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj1D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj1D.Po
#	source='GaussianFobj1D.cpp' object='MappedSPSamplingTest-GaussianFobj1D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj1D.obj `if test -f 'GaussianFobj1D.cpp'; then $(CYGPATH_W) 'GaussianFobj1D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj1D.cpp'; fi`

MappedSPSamplingTest-GaussianFobj2D.o: GaussianFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj2D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Tpo -c -o MappedSPSamplingTest-GaussianFobj2D.o `test -f 'GaussianFobj2D.cpp' || echo '$(srcdir)/'`GaussianFobj2D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Po
#	source='GaussianFobj2D.cpp' object='MappedSPSamplingTest-GaussianFobj2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj2D.o `test -f 'GaussianFobj2D.cpp' || echo '$(srcdir)/'`GaussianFobj2D.cpp

MappedSPSamplingTest-GaussianFobj2D.obj: GaussianFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj2D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Tpo -c -o MappedSPSamplingTest-GaussianFobj2D.obj `if test -f 'GaussianFobj2D.cpp'; then $(CYGPATH_W) 'GaussianFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj2D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj2D.Po
#	source='GaussianFobj2D.cpp' object='MappedSPSamplingTest-GaussianFobj2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj2D.obj `if test -f 'GaussianFobj2D.cpp'; then $(CYGPATH_W) 'GaussianFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj2D.cpp'; fi`

MappedSPSamplingTest-GaussianFobj10D.o: GaussianFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj10D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Tpo -c -o MappedSPSamplingTest-GaussianFobj10D.o `test -f 'GaussianFobj10D.cpp' || echo '$(srcdir)/'`GaussianFobj10D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Po
#	source='GaussianFobj10D.cpp' object='MappedSPSamplingTest-GaussianFobj10D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj10D.o `test -f 'GaussianFobj10D.cpp' || echo '$(srcdir)/'`GaussianFobj10D.cpp

MappedSPSamplingTest-GaussianFobj10D.obj: GaussianFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj10D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Tpo -c -o MappedSPSamplingTest-GaussianFobj10D.obj `if test -f 'GaussianFobj10D.cpp'; then $(CYGPATH_W) 'GaussianFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj10D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj10D.Po
#	source='GaussianFobj10D.cpp' object='MappedSPSamplingTest-GaussianFobj10D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj10D.obj `if test -f 'GaussianFobj10D.cpp'; then $(CYGPATH_W) 'GaussianFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj10D.cpp'; fi`

MappedSPSamplingTest-GaussianFobj9D.o: GaussianFobj9D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj9D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Tpo -c -o MappedSPSamplingTest-GaussianFobj9D.o `test -f 'GaussianFobj9D.cpp' || echo '$(srcdir)/'`GaussianFobj9D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Po
#	source='GaussianFobj9D.cpp' object='MappedSPSamplingTest-GaussianFobj9D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj9D.o `test -f 'GaussianFobj9D.cpp' || echo '$(srcdir)/'`GaussianFobj9D.cpp

MappedSPSamplingTest-GaussianFobj9D.obj: GaussianFobj9D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj9D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Tpo -c -o MappedSPSamplingTest-GaussianFobj9D.obj `if test -f 'GaussianFobj9D.cpp'; then $(CYGPATH_W) 'GaussianFobj9D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj9D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj9D.Po
#	source='GaussianFobj9D.cpp' object='MappedSPSamplingTest-GaussianFobj9D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj9D.obj `if test -f 'GaussianFobj9D.cpp'; then $(CYGPATH_W) 'GaussianFobj9D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj9D.cpp'; fi`

MappedSPSamplingTest-GaussianFobj100D.o: GaussianFobj100D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj100D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Tpo -c -o MappedSPSamplingTest-GaussianFobj100D.o `test -f 'GaussianFobj100D.cpp' || echo '$(srcdir)/'`GaussianFobj100D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Po
#	source='GaussianFobj100D.cpp' object='MappedSPSamplingTest-GaussianFobj100D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj100D.o `test -f 'GaussianFobj100D.cpp' || echo '$(srcdir)/'`GaussianFobj100D.cpp

MappedSPSamplingTest-GaussianFobj100D.obj: GaussianFobj100D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-GaussianFobj100D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Tpo -c -o MappedSPSamplingTest-GaussianFobj100D.obj `if test -f 'GaussianFobj100D.cpp'; then $(CYGPATH_W) 'GaussianFobj100D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj100D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Tpo $(DEPDIR)/MappedSPSamplingTest-GaussianFobj100D.Po
#	source='GaussianFobj100D.cpp' object='MappedSPSamplingTest-GaussianFobj100D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-GaussianFobj100D.obj `if test -f 'GaussianFobj100D.cpp'; then $(CYGPATH_W) 'GaussianFobj100D.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianFobj100D.cpp'; fi`

MappedSPSamplingTest-RosenFobj2D.o: RosenFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-RosenFobj2D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Tpo -c -o MappedSPSamplingTest-RosenFobj2D.o `test -f 'RosenFobj2D.cpp' || echo '$(srcdir)/'`RosenFobj2D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Tpo $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Po
#	source='RosenFobj2D.cpp' object='MappedSPSamplingTest-RosenFobj2D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-RosenFobj2D.o `test -f 'RosenFobj2D.cpp' || echo '$(srcdir)/'`RosenFobj2D.cpp

MappedSPSamplingTest-RosenFobj2D.obj: RosenFobj2D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-RosenFobj2D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Tpo -c -o MappedSPSamplingTest-RosenFobj2D.obj `if test -f 'RosenFobj2D.cpp'; then $(CYGPATH_W) 'RosenFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj2D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Tpo $(DEPDIR)/MappedSPSamplingTest-RosenFobj2D.Po
#	source='RosenFobj2D.cpp' object='MappedSPSamplingTest-RosenFobj2D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-RosenFobj2D.obj `if test -f 'RosenFobj2D.cpp'; then $(CYGPATH_W) 'RosenFobj2D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj2D.cpp'; fi`

MappedSPSamplingTest-RosenFobj10D.o: RosenFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-RosenFobj10D.o -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Tpo -c -o MappedSPSamplingTest-RosenFobj10D.o `test -f 'RosenFobj10D.cpp' || echo '$(srcdir)/'`RosenFobj10D.cpp
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Tpo $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Po
#	source='RosenFobj10D.cpp' object='MappedSPSamplingTest-RosenFobj10D.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-RosenFobj10D.o `test -f 'RosenFobj10D.cpp' || echo '$(srcdir)/'`RosenFobj10D.cpp

MappedSPSamplingTest-RosenFobj10D.obj: RosenFobj10D.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappedSPSamplingTest-RosenFobj10D.obj -MD -MP -MF $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Tpo -c -o MappedSPSamplingTest-RosenFobj10D.obj `if test -f 'RosenFobj10D.cpp'; then $(CYGPATH_W) 'RosenFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj10D.cpp'; fi`
	$(am__mv) $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Tpo $(DEPDIR)/MappedSPSamplingTest-RosenFobj10D.Po
#	source='RosenFobj10D.cpp' object='MappedSPSamplingTest-RosenFobj10D.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappedSPSamplingTest-RosenFobj10D.obj `if test -f 'RosenFobj10D.cpp'; then $(CYGPATH_W) 'RosenFobj10D.cpp'; else $(CYGPATH_W) '$(srcdir)/RosenFobj10D.cpp'; fi`

../MCMCGRSims/MappedSPSamplingTest-auto_tools.o: ../MCMCGRSims/auto_tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGRSims/MappedSPSamplingTest-auto_tools.o -MD -MP -MF ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Tpo -c -o ../MCMCGRSims/MappedSPSamplingTest-auto_tools.o `test -f '../MCMCGRSims/auto_tools.cpp' || echo '$(srcdir)/'`../MCMCGRSims/auto_tools.cpp
	$(am__mv) ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Tpo ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Po
#	source='../MCMCGRSims/auto_tools.cpp' object='../MCMCGRSims/MappedSPSamplingTest-auto_tools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGRSims/MappedSPSamplingTest-auto_tools.o `test -f '../MCMCGRSims/auto_tools.cpp' || echo '$(srcdir)/'`../MCMCGRSims/auto_tools.cpp

../MCMCGRSims/MappedSPSamplingTest-auto_tools.obj: ../MCMCGRSims/auto_tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGRSims/MappedSPSamplingTest-auto_tools.obj -MD -MP -MF ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Tpo -c -o ../MCMCGRSims/MappedSPSamplingTest-auto_tools.obj `if test -f '../MCMCGRSims/auto_tools.cpp'; then $(CYGPATH_W) '../MCMCGRSims/auto_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGRSims/auto_tools.cpp'; fi`
	$(am__mv) ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Tpo ../MCMCGRSims/$(DEPDIR)/MappedSPSamplingTest-auto_tools.Po
#	source='../MCMCGRSims/auto_tools.cpp' object='../MCMCGRSims/MappedSPSamplingTest-auto_tools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGRSims/MappedSPSamplingTest-auto_tools.obj `if test -f '../MCMCGRSims/auto_tools.cpp'; then $(CYGPATH_W) '../MCMCGRSims/auto_tools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGRSims/auto_tools.cpp'; fi`

../MCMCGR/MappedSPSamplingTest-MCMCGRtools.o: ../MCMCGR/MCMCGRtools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.o -MD -MP -MF ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Tpo -c -o ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.o `test -f '../MCMCGR/MCMCGRtools.cpp' || echo '$(srcdir)/'`../MCMCGR/MCMCGRtools.cpp
	$(am__mv) ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Tpo ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Po
#	source='../MCMCGR/MCMCGRtools.cpp' object='../MCMCGR/MappedSPSamplingTest-MCMCGRtools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.o `test -f '../MCMCGR/MCMCGRtools.cpp' || echo '$(srcdir)/'`../MCMCGR/MCMCGRtools.cpp

../MCMCGR/MappedSPSamplingTest-MCMCGRtools.obj: ../MCMCGR/MCMCGRtools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.obj -MD -MP -MF ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Tpo -c -o ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.obj `if test -f '../MCMCGR/MCMCGRtools.cpp'; then $(CYGPATH_W) '../MCMCGR/MCMCGRtools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGR/MCMCGRtools.cpp'; fi`
	$(am__mv) ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Tpo ../MCMCGR/$(DEPDIR)/MappedSPSamplingTest-MCMCGRtools.Po
#	source='../MCMCGR/MCMCGRtools.cpp' object='../MCMCGR/MappedSPSamplingTest-MCMCGRtools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MappedSPSamplingTest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../MCMCGR/MappedSPSamplingTest-MCMCGRtools.obj `if test -f '../MCMCGR/MCMCGRtools.cpp'; then $(CYGPATH_W) '../MCMCGR/MCMCGRtools.cpp'; else $(CYGPATH_W) '$(srcdir)/../MCMCGR/MCMCGRtools.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../MCMCGR/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../MCMCGR/$(am__dirstamp)
	-rm -f ../MCMCGRSims/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../MCMCGRSims/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ../MCMCGR/$(DEPDIR) ../MCMCGRSims/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../MCMCGR/$(DEPDIR) ../MCMCGRSims/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
